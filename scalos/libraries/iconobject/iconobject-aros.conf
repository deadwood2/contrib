##begin config
basename IconObjectBase
libbase IconobjectBase
libbasetype struct IconObjectBase
copyright Copyright ©1999-2022 The Scalos Team
version 40.9
##end config

##begin cdef
#include <intuition/classusr.h>
#include <workbench/workbench.h>

#if !defined(NO_INLINE_STDARG) && !defined(SCALOS_NO_INLINE_STDARG)
#define Convert2IconObjectTags(arg1, ...) \
({ \
    Convert2IconObjectA((arg1), (const struct TagItem *)(IPTR []){ AROS_PP_VARIADIC_CAST2IPTR(__VA_ARGS__) }); \
})
#endif /* !NO_INLINE_STDARG */
##end cdef

##begin cdefprivate
#include <dos/bptr.h>

#include "iconobject_base.h"
##end cdefprivate

##begin functionlist
Object *NewIconObject(CONST_STRPTR name, const struct TagItem *tagList) (A0,A1)
.function LIBNewIconObject
VOID DisposeIconObject(Object *iconObject) (A0)
.function LIBDisposeIconObject
Object *GetDefIconObject(ULONG iconType, const struct TagItem *tagList) (D0,A0)
.function LIBGetDefIconObject
LONG PutIconObject(Object *iconObject, CONST_STRPTR path, const struct TagItem *tagList) (A0,A1,A2)
.function LIBPutIconObject
IPTR IsIconName(CONST_STRPTR fileName) (A0)
.function LIBIsIconName
Object *Convert2IconObject(struct DiskObject *diskObject) (A0)
.function LIBConvert2IconObject
Object *Convert2IconObjectA(struct DiskObject *diskObject, const struct TagItem *tagList) (A0,A1)
.function LIBConvert2IconObjectA
.novararg
##end functionlist
