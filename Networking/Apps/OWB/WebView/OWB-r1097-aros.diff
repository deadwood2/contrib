diff -ruN OWB-r1097/BAL/Events/WebCore/AROS/BCEventHandlerAROS.cpp OWB-r1097.aros/BAL/Events/WebCore/AROS/BCEventHandlerAROS.cpp
--- OWB-r1097/BAL/Events/WebCore/AROS/BCEventHandlerAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Events/WebCore/AROS/BCEventHandlerAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,131 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "EventHandler.h"
+
+#include "ClipboardAROS.h"
+#include "EventNames.h"
+#include "FloatPoint.h"
+#include "FocusController.h"
+#include "Frame.h"
+#include "FrameView.h"
+#include "KeyboardEvent.h"
+#include "MouseEventWithHitTestResults.h"
+#include "BALBase.h"
+#include "Logging.h"
+#include "Page.h"
+#include "PlatformKeyboardEvent.h"
+#include "PlatformWheelEvent.h"
+#include "RenderWidget.h"
+#include "Scrollbar.h"
+
+namespace WebCore {
+
+const double EventHandler::TextDragDelay = 0.0;
+
+bool EventHandler::tabsToAllControls(KeyboardEvent* event) const
+{
+    // We always allow tabs to all controls
+    return true;
+}
+
+void EventHandler::focusDocumentView()
+{
+    if (Page* page = m_frame->page())
+        page->focusController()->setFocusedFrame(m_frame);
+}
+
+bool EventHandler::passWidgetMouseDownEventToWidget(const MouseEventWithHitTestResults& event)
+{
+    // Figure out which view to send the event to.
+    RenderObject* target = event.targetNode() ? event.targetNode()->renderer() : 0;
+    if (!target || !target->isWidget())
+        return false;
+
+    return passMouseDownEventToWidget(static_cast<RenderWidget*>(target)->widget());
+}
+
+bool EventHandler::passWidgetMouseDownEventToWidget(RenderWidget* renderWidget)
+{
+    return passMouseDownEventToWidget(renderWidget->widget());
+}
+
+bool EventHandler::passMouseDownEventToWidget(Widget* widget)
+{
+    NotImplemented();
+    return false;
+}
+
+bool EventHandler::eventActivatedView(const PlatformMouseEvent&) const
+{
+    //GTK+ activation is not necessarily tied to mouse events, so it may
+    //not make sense to implement this
+
+    NotImplemented();
+    return false;
+}
+
+bool EventHandler::passWheelEventToWidget(PlatformWheelEvent& event, Widget* widget)
+{
+    ASSERT(widget);
+    if (!widget->isFrameView())
+        return false;
+
+    return static_cast<FrameView*>(widget)->frame()->eventHandler()->handleWheelEvent(event);
+}
+
+PassRefPtr<Clipboard> EventHandler::createDraggingClipboard() const
+{
+    return ClipboardBal::create(ClipboardWritable, true);
+}
+
+bool EventHandler::passMousePressEventToSubframe(MouseEventWithHitTestResults& mev, Frame* subframe)
+{
+    subframe->eventHandler()->handleMousePressEvent(mev.event());
+    return true;
+}
+
+bool EventHandler::passMouseMoveEventToSubframe(MouseEventWithHitTestResults& mev, Frame* subframe, HitTestResult* hoveredNode)
+{
+    subframe->eventHandler()->handleMouseMoveEvent(mev.event(), hoveredNode);
+    return true;
+}
+
+bool EventHandler::passMouseReleaseEventToSubframe(MouseEventWithHitTestResults& mev, Frame* subframe)
+{
+    subframe->eventHandler()->handleMouseReleaseEvent(mev.event());
+    return true;
+}
+
+unsigned EventHandler::accessKeyModifiers()
+{
+    return PlatformKeyboardEvent::AltKey;
+}
+ 
+}
diff -ruN OWB-r1097/BAL/Events/WebCore/AROS/BCEventLoopAROS.cpp OWB-r1097.aros/BAL/Events/WebCore/AROS/BCEventLoopAROS.cpp
--- OWB-r1097/BAL/Events/WebCore/AROS/BCEventLoopAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Events/WebCore/AROS/BCEventLoopAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,32 @@
+/*
+ * Copyright (C) 2008 Nuanti Ltd.
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Library General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Library General Public License for more details.
+ *
+ * You should have received a copy of the GNU Library General Public License
+ * along with this library; see the file COPYING.LIB.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#include "config.h"
+#include "EventLoop.h"
+
+
+namespace WebCore {
+
+void EventLoop::cycle()
+{
+     //SDL_Event event;
+     //SDL_WaitEvent(&event);
+}
+
+} // namespace WebCore
diff -ruN OWB-r1097/BAL/Events/WebCore/AROS/BCKeyboardCodesAROS.h OWB-r1097.aros/BAL/Events/WebCore/AROS/BCKeyboardCodesAROS.h
--- OWB-r1097/BAL/Events/WebCore/AROS/BCKeyboardCodesAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Events/WebCore/AROS/BCKeyboardCodesAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,545 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef KeyboardCodes_h
+#define KeyboardCodes_h
+
+namespace WebCore {
+
+// VK_LBUTTON (01) Left mouse button
+// VK_RBUTTON (02) Right mouse button
+// VK_CANCEL (03) Control-break processing
+// VK_MBUTTON (04) Middle mouse button (three-button mouse)
+// VK_XBUTTON1 (05)
+// VK_XBUTTON2 (06)
+
+// VK_BACK (08) BACKSPACE key
+const int VK_BACK = 0x08;
+
+// VK_TAB (09) TAB key
+const int VK_TAB = 0x09;
+
+// VK_CLEAR (0C) CLEAR key
+const int VK_CLEAR = 0x0C;
+
+// VK_RETURN (0D)
+const int VK_RETURN = 0x0D;
+
+// VK_SHIFT (10) SHIFT key
+const int VK_SHIFT = 0x10;
+
+// VK_CONTROL (11) CTRL key
+const int VK_CONTROL = 0x11;
+
+// VK_MENU (12) ALT key
+const int VK_MENU = 0x12;
+
+// VK_PAUSE (13) PAUSE key
+const int VK_PAUSE = 0x13;
+
+// VK_CAPITAL (14) CAPS LOCK key
+const int VK_CAPITAL = 0x14;
+
+// VK_KANA (15) Input Method Editor (IME) Kana mode
+const int VK_KANA = 0x15;
+
+// VK_HANGUEL (15) IME Hanguel mode (maintained for compatibility; use VK_HANGUL)
+// VK_HANGUL (15) IME Hangul mode
+const int VK_HANGUL = 0x15;
+
+// VK_JUNJA (17) IME Junja mode
+const int VK_JUNJA = 0x17;
+
+// VK_FINAL (18) IME final mode
+const int VK_FINAL = 0x18;
+
+// VK_HANJA (19) IME Hanja mode
+const int VK_HANJA = 0x19;
+
+// VK_KANJI (19) IME Kanji mode
+const int VK_KANJI = 0x19;
+
+// VK_ESCAPE (1B) ESC key
+const int VK_ESCAPE = 0x1B;
+
+// VK_CONVERT (1C) IME convert
+const int VK_CONVERT = 0x1C;
+
+// VK_NONCONVERT (1D) IME nonconvert
+const int VK_NONCONVERT = 0x1D;
+
+// VK_ACCEPT (1E) IME accept
+const int VK_ACCEPT = 0x1E;
+
+// VK_MODECHANGE (1F) IME mode change request
+const int VK_MODECHANGE = 0x1F;
+
+// VK_SPACE (20) SPACEBAR
+const int VK_SPACE = 0x20;
+
+// VK_PRIOR (21) PAGE UP key
+const int VK_PRIOR = 0x21;
+
+// VK_NEXT (22) PAGE DOWN key
+const int VK_NEXT = 0x22;
+
+// VK_END (23) END key
+const int VK_END = 0x23;
+
+// VK_HOME (24) HOME key
+const int VK_HOME = 0x24;
+
+// VK_LEFT (25) LEFT ARROW key
+const int VK_LEFT = 0x25;
+
+// VK_UP (26) UP ARROW key
+const int VK_UP = 0x26;
+
+// VK_RIGHT (27) RIGHT ARROW key
+const int VK_RIGHT = 0x27;
+
+// VK_DOWN (28) DOWN ARROW key
+const int VK_DOWN = 0x28;
+
+// VK_SELECT (29) SELECT key
+const int VK_SELECT = 0x29;
+
+// VK_PRINT (2A) PRINT key
+const int VK_PRINT = 0x2A;
+
+// VK_EXECUTE (2B) EXECUTE key
+const int VK_EXECUTE = 0x2B;
+
+// VK_SNAPSHOT (2C) PRINT SCREEN key
+const int VK_SNAPSHOT = 0x2C;
+
+// VK_INSERT (2D) INS key
+const int VK_INSERT = 0x2D;
+
+// VK_DELETE (2E) DEL key
+const int VK_DELETE = 0x2E;
+
+// VK_HELP (2F) HELP key
+const int VK_HELP = 0x2F;
+
+// (30) 0 key
+const int VK_0 = 0x30;
+
+// (31) 1 key
+const int VK_1 = 0x31;
+
+// (32) 2 key
+const int VK_2 = 0x32;
+
+// (33) 3 key
+const int VK_3 = 0x33;
+
+// (34) 4 key
+const int VK_4 = 0x34;
+
+// (35) 5 key;
+
+const int VK_5 = 0x35;
+
+// (36) 6 key
+const int VK_6 = 0x36;
+
+// (37) 7 key
+const int VK_7 = 0x37;
+
+// (38) 8 key
+const int VK_8 = 0x38;
+
+// (39) 9 key
+const int VK_9 = 0x39;
+
+// (41) A key
+const int VK_A = 0x41;
+
+// (42) B key
+const int VK_B = 0x42;
+
+// (43) C key
+const int VK_C = 0x43;
+
+// (44) D key
+const int VK_D = 0x44;
+
+// (45) E key
+const int VK_E = 0x45;
+
+// (46) F key
+const int VK_F = 0x46;
+
+// (47) G key
+const int VK_G = 0x47;
+
+// (48) H key
+const int VK_H = 0x48;
+
+// (49) I key
+const int VK_I = 0x49;
+
+// (4A) J key
+const int VK_J = 0x4A;
+
+// (4B) K key
+const int VK_K = 0x4B;
+
+// (4C) L key
+const int VK_L = 0x4C;
+
+// (4D) M key
+const int VK_M = 0x4D;
+
+// (4E) N key
+const int VK_N = 0x4E;
+
+// (4F) O key
+const int VK_O = 0x4F;
+
+// (50) P key
+const int VK_P = 0x50;
+
+// (51) Q key
+const int VK_Q = 0x51;
+
+// (52) R key
+const int VK_R = 0x52;
+
+// (53) S key
+const int VK_S = 0x53;
+
+// (54) T key
+const int VK_T = 0x54;
+
+// (55) U key
+const int VK_U = 0x55;
+
+// (56) V key
+const int VK_V = 0x56;
+
+// (57) W key
+const int VK_W = 0x57;
+
+// (58) X key
+const int VK_X = 0x58;
+
+// (59) Y key
+const int VK_Y = 0x59;
+
+// (5A) Z key
+const int VK_Z = 0x5A;
+
+// VK_LWIN (5B) Left Windows key (Microsoft Natural keyboard)
+const int VK_LWIN = 0x5B;
+
+// VK_RWIN (5C) Right Windows key (Natural keyboard)
+const int VK_RWIN = 0x5C;
+
+// VK_APPS (5D) Applications key (Natural keyboard)
+const int VK_APPS = 0x5D;
+
+// VK_SLEEP (5F) Computer Sleep key
+const int VK_SLEEP = 0x5F;
+
+// VK_NUMPAD0 (60) Numeric keypad 0 key
+const int VK_NUMPAD0 = 0x60;
+
+// VK_NUMPAD1 (61) Numeric keypad 1 key
+const int VK_NUMPAD1 = 0x61;
+
+// VK_NUMPAD2 (62) Numeric keypad 2 key
+const int VK_NUMPAD2 = 0x62;
+
+// VK_NUMPAD3 (63) Numeric keypad 3 key
+const int VK_NUMPAD3 = 0x63;
+
+// VK_NUMPAD4 (64) Numeric keypad 4 key
+const int VK_NUMPAD4 = 0x64;
+
+// VK_NUMPAD5 (65) Numeric keypad 5 key
+const int VK_NUMPAD5 = 0x65;
+
+// VK_NUMPAD6 (66) Numeric keypad 6 key
+const int VK_NUMPAD6 = 0x66;
+
+// VK_NUMPAD7 (67) Numeric keypad 7 key
+const int VK_NUMPAD7 = 0x67;
+
+// VK_NUMPAD8 (68) Numeric keypad 8 key
+const int VK_NUMPAD8 = 0x68;
+
+// VK_NUMPAD9 (69) Numeric keypad 9 key
+const int VK_NUMPAD9 = 0x69;
+
+// VK_MULTIPLY (6A) Multiply key
+const int VK_MULTIPLY = 0x6A;
+
+// VK_ADD (6B) Add key
+const int VK_ADD = 0x6B;
+
+// VK_SEPARATOR (6C) Separator key
+const int VK_SEPARATOR = 0x6C;
+
+// VK_SUBTRACT (6D) Subtract key
+const int VK_SUBTRACT = 0x6D;
+
+// VK_DECIMAL (6E) Decimal key
+const int VK_DECIMAL = 0x6E;
+
+// VK_DIVIDE (6F) Divide key
+const int VK_DIVIDE = 0x6F;
+
+// VK_F1 (70) F1 key
+const int VK_F1 = 0x70;
+
+// VK_F2 (71) F2 key
+const int VK_F2 = 0x71;
+
+// VK_F3 (72) F3 key
+const int VK_F3 = 0x72;
+
+// VK_F4 (73) F4 key
+const int VK_F4 = 0x73;
+
+// VK_F5 (74) F5 key
+const int VK_F5 = 0x74;
+
+// VK_F6 (75) F6 key
+const int VK_F6 = 0x75;
+
+// VK_F7 (76) F7 key
+const int VK_F7 = 0x76;
+
+// VK_F8 (77) F8 key
+const int VK_F8 = 0x77;
+
+// VK_F9 (78) F9 key
+const int VK_F9 = 0x78;
+
+// VK_F10 (79) F10 key
+const int VK_F10 = 0x79;
+
+// VK_F11 (7A) F11 key
+const int VK_F11 = 0x7A;
+
+// VK_F12 (7B) F12 key
+const int VK_F12 = 0x7B;
+
+// VK_F13 (7C) F13 key
+const int VK_F13 = 0x7C;
+
+// VK_F14 (7D) F14 key
+const int VK_F14 = 0x7D;
+
+// VK_F15 (7E) F15 key
+const int VK_F15 = 0x7E;
+
+// VK_F16 (7F) F16 key
+const int VK_F16 = 0x7F;
+
+// VK_F17 (80H) F17 key
+const int VK_F17 = 0x80;
+
+// VK_F18 (81H) F18 key
+const int VK_F18 = 0x81;
+
+// VK_F19 (82H) F19 key
+const int VK_F19 = 0x82;
+
+// VK_F20 (83H) F20 key
+const int VK_F20 = 0x83;
+
+// VK_F21 (84H) F21 key
+const int VK_F21 = 0x84;
+
+// VK_F22 (85H) F22 key
+const int VK_F22 = 0x85;
+
+// VK_F23 (86H) F23 key
+const int VK_F23 = 0x86;
+
+// VK_F24 (87H) F24 key
+const int VK_F24 = 0x87;
+
+// VK_NUMLOCK (90) NUM LOCK key
+const int VK_NUMLOCK = 0x90;
+
+// VK_SCROLL (91) SCROLL LOCK key
+const int VK_SCROLL = 0x91;
+
+// VK_LSHIFT (A0) Left SHIFT key
+const int VK_LSHIFT = 0xA0;
+
+// VK_RSHIFT (A1) Right SHIFT key
+const int VK_RSHIFT = 0xA1;
+
+// VK_LCONTROL (A2) Left CONTROL key
+const int VK_LCONTROL = 0xA2;
+
+// VK_RCONTROL (A3) Right CONTROL key
+const int VK_RCONTROL = 0xA3;
+
+// VK_LMENU (A4) Left MENU key
+const int VK_LMENU = 0xA4;
+
+// VK_RMENU (A5) Right MENU key
+const int VK_RMENU = 0xA5;
+
+// VK_BROWSER_BACK (A6) Windows 2000/XP: Browser Back key
+const int VK_BROWSER_BACK = 0xA6;
+
+// VK_BROWSER_FORWARD (A7) Windows 2000/XP: Browser Forward key
+const int VK_BROWSER_FORWARD = 0xA7;
+
+// VK_BROWSER_REFRESH (A8) Windows 2000/XP: Browser Refresh key
+const int VK_BROWSER_REFRESH = 0xA8;
+
+// VK_BROWSER_STOP (A9) Windows 2000/XP: Browser Stop key
+const int VK_BROWSER_STOP = 0xA9;
+
+// VK_BROWSER_SEARCH (AA) Windows 2000/XP: Browser Search key
+const int VK_BROWSER_SEARCH = 0xAA;
+
+// VK_BROWSER_FAVORITES (AB) Windows 2000/XP: Browser Favorites key
+const int VK_BROWSER_FAVORITES = 0xAB;
+
+// VK_BROWSER_HOME (AC) Windows 2000/XP: Browser Start and Home key
+const int VK_BROWSER_HOME = 0xAC;
+
+// VK_VOLUME_MUTE (AD) Windows 2000/XP: Volume Mute key
+const int VK_VOLUME_MUTE = 0xAD;
+
+// VK_VOLUME_DOWN (AE) Windows 2000/XP: Volume Down key
+const int VK_VOLUME_DOWN = 0xAE;
+
+// VK_VOLUME_UP (AF) Windows 2000/XP: Volume Up key
+const int VK_VOLUME_UP = 0xAF;
+
+// VK_MEDIA_NEXT_TRACK (B0) Windows 2000/XP: Next Track key
+const int VK_MEDIA_NEXT_TRACK = 0xB0;
+
+// VK_MEDIA_PREV_TRACK (B1) Windows 2000/XP: Previous Track key
+const int VK_MEDIA_PREV_TRACK = 0xB1;
+
+// VK_MEDIA_STOP (B2) Windows 2000/XP: Stop Media key
+const int VK_MEDIA_STOP = 0xB2;
+
+// VK_MEDIA_PLAY_PAUSE (B3) Windows 2000/XP: Play/Pause Media key
+const int VK_MEDIA_PLAY_PAUSE = 0xB3;
+
+// VK_LAUNCH_MAIL (B4) Windows 2000/XP: Start Mail key
+const int VK_MEDIA_LAUNCH_MAIL = 0xB4;
+
+// VK_LAUNCH_MEDIA_SELECT (B5) Windows 2000/XP: Select Media key
+const int VK_MEDIA_LAUNCH_MEDIA_SELECT = 0xB5;
+
+// VK_LAUNCH_APP1 (B6) Windows 2000/XP: Start Application 1 key
+const int VK_MEDIA_LAUNCH_APP1 = 0xB6;
+
+// VK_LAUNCH_APP2 (B7) Windows 2000/XP: Start Application 2 key
+const int VK_MEDIA_LAUNCH_APP2 = 0xB7;
+
+// VK_OEM_1 (BA) Used for miscellaneous characters; it can vary by keyboard. Windows 2000/XP: For the US standard keyboard, the ';:' key
+const int VK_OEM_1 = 0xBA;
+
+// VK_OEM_PLUS (BB) Windows 2000/XP: For any country/region, the '+' key
+const int VK_OEM_PLUS = 0xBB;
+
+// VK_OEM_COMMA (BC) Windows 2000/XP: For any country/region, the ',' key
+const int VK_OEM_COMMA = 0xBC;
+
+// VK_OEM_MINUS (BD) Windows 2000/XP: For any country/region, the '-' key
+const int VK_OEM_MINUS = 0xBD;
+
+// VK_OEM_PERIOD (BE) Windows 2000/XP: For any country/region, the '.' key
+const int VK_OEM_PERIOD = 0xBE;
+
+// VK_OEM_2 (BF) Used for miscellaneous characters; it can vary by keyboard. Windows 2000/XP: For the US standard keyboard, the '/?' key
+const int VK_OEM_2 = 0xBF;
+
+// VK_OEM_3 (C0) Used for miscellaneous characters; it can vary by keyboard. Windows 2000/XP: For the US standard keyboard, the '`~' key
+const int VK_OEM_3 = 0xC0;
+
+// VK_OEM_4 (DB) Used for miscellaneous characters; it can vary by keyboard. Windows 2000/XP: For the US standard keyboard, the '[{' key
+const int VK_OEM_4 = 0xDB;
+
+// VK_OEM_5 (DC) Used for miscellaneous characters; it can vary by keyboard. Windows 2000/XP: For the US standard keyboard, the '\|' key
+const int VK_OEM_5 = 0xDC;
+
+// VK_OEM_6 (DD) Used for miscellaneous characters; it can vary by keyboard. Windows 2000/XP: For the US standard keyboard, the ']}' key
+const int VK_OEM_6 = 0xDD;
+
+// VK_OEM_7 (DE) Used for miscellaneous characters; it can vary by keyboard. Windows 2000/XP: For the US standard keyboard, the 'single-quote/double-quote' key
+const int VK_OEM_7 = 0xDE;
+
+// VK_OEM_8 (DF) Used for miscellaneous characters; it can vary by keyboard.
+const int VK_OEM_8 = 0xDF;
+
+// VK_OEM_102 (E2) Windows 2000/XP: Either the angle bracket key or the backslash key on the RT 102-key keyboard
+const int VK_OEM_102 = 0xE2;
+
+// VK_PROCESSKEY (E5) Windows 95/98/Me, Windows NT 4.0, Windows 2000/XP: IME PROCESS key
+const int VK_PROCESSKEY = 0xE5;
+
+// VK_PACKET (E7) Windows 2000/XP: Used to pass Unicode characters as if they were keystrokes. The VK_PACKET key is the low word of a 32-bit Virtual Key value used for non-keyboard input methods. For more information, see Remark in KEYBDINPUT,SendInput, WM_KEYDOWN, and WM_KEYUP
+const int VK_PACKET = 0xE7;
+
+// VK_ATTN (F6) Attn key
+const int VK_ATTN = 0xF6;
+
+// VK_CRSEL (F7) CrSel key
+const int VK_CRSEL = 0xF7;
+
+// VK_EXSEL (F8) ExSel key
+const int VK_EXSEL = 0xF8;
+
+// VK_EREOF (F9) Erase EOF key
+const int VK_EREOF = 0xF9;
+
+// VK_PLAY (FA) Play key
+const int VK_PLAY = 0xFA;
+
+// VK_ZOOM (FB) Zoom key
+const int VK_ZOOM = 0xFB;
+
+// VK_NONAME (FC) Reserved for future use
+const int VK_NONAME = 0xFC;
+
+// VK_PA1 (FD) PA1 key
+const int VK_PA1 = 0xFD;
+
+// VK_OEM_CLEAR (FE) Clear key
+const int VK_OEM_CLEAR = 0xFE;
+
+const int VK_UNKNOWN = 0;
+
+}
+
+#endif
diff -ruN OWB-r1097/BAL/Events/WebCore/AROS/BCPlatformKeyboardEventAROS.cpp OWB-r1097.aros/BAL/Events/WebCore/AROS/BCPlatformKeyboardEventAROS.cpp
--- OWB-r1097/BAL/Events/WebCore/AROS/BCPlatformKeyboardEventAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Events/WebCore/AROS/BCPlatformKeyboardEventAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,300 @@
+/*
+ * Copyright (C) 2008 Joerg Strohmayer
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials http://gaara-fr.com/index2.phpprovided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "PlatformKeyboardEvent.h"
+#include "NotImplemented.h"
+
+#include "KeyboardCodes.h"
+#include "BALBase.h"
+#include "TextEncoding.h"
+#include "Unicode.h"
+#include "CString.h"
+
+extern "C" {
+
+#include <proto/locale.h>
+#include <proto/diskfont.h>
+#include <diskfont/diskfonttag.h>
+#include <intuition/intuition.h>
+#include <proto/exec.h>
+#include <exec/io.h>
+#include <proto/console.h>
+#include <devices/rawkeycodes.h>
+#include <aros/debug.h>
+#include <proto/codesets.h>
+#include <libraries/codesets.h>
+
+struct Device *ConsoleDevice;
+
+}
+
+namespace WebCore {
+
+static struct Locale *locale;
+static unsigned *unicode_map;
+struct IOStdReq cioreq;
+
+
+static __attribute__((constructor)) void unicode_map_init(void)
+{
+    cioreq.io_Message.mn_Length = sizeof(struct IOStdReq);
+    OpenDevice ("console.device", -1, (struct IORequest *)&cioreq, 0);
+    ConsoleDevice = cioreq.io_Device;
+
+    locale = OpenLocale(NULL);
+}
+
+static unsigned local2unicode(unsigned c)
+{
+
+    return c;
+}
+
+static __attribute__((destructor)) void unicode_map_exit(void)
+{
+    if (ConsoleDevice)
+        CloseDevice ((struct IORequest *)&cioreq);
+    if (locale)
+        CloseLocale(locale);
+}
+
+static int ConvertAmigaKeyToVirtualKey(struct IntuiMessage *im)
+{
+    if (IDCMP_RAWKEY == im->Class) {
+        switch (im->Code & ~IECODE_UP_PREFIX) {
+        case RAWKEY_RETURN:    return VK_RETURN;  break;
+        case RAWKEY_TAB:       return VK_TAB;     break;
+        case RAWKEY_INSERT:    return VK_INSERT;  break;
+        case RAWKEY_PAGEUP:    return VK_PRIOR;   break;
+        case RAWKEY_PAGEDOWN:  return VK_NEXT;    break;
+        case RAWKEY_F11:       return VK_F11;     break;
+        case RAWKEY_UP:        return VK_UP;      break;
+        case RAWKEY_DOWN:      return VK_DOWN;    break;
+        case RAWKEY_RIGHT:     return VK_RIGHT;   break;
+        case RAWKEY_LEFT:      return VK_LEFT;    break;
+        case RAWKEY_F1:        return VK_F1;      break;
+        case RAWKEY_F2:        return VK_F2;      break;
+        case RAWKEY_F3:        return VK_F3;      break;
+        case RAWKEY_F4:        return VK_F4;      break;
+        case RAWKEY_F5:        return VK_F5;      break;
+        case RAWKEY_F6:        return VK_F6;      break;
+        case RAWKEY_F7:        return VK_F7;      break;
+        case RAWKEY_F8:        return VK_F8;      break;
+        case RAWKEY_F9:        return VK_F9;      break;
+        case RAWKEY_F10:       return VK_F10;     break;
+        case RAWKEY_HELP:      return VK_HELP;    break;
+        case RAWKEY_LSHIFT:    return VK_SHIFT;   break;
+        case RAWKEY_RSHIFT:    return VK_SHIFT;   break;
+        case RAWKEY_CAPSLOCK:  return VK_CAPITAL; break;
+        case RAWKEY_LCONTROL:  return VK_CONTROL; break;
+        case RAWKEY_LALT:      return VK_MENU;    break;
+        case RAWKEY_RALT:      return VK_MENU;    break;
+//        case RAWKEY_MENU:      return VK_MENU;    break;
+        case RAWKEY_LAMIGA:    return VK_LWIN;    break;
+        case RAWKEY_RAMIGA:    return VK_RWIN;    break;
+//        case RAWKEY_PRINTSCR:  return VK_PRINT;   break;
+//        case RAWKEY_BREAK:     return VK_PAUSE;   break;
+        case RAWKEY_F12:       return VK_F12;     break;
+        case RAWKEY_HOME:      return VK_HOME;    break;
+        case RAWKEY_END:       return VK_END;     break;
+        case 0x79:             return VK_NUMLOCK; break;
+        case RAWKEY_DELETE:    return VK_DELETE;  break;
+        case RAWKEY_BACKSPACE: return VK_BACK;    break;
+        case RAWKEY_ESCAPE:    return VK_ESCAPE;  break;
+        case RAWKEY_Q:         return VK_Q;       break;
+        case RAWKEY_W:         return VK_W;       break;
+        case RAWKEY_E:         return VK_E;       break;
+        case RAWKEY_R:         return VK_R;       break;
+        case RAWKEY_T:         return VK_T;       break;
+        case RAWKEY_Y:         return VK_Y;       break;
+        case RAWKEY_U:         return VK_U;       break;
+        case RAWKEY_I:         return VK_I;       break;
+        case RAWKEY_O:         return VK_O;       break;
+        case RAWKEY_P:         return VK_P;       break;
+        case RAWKEY_A:         return VK_A;       break;
+        case RAWKEY_S:         return VK_S;       break;
+        case RAWKEY_D:         return VK_D;       break;
+        case RAWKEY_F:         return VK_F;       break;
+        case RAWKEY_G:         return VK_G;       break;
+        case RAWKEY_H:         return VK_H;       break;
+        case RAWKEY_J:         return VK_J;       break;
+        case RAWKEY_K:         return VK_K;       break;
+        case RAWKEY_L:         return VK_L;       break;
+        case RAWKEY_Z:         return VK_Z;       break;
+        case RAWKEY_X:         return VK_X;       break;
+        case RAWKEY_C:         return VK_C;       break;
+        case RAWKEY_V:         return VK_V;       break;
+        case RAWKEY_B:         return VK_B;       break;
+        case RAWKEY_N:         return VK_N;       break;
+        case RAWKEY_M:         return VK_M;       break;
+        case RAWKEY_1:         return VK_1;       break;
+        case RAWKEY_2:         return VK_2;       break;
+        case RAWKEY_3:         return VK_3;       break;
+        case RAWKEY_4:         return VK_4;       break;
+        case RAWKEY_5:         return VK_5;       break;
+        case RAWKEY_6:         return VK_6;       break;
+        case RAWKEY_7:         return VK_7;       break;
+        case RAWKEY_8:         return VK_8;       break;
+        case RAWKEY_9:         return VK_9;       break;
+        case RAWKEY_0:         return VK_0;       break;
+
+        default:
+            if ((im->Code & ~IECODE_UP_PREFIX) >= RAWKEY_SPACE)
+                D(bug(stderr, "%s class IDCMP_RAWKEY code 0x%04x not handled\n", __PRETTY_FUNCTION__, im->Code));
+            return 0;
+        break;
+        }
+    }
+    else
+        return 0;
+}
+
+static WebCore::String keyIdentifierForAmigaKeyCode(struct IntuiMessage *im)
+{
+    if (IDCMP_RAWKEY == im->Class) {
+        switch (im->Code & ~IECODE_UP_PREFIX) {
+        case RAWKEY_TAB:       return "U+0009";   break;
+        case RAWKEY_INSERT:    return "Insert";   break;
+        case RAWKEY_PAGEUP:    return "PageUp";   break;
+        case RAWKEY_PAGEDOWN:  return "PageDown"; break;
+        case RAWKEY_F11:       return "F11";      break;
+        case RAWKEY_UP:        return "Up";       break;
+        case RAWKEY_DOWN:      return "Down";     break;
+        case RAWKEY_RIGHT:     return "Right";    break;
+        case RAWKEY_LEFT:      return "Left";     break;
+        case RAWKEY_F1:        return "F1";       break;
+        case RAWKEY_F2:        return "F2";       break;
+        case RAWKEY_F3:        return "F3";       break;
+        case RAWKEY_F4:        return "F4";       break;
+        case RAWKEY_F5:        return "F5";       break;
+        case RAWKEY_F6:        return "F6";       break;
+        case RAWKEY_F7:        return "F7";       break;
+        case RAWKEY_F8:        return "F8";       break;
+        case RAWKEY_F9:        return "F9";       break;
+        case RAWKEY_F10:       return "F10";      break;
+        case RAWKEY_HELP:      return "Help";     break;
+        case RAWKEY_LALT:      return "Alt";      break;
+        case RAWKEY_RALT:      return "Alt";      break;
+//        case RAWKEY_MENU:      return "Alt";      break;
+//        case RAWKEY_BREAK:     return "Pause";    break;
+        case RAWKEY_F12:       return "F12";      break;
+        case RAWKEY_HOME:      return "Home";     break;
+        case RAWKEY_END:       return "End";      break;
+        case RAWKEY_RETURN:    return "Enter";    break;
+        default:               return "U+0000";   break;
+        /* TODO ctr+a -> "U+0001" */
+        /* TODO ctr+c -> "U+0003" */
+        /* TODO ctr+v -> "U+0016" */
+        /* TODO ctr+x -> "U+0018" */
+        }
+    }
+    else
+        return "U+0000";
+}
+
+PlatformKeyboardEvent::PlatformKeyboardEvent(struct IntuiMessage* event)
+    : m_type(KeyDown)
+    , m_autoRepeat(false)
+    , m_windowsVirtualKeyCode(ConvertAmigaKeyToVirtualKey(event))
+    , m_isKeypad(event->Qualifier & IEQUALIFIER_NUMERICPAD)
+    , m_shiftKey(event->Qualifier & (IEQUALIFIER_LSHIFT | IEQUALIFIER_RSHIFT))
+    , m_ctrlKey(event->Qualifier & IEQUALIFIER_CONTROL)
+    , m_altKey(event->Qualifier & (IEQUALIFIER_LALT | IEQUALIFIER_RALT))
+    , m_metaKey(event->Qualifier & (IEQUALIFIER_LCOMMAND | IEQUALIFIER_RCOMMAND))
+    , m_arosEventKey(event)
+{
+    char buffer[10];
+    if (IDCMP_RAWKEY == event->Class) {
+        int length;
+        struct InputEvent ievent;
+        if (event->Code & IECODE_UP_PREFIX)
+            m_type = KeyUp;
+
+        ievent.ie_Class = IECLASS_RAWKEY;
+        ievent.ie_Code = event->Code;
+        ievent.ie_Qualifier = event->Qualifier;
+        ievent.ie_position.ie_addr = *((APTR*)event->IAddress);
+
+        length = RawKeyConvert(&ievent, buffer, sizeof(buffer) - 1, NULL);
+        if(length >= 0)
+            buffer[length] = 0;
+        if(length > 1)
+            buffer[0] = 0;
+    }
+
+    if(buffer[0])
+    {
+        struct codeset *utfCodeset = CodesetsFindA("UTF-8", NULL);
+        if(utfCodeset)
+        {
+            char *keyConverted = CodesetsConvertStr(CSA_Source, (IPTR) buffer, (IPTR) CSA_DestCodeset, (IPTR) utfCodeset, TAG_END);
+            if(keyConverted)
+            {
+                D(bug("%2x converted to %2x%2x\n", buffer[0], keyConverted[0], keyConverted[1]));
+                m_text = String::fromUTF8(keyConverted);
+                m_unmodifiedText = String::fromUTF8(keyConverted);
+                CodesetsFreeA(keyConverted, NULL);
+            }
+        }
+    }
+
+    m_keyIdentifier = keyIdentifierForAmigaKeyCode(event);
+}
+
+void PlatformKeyboardEvent::disambiguateKeyDownEvent(Type type, bool backwardCompatibilityMode)
+{
+    // Can only change type from KeyDown to RawKeyDown or Char, as we lack information for other conversions.
+    ASSERT(m_type == KeyDown);
+    m_type = type;
+
+    if (backwardCompatibilityMode)
+        return;
+
+    if (type == RawKeyDown) {
+        m_text = String();
+        m_unmodifiedText = String();
+    } else {
+        m_keyIdentifier = String();
+        m_windowsVirtualKeyCode = 0;
+    }
+}
+
+bool PlatformKeyboardEvent::currentCapsLockState()
+{
+    NotImplemented();
+    return false;
+}
+
+struct IntuiMessage* PlatformKeyboardEvent::arosEventKey() const
+{
+    return m_arosEventKey;
+}
+
+}
diff -ruN OWB-r1097/BAL/Events/WebCore/AROS/BCPlatformMouseEventAROS.cpp OWB-r1097.aros/BAL/Events/WebCore/AROS/BCPlatformMouseEventAROS.cpp
--- OWB-r1097/BAL/Events/WebCore/AROS/BCPlatformMouseEventAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Events/WebCore/AROS/BCPlatformMouseEventAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,84 @@
+/*
+ * Copyright (C) 2008 Joerg Strohmayer
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "PlatformMouseEvent.h"
+
+#include "CurrentTime.h"
+#include "Assertions.h"
+#include <intuition/intuition.h>
+
+namespace WebCore {
+
+// FIXME: Would be even better to figure out which modifier is Alt instead of always using GDK_MOD1_MASK.
+
+// Keep this in sync with the other platform event constructors
+PlatformMouseEvent::PlatformMouseEvent(BalEventButton *event)
+{
+    //printf("PlatformMouseEvent eventbutton x=%d y=%d\n", (int)event->x, (int)event->y);
+    m_timestamp = WTF::currentTime();
+    m_position = IntPoint((int)event->MouseX, (int)event->MouseY);
+    m_globalPosition = IntPoint((int)event->MouseX, (int)event->MouseY);
+    m_shiftKey = event->Qualifier & (IEQUALIFIER_LSHIFT | IEQUALIFIER_RSHIFT);
+    m_ctrlKey = event->Qualifier & IEQUALIFIER_CONTROL;
+    m_altKey = event->Qualifier & (IEQUALIFIER_LALT | IEQUALIFIER_RALT);
+    m_metaKey = event->Qualifier & (IEQUALIFIER_LCOMMAND | IEQUALIFIER_RCOMMAND);
+
+    m_eventType = MouseEventMoved;
+    m_button = NoButton;
+    m_clickCount = 0;
+
+    if (IDCMP_MOUSEBUTTONS == event->Class) {
+        if ((event->Code & ~IECODE_UP_PREFIX) == IECODE_LBUTTON)
+           m_button = LeftButton;
+        else if ((event->Code & ~IECODE_UP_PREFIX) == IECODE_MBUTTON)
+            m_button = MiddleButton;
+        else if ((event->Code & ~IECODE_UP_PREFIX) == IECODE_RBUTTON)
+            m_button = RightButton;
+
+        if (NoButton != m_button) {
+            if (event->Code & IECODE_UP_PREFIX) {
+                m_eventType = MouseEventReleased;
+                m_clickCount = 0;
+            } else {
+                m_eventType = MouseEventPressed;
+                m_clickCount = 1;
+            }
+        }
+    } else { // IDCMP_MOUSEMOVE == event->Class
+        if (event->Qualifier & IEQUALIFIER_LEFTBUTTON)
+            m_button = LeftButton;
+        else if (event->Qualifier & IEQUALIFIER_MIDBUTTON)
+            m_button = MiddleButton;
+        else if (event->Qualifier & IEQUALIFIER_RBUTTON)
+            m_button = RightButton;
+    }
+}
+
+}
diff -ruN OWB-r1097/BAL/Events/WebCore/AROS/BCPlatformWheelEventAROS.cpp OWB-r1097.aros/BAL/Events/WebCore/AROS/BCPlatformWheelEventAROS.cpp
--- OWB-r1097/BAL/Events/WebCore/AROS/BCPlatformWheelEventAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Events/WebCore/AROS/BCPlatformWheelEventAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,109 @@
+/*
+ * Copyright (C) 2009 Stanislaw Szymczyk
+ * Copyright (C) 2008 Joerg Strohmayer
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "PlatformWheelEvent.h"
+#include "Scrollbar.h"
+#include <cstdio>
+#include <intuition/intuition.h>
+#include <devices/rawkeycodes.h>
+
+namespace WebCore {
+
+// Keep this in sync with the other platform event constructors
+PlatformWheelEvent::PlatformWheelEvent(BalEventScroll* event)
+{
+    static const float delta = 1;
+
+    m_deltaX = 0;
+    m_deltaY = 0;
+
+    m_shiftKey = event->Qualifier & (IEQUALIFIER_LSHIFT | IEQUALIFIER_RSHIFT);
+    m_ctrlKey  = event->Qualifier & IEQUALIFIER_CONTROL;
+    m_altKey   = event->Qualifier & (IEQUALIFIER_LALT | IEQUALIFIER_RALT);
+    m_metaKey  = event->Qualifier & (IEQUALIFIER_LCOMMAND | IEQUALIFIER_RCOMMAND);
+
+    if (event->Class == IDCMP_RAWKEY)
+    {
+        double deltax, deltay;
+        int wheelX = 0, wheelY = 0;
+
+        switch(event->Code)
+        {
+             case RAWKEY_NM_WHEEL_UP:
+                wheelY = -1;
+                break;
+             case RAWKEY_NM_WHEEL_DOWN:
+                wheelY = 1;
+                break;
+             case RAWKEY_NM_WHEEL_LEFT:
+                wheelX = -1;
+                break;
+             case RAWKEY_NM_WHEEL_RIGHT:
+                wheelX = 1;
+                break;
+        }
+
+        /* Like on AmigaOS4 port */
+        if (m_ctrlKey) {
+            m_granularity = ScrollByPixelWheelEvent;
+            deltax = wheelX * -10000;
+            deltay = wheelY * -10000;
+        } else if (m_shiftKey) {
+            m_granularity = ScrollByPageWheelEvent;
+            deltax = (int)wheelX * event->IDCMPWindow->Width / -50;
+            deltay = (int)wheelY * event->IDCMPWindow->Height / -50;
+        } else {
+            m_granularity = ScrollByPixelWheelEvent;
+            deltax = wheelX * static_cast<float>(cScrollbarPixelsPerLineStep);;
+            deltay = wheelY * -static_cast<float>(cScrollbarPixelsPerLineStep);;
+        }
+
+        if (m_altKey) {
+            double temp;
+            temp   = deltax;
+            deltax = deltay;
+            deltay = temp;
+        }
+
+        m_deltaX = deltax;
+        m_deltaY = deltay;
+    }
+    m_wheelTicksX = m_deltaX;
+    m_wheelTicksY = m_deltaY;
+
+    m_position = IntPoint((int)event->MouseX, (int)event->MouseY);
+    m_globalPosition = IntPoint((int)event->MouseX, (int)event->MouseY);
+    m_isAccepted = false;
+
+}
+
+}
+
diff -ruN OWB-r1097/BAL/Events/WebCore/CMakeLists.txt OWB-r1097.aros/BAL/Events/WebCore/CMakeLists.txt
--- OWB-r1097/BAL/Events/WebCore/CMakeLists.txt	2009-10-06 09:13:04.000000000 +0100
+++ OWB-r1097.aros/BAL/Events/WebCore/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -28,3 +28,9 @@
 
     aux_source_directory(${BAL_DIR}/Events/WebCore/SDL WEBCORE_SRC)
 endif(USE_GRAPHICS_SDL)
+
+if(USE_GRAPHICS_AROS)
+    create_include_link(${BAL_DIR}/Events/WebCore/AROS BAL)
+
+    aux_source_directory(${BAL_DIR}/Events/WebCore/AROS WEBCORE_SRC)
+endif(USE_GRAPHICS_AROS)
diff -ruN OWB-r1097/BAL/Events/WebCore/WK/BCPlatformKeyboardEventWK.h OWB-r1097.aros/BAL/Events/WebCore/WK/BCPlatformKeyboardEventWK.h
--- OWB-r1097/BAL/Events/WebCore/WK/BCPlatformKeyboardEventWK.h	2009-08-14 16:35:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Events/WebCore/WK/BCPlatformKeyboardEventWK.h	2017-04-01 14:57:02.745938516 +0100
@@ -63,6 +63,10 @@
 class BMessage;
 #endif
 
+#if PLATFORM(AROS)
+struct IntuiMessage;
+#endif
+
 namespace WebCore {
 
     class PlatformKeyboardEvent {
@@ -156,6 +160,11 @@
         PlatformKeyboardEvent(BMessage*);
 #endif
 
+#if PLATFORM(AROS)
+        PlatformKeyboardEvent(struct IntuiMessage*);
+        struct IntuiMessage* arosEventKey() const;
+#endif
+
 #if PLATFORM(WIN) || PLATFORM(CHROMIUM)
         bool isSystemKey() const { return m_isSystemKey; }
 #endif
@@ -186,6 +195,9 @@
 #if PLATFORM(QT)
         QKeyEvent* m_qtEvent;
 #endif
+#if PLATFORM(AROS)
+        struct IntuiMessage* m_arosEventKey;
+#endif
     };
 
 } // namespace WebCore
diff -ruN OWB-r1097/BAL/Events/WebCore/WK/BCPlatformMouseEventWK.h OWB-r1097.aros/BAL/Events/WebCore/WK/BCPlatformMouseEventWK.h
--- OWB-r1097/BAL/Events/WebCore/WK/BCPlatformMouseEventWK.h	2009-09-15 07:54:14.000000000 +0100
+++ OWB-r1097.aros/BAL/Events/WebCore/WK/BCPlatformMouseEventWK.h	2017-04-01 14:57:02.745938516 +0100
@@ -36,7 +36,6 @@
 #if PLATFORM(QT)
 QT_BEGIN_NAMESPACE
 class QInputEvent;
-class QGraphicsSceneMouseEvent;
 QT_END_NAMESPACE
 #endif
 
@@ -55,6 +54,10 @@
 class BMessage;
 #endif
 
+#if PLATFORM(AROS)
+struct IntuiMessage;
+#endif
+
 namespace WebCore {
     
     // These button numbers match the ones used in the DOM API, 0 through 2, except for NoButton which isn't specified.
@@ -138,6 +141,10 @@
         PlatformMouseEvent(const BMessage*);
 #endif
 
+#if PLATFORM(AROS)
+        PlatformMouseEvent(struct IntuiMessage*);
+#endif
+
     protected:
         IntPoint m_position;
         IntPoint m_globalPosition;
diff -ruN OWB-r1097/BAL/Events/WebCore/WK/BCPlatformWheelEventWK.h OWB-r1097.aros/BAL/Events/WebCore/WK/BCPlatformWheelEventWK.h
--- OWB-r1097/BAL/Events/WebCore/WK/BCPlatformWheelEventWK.h	2009-09-25 16:25:08.000000000 +0100
+++ OWB-r1097.aros/BAL/Events/WebCore/WK/BCPlatformWheelEventWK.h	2017-04-01 14:57:02.745938516 +0100
@@ -54,6 +54,10 @@
 class BMessage;
 #endif
 
+#if PLATFORM(AROS)
+struct IntuiMessage;
+#endif
+
 namespace WebCore {
 
     class FloatPoint;
@@ -129,6 +133,10 @@
         PlatformWheelEvent(BMessage*);
 #endif
 
+#if PLATFORM(AROS)
+        PlatformWheelEvent(struct IntuiMessage*);
+#endif
+
     protected:
         IntPoint m_position;
         IntPoint m_globalPosition;
diff -ruN OWB-r1097/BAL/Facilities/WebCore/AROS/BCFileChooserAROS.cpp OWB-r1097.aros/BAL/Facilities/WebCore/AROS/BCFileChooserAROS.cpp
--- OWB-r1097/BAL/Facilities/WebCore/AROS/BCFileChooserAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Facilities/WebCore/AROS/BCFileChooserAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,53 @@
+/*
+ * Copyright (C) 2009 Stanislaw Szymczyk
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "FileChooser.h"
+
+#include "CString.h"
+#include "Document.h"
+#include "FrameView.h"
+#include "Icon.h"
+#include "LocalizedStrings.h"
+#include "StringTruncator.h"
+
+#include <cstdio>
+
+namespace WebCore {
+
+String FileChooser::basenameForWidth(const Font& font, int width) const
+{
+    String name = fileButtonNoFileSelectedLabel();
+
+    if(m_filenames.size() > 0)
+        name = m_filenames[0];
+    return StringTruncator::rightTruncate(name, width, font, false);
+}
+
+}
diff -ruN OWB-r1097/BAL/Facilities/WebCore/AROS/BCLanguageAROS.cpp OWB-r1097.aros/BAL/Facilities/WebCore/AROS/BCLanguageAROS.cpp
--- OWB-r1097/BAL/Facilities/WebCore/AROS/BCLanguageAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Facilities/WebCore/AROS/BCLanguageAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,43 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "Language.h"
+
+#include "CString.h"
+#include "PlatformString.h"
+
+
+namespace WebCore {
+
+String defaultLanguage()
+{
+    return "en";
+}
+
+}
diff -ruN OWB-r1097/BAL/Facilities/WebCore/AROS/BCLanguageAROS.h OWB-r1097.aros/BAL/Facilities/WebCore/AROS/BCLanguageAROS.h
--- OWB-r1097/BAL/Facilities/WebCore/AROS/BCLanguageAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Facilities/WebCore/AROS/BCLanguageAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,40 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef Language_h
+#define Language_h
+
+namespace WebCore {
+
+    class String;
+
+    String defaultLanguage();
+
+}
+
+#endif
diff -ruN OWB-r1097/BAL/Facilities/WebCore/AROS/BCLoggingAROS.cpp OWB-r1097.aros/BAL/Facilities/WebCore/AROS/BCLoggingAROS.cpp
--- OWB-r1097/BAL/Facilities/WebCore/AROS/BCLoggingAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Facilities/WebCore/AROS/BCLoggingAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,41 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "Logging.h"
+
+namespace WebCore {
+
+void InitializeLoggingChannelsIfNecessary()
+{
+    // FIXME: Add a way for the user to specify which
+    // logs he/she would like turned on.
+    LogNotYetImplemented.state = WTFLogChannelOn;
+}
+
+} // namespace WebCore
diff -ruN OWB-r1097/BAL/Facilities/WebCore/AROS/BCMIMETypeRegistryAROS.cpp OWB-r1097.aros/BAL/Facilities/WebCore/AROS/BCMIMETypeRegistryAROS.cpp
--- OWB-r1097/BAL/Facilities/WebCore/AROS/BCMIMETypeRegistryAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Facilities/WebCore/AROS/BCMIMETypeRegistryAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,75 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "MIMETypeRegistry.h"
+
+namespace WebCore {
+
+struct ExtensionMap {
+    const char* extension;
+    const char* mimeType;
+};
+
+static const ExtensionMap extensionMap [] = {
+    { "bmp", "image/bmp" },
+    { "css", "text/css" },
+    { "gif", "image/gif" },
+    { "html", "text/html" },
+    { "ico", "image/x-icon" },
+    { "jpeg", "image/jpeg" },
+    { "jpg", "image/jpeg" },
+    { "js", "application/x-javascript" },
+    { "pdf", "application/pdf" },
+    { "png", "image/png" },
+    { "rss", "application/rss+xml" },
+    { "svg", "image/svg+xml" },
+    { "text", "text/plain" },
+    { "txt", "text/plain" },
+    { "xbm", "image/x-xbitmap" },
+    { "xml", "text/xml" },
+    { "xsl", "text/xsl" },
+    { "xhtml", "application/xhtml+xml" },
+    { "iff", "image/x-ilbm" },
+    { 0, 0 }
+};
+
+String MIMETypeRegistry::getMIMETypeForExtension(const String &ext)
+{
+    String s = ext.lower();
+    const ExtensionMap *e = extensionMap;
+    while (e->extension) {
+        if (s == e->extension)
+            return e->mimeType;
+        ++e;
+    }
+
+    return String();
+}
+
+}
diff -ruN OWB-r1097/BAL/Facilities/WebCore/AROS/BCSSLKeyGeneratorAROS.cpp OWB-r1097.aros/BAL/Facilities/WebCore/AROS/BCSSLKeyGeneratorAROS.cpp
--- OWB-r1097/BAL/Facilities/WebCore/AROS/BCSSLKeyGeneratorAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Facilities/WebCore/AROS/BCSSLKeyGeneratorAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,53 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "SSLKeyGenerator.h"
+
+#include "NotImplemented.h"
+
+namespace WebCore {
+
+Vector<String> supportedKeySizes()
+{ 
+    notImplemented();
+    return Vector<String>();
+}
+
+String signedPublicKeyAndChallengeString(unsigned keySizeIndex, const String &challengeString, const KURL &url)
+{
+    return String();
+}
+
+void getSupportedKeySizes(Vector<String>&)
+{
+    notImplemented();
+}
+
+}
+
diff -ruN OWB-r1097/BAL/Facilities/WebCore/CMakeLists.txt OWB-r1097.aros/BAL/Facilities/WebCore/CMakeLists.txt
--- OWB-r1097/BAL/Facilities/WebCore/CMakeLists.txt	2009-10-06 09:13:04.000000000 +0100
+++ OWB-r1097.aros/BAL/Facilities/WebCore/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -38,3 +38,9 @@
 
     aux_source_directory(${BAL_DIR}/Facilities/WebCore/SDL WEBCORE_SRC)   
 endif(USE_GRAPHICS_SDL)
+
+if(USE_GRAPHICS_AROS)
+    create_include_link(${BAL_DIR}/Facilities/WebCore/AROS BAL)
+
+    aux_source_directory(${BAL_DIR}/Facilities/WebCore/AROS WEBCORE_SRC)   
+endif(USE_GRAPHICS_AROS)
diff -ruN OWB-r1097/BAL/Facilities/WebCore/WK/BCMIMETypeRegistryWK.cpp OWB-r1097.aros/BAL/Facilities/WebCore/WK/BCMIMETypeRegistryWK.cpp
--- OWB-r1097/BAL/Facilities/WebCore/WK/BCMIMETypeRegistryWK.cpp	2009-09-15 07:54:14.000000000 +0100
+++ OWB-r1097.aros/BAL/Facilities/WebCore/WK/BCMIMETypeRegistryWK.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -121,6 +121,9 @@
         "image/bmp",
         "image/vnd.microsoft.icon",    // ico
         "image/x-icon",    // ico
+#if PLATFORM(AROS)
+        "image/x-ilbm",
+#endif
         "image/x-xbitmap"  // xbm
     };
     for (size_t i = 0; i < sizeof(types) / sizeof(types[0]); ++i) {
diff -ruN OWB-r1097/BAL/Filesystem/WebCore/Posix/BCFileSystemPosix.cpp OWB-r1097.aros/BAL/Filesystem/WebCore/Posix/BCFileSystemPosix.cpp
--- OWB-r1097/BAL/Filesystem/WebCore/Posix/BCFileSystemPosix.cpp	2009-05-06 16:25:57.000000000 +0100
+++ OWB-r1097.aros/BAL/Filesystem/WebCore/Posix/BCFileSystemPosix.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -128,7 +128,7 @@
 
 String pathByAppendingComponent(const String& path, const String& component)
 {
-    if (path.endsWith("/"))
+    if (path.endsWith("/") || path.endsWith(":") || path.length() == 0)
         return path + component;
     else
         return path + "/" + component;
diff -ruN OWB-r1097/BAL/Fonts/WebCore/Freetype/BCFontCacheFreetype.cpp OWB-r1097.aros/BAL/Fonts/WebCore/Freetype/BCFontCacheFreetype.cpp
--- OWB-r1097/BAL/Fonts/WebCore/Freetype/BCFontCacheFreetype.cpp	2009-06-05 14:35:11.000000000 +0100
+++ OWB-r1097.aros/BAL/Fonts/WebCore/Freetype/BCFontCacheFreetype.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -41,8 +41,13 @@
 
 void FontCache::platformInit()
 {
-    if (!FontPlatformData::init())
+    if(!FontPlatformData::m_initialized)
+	FontPlatformData::m_initialized = FontPlatformData::init();
+
+    if (!FontPlatformData::m_initialized)
+    {
         ASSERT_NOT_REACHED();
+    }
 }
 
 const SimpleFontData* FontCache::getFontDataForCharacters(const Font& font, const UChar* characters, int length)
@@ -52,7 +57,10 @@
     FontPlatformData* prim = const_cast<FontPlatformData*>(&font.primaryFont()->m_platformData);
 
     if (!prim->m_fallbacks)
+    {
         prim->m_fallbacks = FcFontSort(NULL, prim->m_pattern, FcTrue, NULL, &fresult);
+	FontPlatformData::m_fontsets.insert(prim->m_fallbacks);
+    }
 
     FcFontSet* fs = prim->m_fallbacks;
     
@@ -64,6 +72,7 @@
     FT_Face face;
     for (int i = 0; i < fs->nfont; i++) {
         FcPattern* fin = FcFontRenderPrepare(0, prim->m_pattern, fs->fonts[i]);
+	FontPlatformData::m_patterns.insert(fin);
 
         if (FcPatternGetString(fin, FC_FILE, 0, &fc_filename) != FcResultMatch)
             continue;
@@ -75,9 +84,10 @@
 
         if (FT_Error error = FT_New_Face(library, filename, id, &face))
             continue;
+        FontPlatformData::m_faces.insert(face);
 
         // FIXME: is it really necessary ?
-        FT_Set_Pixel_Sizes(face, 0, static_cast<uint> (font.fontDescription().computedSize()));
+        FT_Set_Pixel_Sizes(face, 0, static_cast<unsigned int> (font.fontDescription().computedSize()));
 
         FontPlatformData alternateFont(face, font.fontDescription().computedPixelSize(), false, false);
         // FIXME: FT_Done_Face(face); we should clean the face correctly the FT_Face but we can't do that here...
diff -ruN OWB-r1097/BAL/Fonts/WebCore/Freetype/BCFontFreetype.cpp OWB-r1097.aros/BAL/Fonts/WebCore/Freetype/BCFontFreetype.cpp
--- OWB-r1097/BAL/Fonts/WebCore/Freetype/BCFontFreetype.cpp	2009-06-05 14:35:11.000000000 +0100
+++ OWB-r1097.aros/BAL/Fonts/WebCore/Freetype/BCFontFreetype.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -55,7 +55,7 @@
     Uint32 rmask, gmask, bmask, amask;
     // SDL interprets each pixel as a 32-bit number, so our masks must depend
     // on the endianness (byte order) of the machine
-#if !PLATFORM(AMIGAOS4) && SDL_BYTEORDER == SDL_BIG_ENDIAN
+#if !PLATFORM(AMIGAOS4) && !PLATFORM(AROS) && SDL_BYTEORDER == SDL_BIG_ENDIAN
     rmask = 0xff000000;
     gmask = 0x00ff0000;
     bmask = 0x0000ff00;
@@ -200,7 +200,7 @@
     SDL_Surface* img;
     Uint32 rmask, gmask, bmask, amask;
 
-#if !PLATFORM(AMIGAOS4) && SDL_BYTEORDER == SDL_BIG_ENDIAN
+#if !PLATFORM(AMIGAOS4) && !PLATFORM(AROS) && SDL_BYTEORDER == SDL_BIG_ENDIAN
     rmask = 0xff000000;
     gmask = 0x00ff0000;
     bmask = 0x0000ff00;
@@ -212,7 +212,7 @@
     amask = 0xff000000;
 #endif
    
-    img = SDL_CreateRGBSurface(SDL_HWSURFACE | SDL_SRCALPHA, width, height, 
+    img = SDL_CreateRGBSurface(SDL_SRCALPHA, width, height, 
                                32, rmask, gmask, bmask, amask);
     //the surface can be null if the width or the height are too big, it's a sdl limitation.
     if (!img) {
diff -ruN OWB-r1097/BAL/Fonts/WebCore/Freetype/BCFontPlatformDataFreetype.cpp OWB-r1097.aros/BAL/Fonts/WebCore/Freetype/BCFontPlatformDataFreetype.cpp
--- OWB-r1097/BAL/Fonts/WebCore/Freetype/BCFontPlatformDataFreetype.cpp	2009-07-27 12:56:09.000000000 +0100
+++ OWB-r1097.aros/BAL/Fonts/WebCore/Freetype/BCFontPlatformDataFreetype.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -34,6 +34,7 @@
 #include "FontDescription.h"
 #include <ft2build.h>
 #include FT_FREETYPE_H
+#include <aros/debug.h>
 
 #include <fontconfig/fontconfig.h>
 
@@ -42,6 +43,10 @@
 namespace WebCore {
 FT_Library FontPlatformData::m_library = 0;
 
+std::set<FT_Face> FontPlatformData::m_faces;
+std::set<FcPattern*> FontPlatformData::m_patterns;
+std::set<FcFontSet*> FontPlatformData::m_fontsets;
+
 FontPlatformData::FontPlatformData(const FontDescription& fontDescription, const AtomicString& familyName)
     : m_pattern(0)
     , m_fallbacks(0)
@@ -51,7 +56,8 @@
     , m_scaledFont(0)
     , m_face(0)
 {
-    FontPlatformData::init();
+    if(!m_initialized)
+	m_initialized = FontPlatformData::init();
 
     CString familyNameString = familyName.string().utf8();
     const char* fcfamily = familyNameString.data();
@@ -106,7 +112,7 @@
 
     FcResult fcresult;
     m_pattern = FcFontMatch(config, pattern, &fcresult);
-    FcPatternReference(m_pattern);
+    m_patterns.insert(m_pattern);
     // FIXME: should we set some default font?
     if (!m_pattern)
         goto freePattern;
@@ -135,6 +141,7 @@
         m_face = 0;
         goto freePattern;
     }
+    m_faces.insert(m_face);
 
     FT_Set_Pixel_Sizes(m_face, 0, static_cast<unsigned int> (fontDescription.computedSize()));
     //DBGML(MODULE_FONTS, LEVEL_INFO, "open font %s with size %d\n", filename, static_cast<uint> (fontDescription.specifiedSize()));
@@ -151,6 +158,7 @@
     , m_syntheticBold(bold)
     , m_syntheticOblique(italic)
     , m_scaledFont(0)
+    , m_face(0)
 {
 }
 
@@ -165,6 +173,8 @@
     m_face = fontFace;
 }
 
+bool FontPlatformData::m_initialized = false;
+
 bool FontPlatformData::init()
 {
     static bool initialized = false;
@@ -184,9 +194,33 @@
         return false;
     }
     initialized = true;
+    
+    atexit(FontPlatformData::destroy);
+    
     return true;
 }
 
+void FontPlatformData::destroy()
+{
+    for(std::set<FT_Face>::iterator it = m_faces.begin(); it != m_faces.end(); it++)
+    {
+	FT_Done_Face(*it);
+    }
+    for(std::set<FcFontSet*>::iterator it = m_fontsets.begin(); it != m_fontsets.end(); it++)
+    {
+	FcFontSetDestroy(*it);
+    }
+    for(std::set<FcPattern*>::iterator it = m_patterns.begin(); it != m_patterns.end(); it++)
+    {
+	FcPatternDestroy(*it);
+    }
+    if(m_initialized)
+    {
+        FT_Done_FreeType(m_library);
+        FcFini();
+    }
+}
+
 FontPlatformData::~FontPlatformData()
 {
 }
diff -ruN OWB-r1097/BAL/Fonts/WebCore/Freetype/BCFontPlatformDataFreetype.h OWB-r1097.aros/BAL/Fonts/WebCore/Freetype/BCFontPlatformDataFreetype.h
--- OWB-r1097/BAL/Fonts/WebCore/Freetype/BCFontPlatformDataFreetype.h	2009-07-27 12:56:09.000000000 +0100
+++ OWB-r1097.aros/BAL/Fonts/WebCore/Freetype/BCFontPlatformDataFreetype.h	2017-04-01 14:57:02.745938516 +0100
@@ -31,6 +31,8 @@
 #include "GlyphBuffer.h"
 #include "FontDescription.h"
 #include "BALBase.h"
+#include <set>
+#include <fontconfig/fontconfig.h>
 
 typedef struct FT_FaceRec_*  FT_Face;
 typedef struct FT_LibraryRec_  *FT_Library;
@@ -60,6 +62,7 @@
     ~FontPlatformData();
 
     static bool init();
+    static void destroy();
 
     bool isFixedPitch();
     float size() const { return m_size; }
@@ -89,6 +92,10 @@
     BalScaledFont* m_scaledFont;
     FT_Face m_face;
     static FT_Library  m_library;
+    static bool m_initialized;
+    static std::set<FT_Face> m_faces;
+    static std::set<FcPattern*> m_patterns;
+    static std::set<FcFontSet*> m_fontsets;
 private:
     static BalPattern *hashTableDeletedFontValue() { return reinterpret_cast<BalPattern*>(-1); }
 };
diff -ruN OWB-r1097/BAL/Fonts/WebCore/Freetype/BCSimpleFontDataFreetype.cpp OWB-r1097.aros/BAL/Fonts/WebCore/Freetype/BCSimpleFontDataFreetype.cpp
--- OWB-r1097/BAL/Fonts/WebCore/Freetype/BCSimpleFontDataFreetype.cpp	2009-06-05 14:35:11.000000000 +0100
+++ OWB-r1097.aros/BAL/Fonts/WebCore/Freetype/BCSimpleFontDataFreetype.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -72,11 +72,13 @@
 void SimpleFontData::platformDestroy()
 {
     if (m_platformData.m_pattern && ((FcPattern*)-1 != m_platformData.m_pattern)) {
+        FontPlatformData::m_patterns.erase(m_platformData.m_pattern);
         FcPatternDestroy(m_platformData.m_pattern);
         m_platformData.m_pattern = 0;
     }
     
     if (m_platformData.m_fallbacks) {
+        FontPlatformData::m_fontsets.erase(m_platformData.m_fallbacks);
         FcFontSetDestroy(m_platformData.m_fallbacks);
         m_platformData.m_fallbacks = 0;
     }
diff -ruN OWB-r1097/BAL/Fonts/WebCore/WK/BCFontCacheWK.h OWB-r1097.aros/BAL/Fonts/WebCore/WK/BCFontCacheWK.h
--- OWB-r1097/BAL/Fonts/WebCore/WK/BCFontCacheWK.h	2009-09-21 15:00:57.000000000 +0100
+++ OWB-r1097.aros/BAL/Fonts/WebCore/WK/BCFontCacheWK.h	2017-04-01 14:57:02.745938516 +0100
@@ -92,9 +92,10 @@
     size_t inactiveFontDataCount();
     void purgeInactiveFontData(int count = INT_MAX);
 
+    ~FontCache();
+    void platformDestroy();
 private:
     FontCache();
-    ~FontCache();
 
     // These methods are implemented by each platform.
     FontPlatformData* getSimilarFontPlatformData(const Font&);
diff -ruN OWB-r1097/BAL/Geolocation/WebCore/CMakeLists.txt OWB-r1097.aros/BAL/Geolocation/WebCore/CMakeLists.txt
--- OWB-r1097/BAL/Geolocation/WebCore/CMakeLists.txt	2009-09-16 16:49:28.000000000 +0100
+++ OWB-r1097.aros/BAL/Geolocation/WebCore/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -16,4 +16,9 @@
         create_include_link(${BAL_DIR}/Geolocation/WebCore/Mock BAL)
         aux_source_directory(${BAL_DIR}/Geolocation/WebCore/Mock WEBCORE_SRC)
     endif(USE_GRAPHICS_SDL)
+
+    if(USE_GRAPHICS_AROS)
+        create_include_link(${BAL_DIR}/Geolocation/WebCore/SDL BAL)
+        aux_source_directory(${BAL_DIR}/Geolocation/WebCore/SDL WEBCORE_SRC)
+    endif(USE_GRAPHICS_AROS)
 endif(ENABLE_GEOLOCATION)
diff -ruN OWB-r1097/BAL/Graphics/WebCore/CMakeLists.txt OWB-r1097.aros/BAL/Graphics/WebCore/CMakeLists.txt
--- OWB-r1097/BAL/Graphics/WebCore/CMakeLists.txt	2009-10-14 14:25:22.000000000 +0100
+++ OWB-r1097.aros/BAL/Graphics/WebCore/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -26,11 +26,11 @@
     aux_source_directory(${GRAPHICS_DIR}/Qt WEBCORE_SRC)
 endif(USE_GRAPHICS_QT)
 
-if(USE_GRAPHICS_SDL)
+if(USE_GRAPHICS_SDL OR USE_GRAPHICS_AROS)
     create_include_link(${GRAPHICS_DIR}/SDL BAL)
 
     aux_source_directory(${GRAPHICS_DIR}/SDL WEBCORE_SRC)
-endif(USE_GRAPHICS_SDL)
+endif(USE_GRAPHICS_SDL OR USE_GRAPHICS_AROS)
 
 
 if(ENABLE_FILTERS)
diff -ruN OWB-r1097/BAL/Graphics/WebCore/SDL/BCApplyTransparencySDL.h OWB-r1097.aros/BAL/Graphics/WebCore/SDL/BCApplyTransparencySDL.h
--- OWB-r1097/BAL/Graphics/WebCore/SDL/BCApplyTransparencySDL.h	2009-02-11 16:41:27.000000000 +0000
+++ OWB-r1097.aros/BAL/Graphics/WebCore/SDL/BCApplyTransparencySDL.h	2017-04-01 14:57:02.745938516 +0100
@@ -39,7 +39,7 @@
     Uint32 rmask, gmask, bmask, amask;
     /* SDL interprets each pixel as a 32-bit number, so our masks must depend
     on the endianness (byte order) of the machine */
-#if !PLATFORM(AMIGAOS4) && SDL_BYTEORDER == SDL_BIG_ENDIAN
+#if !PLATFORM(AMIGAOS4) && !PLATFORM(AROS) && SDL_BYTEORDER == SDL_BIG_ENDIAN
     rmask = 0xff000000;
     gmask = 0x00ff0000;
     bmask = 0x0000ff00;
@@ -56,6 +56,7 @@
     SDL_LockSurface(origin);
     memcpy(data, origin->pixels, sizeof(uint32_t) * height * width);
     final = SDL_CreateRGBSurfaceFrom(data, origin->w, origin->h, 32, origin->pitch, rmask, gmask, bmask, amask);
+    final->flags &= ~SDL_PREALLOC;
     SDL_UnlockSurface(origin);
     SDL_LockSurface(final);
     uint32_t alpha = 0;
diff -ruN OWB-r1097/BAL/ImageDecoder/WebCore/CMakeLists.txt OWB-r1097.aros/BAL/ImageDecoder/WebCore/CMakeLists.txt
--- OWB-r1097/BAL/ImageDecoder/WebCore/CMakeLists.txt	2009-10-06 09:13:04.000000000 +0100
+++ OWB-r1097.aros/BAL/ImageDecoder/WebCore/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -35,3 +35,10 @@
     aux_source_directory(${BAL_DIR}/ImageDecoder/WebCore/WK WEBCORE_SRC)
     aux_source_directory(${BAL_DIR}/ImageDecoder/WebCore/SDL WEBCORE_SRC)
 endif(USE_GRAPHICS_SDL)
+
+if(USE_GRAPHICS_AROS)
+    create_include_link(${BAL_DIR}/ImageDecoder/WebCore/Datatype/WK BAL)
+    aux_source_directory(${BAL_DIR}/ImageDecoder/WebCore/WK WEBCORE_SRC)
+    aux_source_directory(${BAL_DIR}/ImageDecoder/WebCore/SDL WEBCORE_SRC)
+    aux_source_directory(${BAL_DIR}/ImageDecoder/WebCore/Datatype/WK WEBCORE_SRC)
+endif(USE_GRAPHICS_AROS)
diff -ruN OWB-r1097/BAL/ImageDecoder/WebCore/Datatype/WK/BCDatatypeImageDecoderWK.cpp OWB-r1097.aros/BAL/ImageDecoder/WebCore/Datatype/WK/BCDatatypeImageDecoderWK.cpp
--- OWB-r1097/BAL/ImageDecoder/WebCore/Datatype/WK/BCDatatypeImageDecoderWK.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/ImageDecoder/WebCore/Datatype/WK/BCDatatypeImageDecoderWK.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,154 @@
+/*
+ * Copyright (C) 2009 Stanislaw Szymczyk.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "DatatypeImageDecoder.h"
+
+#if PLATFORM(AROS)
+
+extern "C" {
+#include <datatypes/datatypes.h>
+#include <datatypes/pictureclass.h>
+#include <proto/datatypes.h>
+#include <proto/intuition.h> 
+#include <proto/dos.h>
+#include <proto/alib.h>
+#include <aros/debug.h>
+#include <stdlib.h>
+#include <string.h>
+}
+
+namespace WebCore
+{
+
+DatatypeImageDecoder::DatatypeImageDecoder(String filenameExtension) : m_dataFile(NULL), m_filenameExtension(filenameExtension)
+{
+    m_dataFileName = (char*) "T:OWB_DatatypeImageXXXXXX";
+    m_dataFileName = mktemp(m_dataFileName);
+    if (m_dataFileName[0])
+    {
+	m_dataFile = Open(m_dataFileName, MODE_READWRITE);
+    }
+    m_frameBufferCache.resize(1);
+}
+
+DatatypeImageDecoder::~DatatypeImageDecoder()
+{
+    if (m_dataFile)
+    {
+	Close(m_dataFile);
+	if (strncmp(m_dataFileName, "T:OWB_DatatypeImage", strlen("T:OWB_DatatypeImage")) == 0)
+	{
+	    /* Make absolutely sure we won't delete something else */
+	    DeleteFile(m_dataFileName);
+	}
+    }
+}
+
+void DatatypeImageDecoder::setData(SharedBuffer* data, bool allDataReceived)
+{
+    if (!allDataReceived || !m_dataFile)
+	return;
+    
+    if (SetFileSize(m_dataFile, 0, OFFSET_BEGINNING) == -1)
+	return;
+
+    if (Write(m_dataFile, data->data(), data->size()) == (LONG) data->size())
+    {
+	if (Seek(m_dataFile, 0, OFFSET_BEGINNING) != -1)
+	{
+	    Object *dto = NewDTObject(m_dataFileName,
+		    DTA_GroupID, GID_PICTURE,
+		    PDTA_DestMode,  PMODE_V43,
+		    TAG_DONE);
+	    if (dto)
+	    {
+		struct BitMapHeader *bitmapHeader = NULL;
+		struct pdtBlitPixelArray pixelsetup;
+		GetDTAttrs(dto, PDTA_BitMapHeader, &bitmapHeader, TAG_DONE); 
+		APTR dst = AllocVec(4 * bitmapHeader->bmh_Width * bitmapHeader->bmh_Height, MEMF_ANY);
+		
+		if(dst)
+		{
+		    setSize(bitmapHeader->bmh_Width, bitmapHeader->bmh_Height);
+    
+		    RGBA32Buffer& buffer = m_frameBufferCache[0];
+		    // Let's resize our buffer now to the correct width/height.
+		    buffer.setSize(bitmapHeader->bmh_Width, bitmapHeader->bmh_Height);
+		    
+		    pixelsetup.MethodID = PDTM_READPIXELARRAY;
+		    pixelsetup.pbpa_PixelData = dst;
+		    pixelsetup.pbpa_PixelFormat = PBPAFMT_RGBA;
+		    pixelsetup.pbpa_PixelArrayMod = bitmapHeader->bmh_Width * 4;
+		    pixelsetup.pbpa_Left = 0;
+		    pixelsetup.pbpa_Top = 0;
+		    pixelsetup.pbpa_Width = bitmapHeader->bmh_Width;
+		    pixelsetup.pbpa_Height = bitmapHeader->bmh_Height;
+    
+		    DoMethodA(dto, (Msg) &pixelsetup);
+    
+		    unsigned char *data = (unsigned char*) dst;
+		    for (unsigned y = 0; y < bitmapHeader->bmh_Height; y++)
+		    {
+			for (unsigned x = 0; x < bitmapHeader->bmh_Width; x++)
+			{
+			    unsigned red = *data++;
+			    unsigned green = *data++;
+			    unsigned blue = *data++;
+			    unsigned alpha = 0xff; data++;
+			    buffer.setRGBA(x, y, red, green, blue, alpha);
+			}
+		    }
+		    // Update our status to be complete.
+		    buffer.setStatus(RGBA32Buffer::FrameComplete);
+    
+		    FreeVec(dst);
+	        }
+                DisposeDTObject(dto); 
+	    }
+	}
+    }
+}
+
+RGBA32Buffer* DatatypeImageDecoder::frameBufferAtIndex(size_t index)
+{
+    if (index)
+        return 0;
+
+    RGBA32Buffer& frame = m_frameBufferCache[0];
+    if (frame.status() == RGBA32Buffer::FrameComplete)
+    {
+	return &frame;
+    }
+    
+    return 0;
+}
+
+}
+
+#endif // PLATFORM(AROS)
diff -ruN OWB-r1097/BAL/ImageDecoder/WebCore/Datatype/WK/BCDatatypeImageDecoderWK.h OWB-r1097.aros/BAL/ImageDecoder/WebCore/Datatype/WK/BCDatatypeImageDecoderWK.h
--- OWB-r1097/BAL/ImageDecoder/WebCore/Datatype/WK/BCDatatypeImageDecoderWK.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/ImageDecoder/WebCore/Datatype/WK/BCDatatypeImageDecoderWK.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,64 @@
+/*
+ * Copyright (C) 2009 Stanislaw Szymczyk.
+ * Copyright (C) 2006 Apple Computer, Inc.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef DATATYPE_DECODER_H_
+#define DATATYPE_DECODER_H_
+
+#include "ImageDecoder.h"
+
+extern "C" {
+#include <dos/bptr.h>
+}
+
+namespace WebCore {
+
+class DatatypeImageReader;
+
+// This class decodes images using the picture datatype.
+class DatatypeImageDecoder : public ImageDecoder
+{
+public:
+    DatatypeImageDecoder(String filenameExtension);
+    ~DatatypeImageDecoder();
+    
+    virtual String filenameExtension() const { return m_filenameExtension; }
+
+    virtual void setData(SharedBuffer* data, bool allDataReceived);
+
+    virtual RGBA32Buffer* frameBufferAtIndex(size_t index);
+private:
+    /* Handle of the temporary file containing the image data to be decoded */
+    char *m_dataFileName;
+    BPTR m_dataFile;
+    String m_filenameExtension;
+};
+
+}
+
+#endif
diff -ruN OWB-r1097/BAL/ImageDecoder/WebCore/PNG/WK/BCPNGImageDecoderWK.cpp OWB-r1097.aros/BAL/ImageDecoder/WebCore/PNG/WK/BCPNGImageDecoderWK.cpp
--- OWB-r1097/BAL/ImageDecoder/WebCore/PNG/WK/BCPNGImageDecoderWK.cpp	2009-08-19 12:59:14.000000000 +0100
+++ OWB-r1097.aros/BAL/ImageDecoder/WebCore/PNG/WK/BCPNGImageDecoderWK.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -100,7 +100,7 @@
         m_decodingSizeOnly = sizeOnly;
 
         // We need to do the setjmp here. Otherwise bad things will happen
-        if (setjmp(m_png->jmpbuf)) {
+        if (setjmp(png_jmpbuf(m_png))) {
             close();
             return;
         }
@@ -201,7 +201,7 @@
 void decodingFailed(png_structp png, png_const_charp errorMsg)
 {
     static_cast<PNGImageDecoder*>(png_get_progressive_ptr(png))->decodingFailed();
-    longjmp(png->jmpbuf, 1);
+    png_longjmp(png, 1);
 }
 
 void decodingWarning(png_structp png, png_const_charp warningMsg)
@@ -226,13 +226,13 @@
 {
     png_structp png = reader()->pngPtr();
     png_infop info = reader()->infoPtr();
-    png_uint_32 width = png->width;
-    png_uint_32 height = png->height;
+    png_uint_32 width = png_get_image_width(png, info);
+    png_uint_32 height = png_get_image_height(png, info);
     
     // Protect against large images.
-    if (png->width > cMaxPNGSize || png->height > cMaxPNGSize) {
+    if (width > cMaxPNGSize || height > cMaxPNGSize) {
         m_failed = true;
-        longjmp(png->jmpbuf, 1);
+        png_longjmp(png, 1);
         return;
     }
     
@@ -240,7 +240,7 @@
     if (!ImageDecoder::isSizeAvailable()) {
         if (!setSize(width, height)) {
             // Size unreasonable, bail out.
-            longjmp(png->jmpbuf, 1);
+            png_longjmp(png, 1);
             return;
         }
 #if ENABLE(IMAGE_DECODER_DOWN_SAMPLING)
@@ -296,11 +296,9 @@
 
     reader()->setHasAlpha(channels == 4);
 
-    if (reader()->decodingSizeOnly()) {
+    if (reader()->decodingSizeOnly())
         // If we only needed the size, halt the reader.     
-        reader()->setReadOffset(m_data->size() - png->buffer_size);
-        png->buffer_size = 0;
-    }
+        reader()->setReadOffset(m_data->size() - png_process_data_pause(png, 0));
 }
 
 void rowAvailable(png_structp png, png_bytep rowBuffer,
@@ -326,7 +324,7 @@
 #endif
         if (!buffer.setSize(width, height)) {
             static_cast<PNGImageDecoder*>(png_get_progressive_ptr(reader()->pngPtr()))->decodingFailed();
-            longjmp(reader()->pngPtr()->jmpbuf, 1);
+            png_longjmp(reader()->pngPtr(), 1);
             return;
         }
         buffer.setStatus(RGBA32Buffer::FramePartial);
@@ -335,7 +333,7 @@
         // For PNGs, the frame always fills the entire image.
         buffer.setRect(IntRect(IntPoint(), size()));
 
-        if (reader()->pngPtr()->interlaced)
+        if (png_get_interlace_type(reader()->pngPtr(), reader()->infoPtr()))
             reader()->createInterlaceBuffer((reader()->hasAlpha() ? 4 : 3) * size().width() * size().height());
     }
 
diff -ruN OWB-r1097/BAL/ImageDecoder/WebCore/SDL/BCImageDecoderSDL.cpp OWB-r1097.aros/BAL/ImageDecoder/WebCore/SDL/BCImageDecoderSDL.cpp
--- OWB-r1097/BAL/ImageDecoder/WebCore/SDL/BCImageDecoderSDL.cpp	2009-08-31 11:33:08.000000000 +0100
+++ OWB-r1097.aros/BAL/ImageDecoder/WebCore/SDL/BCImageDecoderSDL.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -35,7 +35,7 @@
     Uint32 rmask, gmask, bmask, amask;
     /* SDL interprets each pixel as a 32-bit number, so our masks must depend
     on the endianness (byte order) of the machine */
-#if !PLATFORM(AMIGAOS4) && SDL_BYTEORDER == SDL_BIG_ENDIAN
+#if !PLATFORM(AMIGAOS4) && !PLATFORM(AROS) && SDL_BYTEORDER == SDL_BIG_ENDIAN
     rmask = 0xff000000;
     gmask = 0x00ff0000;
     bmask = 0x0000ff00;
diff -ruN OWB-r1097/BAL/ImageDecoder/WebCore/WK/BCImageDecoderWK.cpp OWB-r1097.aros/BAL/ImageDecoder/WebCore/WK/BCImageDecoderWK.cpp
--- OWB-r1097/BAL/ImageDecoder/WebCore/WK/BCImageDecoderWK.cpp	2009-08-31 11:33:08.000000000 +0100
+++ OWB-r1097.aros/BAL/ImageDecoder/WebCore/WK/BCImageDecoderWK.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -21,6 +21,7 @@
 #include "config.h"
 
 #include "ImageDecoder.h"
+#include "Settings.h"
 
 #if ENABLE(IMAGE_DECODER_DOWN_SAMPLING)
 #include <algorithm>
@@ -33,6 +34,7 @@
 #include "PNGImageDecoder.h"
 #include "SharedBuffer.h"
 #include "XBMImageDecoder.h"
+#include "DatatypeImageDecoder.h"
 
 namespace WebCore {
 
@@ -48,24 +50,45 @@
 
     // GIFs begin with GIF8(7 or 9).
     if (strncmp(contents, "GIF8", 4) == 0)
-        return new GIFImageDecoder();
+    {
+	if(Settings::decodesGIFWithDatatypes())
+	    return new DatatypeImageDecoder("gif");
+	else
+	    return new GIFImageDecoder();
+    }
 
     // Test for PNG.
     if (uContents[0]==0x89 &&
         uContents[1]==0x50 &&
         uContents[2]==0x4E &&
         uContents[3]==0x47)
-        return new PNGImageDecoder();
+    {
+	if(Settings::decodesPNGWithDatatypes())
+	    return new DatatypeImageDecoder("png");
+	else
+	    return new PNGImageDecoder();
+    }
 
     // JPEG
     if (uContents[0]==0xFF &&
         uContents[1]==0xD8 &&
         uContents[2]==0xFF)
-        return new JPEGImageDecoder();
+    {
+	if(Settings::decodesJPGWithDatatypes())
+	    return new DatatypeImageDecoder("jpg");
+	else
+            return new JPEGImageDecoder();
+    }
 
     // BMP
     if (strncmp(contents, "BM", 2) == 0)
-        return new BMPImageDecoder();
+    if (strncmp(contents, "BM", 2) == 0)
+    {
+	if(Settings::decodesBMPWithDatatypes())
+	    return new DatatypeImageDecoder("bmp");
+	else
+            return new BMPImageDecoder();
+    }
 
     // ICOs always begin with a 2-byte 0 followed by a 2-byte 1.
     // CURs begin with 2-byte 0 followed by 2-byte 2.
@@ -77,6 +100,10 @@
     if (length >= 8 && strncmp(contents, "#define ", 8) == 0)
         return new XBMImageDecoder();
 
+    // IFF/ILBM
+    if (length >= 12 && strncmp(contents, "FORM", 4) == 0 && strncmp(&contents[8], "ILBM", 4) == 0)
+	return new DatatypeImageDecoder("iff");
+    
     // Give up. We don't know what the heck this is.
     return 0;
 }
diff -ruN OWB-r1097/BAL/Internationalization/WebCore/AROS/BCLocalizedStringsAROS.cpp OWB-r1097.aros/BAL/Internationalization/WebCore/AROS/BCLocalizedStringsAROS.cpp
--- OWB-r1097/BAL/Internationalization/WebCore/AROS/BCLocalizedStringsAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Internationalization/WebCore/AROS/BCLocalizedStringsAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,420 @@
+/*
+ * Copyright (C) 2009 Stanislaw Szymczyk
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+
+#include "LocalizedStrings.h"
+#include "PlatformString.h"
+
+#include <exec/types.h>
+#include <proto/codesets.h>
+#include <libraries/codesets.h>
+#include <proto/locale.h>
+#define CATCOMP_NUMBERS
+#define CATCOMP_ARRAY
+#include "strings.h"
+
+
+#define CATALOG_NAME "owb.catalog"
+#define CATALOG_VERSION  3
+
+struct Catalog *catalog;
+
+const char* _(ULONG id)
+{
+    static char string[256]; 
+    const char *catalogString;
+    if (LocaleBase != NULL && catalog != NULL)
+    {
+        catalogString = GetCatalogStr(catalog, id, CatCompArray[id].cca_Str);
+    }
+    else
+    {
+        catalogString = CatCompArray[id].cca_Str;
+    }
+    struct codeset *utfCodeset = CodesetsFindA("UTF-8", NULL);
+    if(utfCodeset)
+    {
+        char *stringConverted = CodesetsConvertStr(CSA_Source, (IPTR) catalogString, (IPTR) CSA_DestCodeset, (IPTR) utfCodeset, TAG_END);
+        if(stringConverted)
+        {
+            strncpy(string, stringConverted, sizeof(string));
+            CodesetsFreeA(stringConverted, NULL);
+            return (const char*) string;
+        }
+    }
+    
+    return (const char*) catalogString;
+}
+
+static void __attribute__ ((constructor)) Locale_Initialize()
+{
+    if (LocaleBase != NULL)
+    {
+        catalog = OpenCatalog(NULL, CATALOG_NAME, OC_Version, CATALOG_VERSION, TAG_DONE);
+    }
+    else
+    {
+        catalog = NULL;
+    }
+}
+
+static void __attribute__ ((destructor)) Locale_Deinitialize()
+{
+    if(LocaleBase != NULL && catalog != NULL)
+        CloseCatalog(catalog);
+}
+
+namespace WebCore {
+
+
+String submitButtonDefaultLabel()
+{
+    return String::fromUTF8(_(MSG_SubmitButtonDefaultLabel));
+}
+
+String inputElementAltText()
+{
+    return String::fromUTF8(_(MSG_InputElementAltText));
+}
+
+String resetButtonDefaultLabel()
+{
+    return String::fromUTF8(_(MSG_ResetButtonDefaultLabel));
+}
+
+String searchableIndexIntroduction()
+{
+    return String::fromUTF8(_(MSG_SearchableIndexIntroduction));
+}
+
+String fileButtonChooseFileLabel()
+{
+    return String::fromUTF8(_(MSG_FileButtonChooseFileLabel));
+}
+
+String fileButtonNoFileSelectedLabel()
+{
+    return String::fromUTF8(_(MSG_FileButtonNoFileSelectedLabel));
+}
+
+String contextMenuItemTagOpenLinkInNewWindow()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagOpenLinkInNewWindow));
+}
+
+String contextMenuItemTagOpenLinkInNewTab()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagOpenLinkInNewTab));
+}
+
+String contextMenuItemTagDownloadLinkToDisk()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagDownloadLinkToDisk));
+}
+
+String contextMenuItemTagCopyLinkToClipboard()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagCopyLinkToClipboard));
+}
+
+String contextMenuItemTagOpenImageInNewWindow()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagOpenImageInNewWindow));
+}
+
+String contextMenuItemTagOpenImageInNewTab()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagOpenImageInNewTab));
+}
+
+String contextMenuItemTagDownloadImageToDisk()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagDownloadImageToDisk));
+}
+
+String contextMenuItemTagCopyImageToClipboard()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagCopyImageToClipboard));
+}
+
+String contextMenuItemTagOpenFrameInNewWindow()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagOpenFrameInNewWindow));
+}
+
+String contextMenuItemTagOpenFrameInNewTab()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagOpenFrameInNewTab));
+}
+
+String contextMenuItemTagCopy()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagCopy));
+}
+
+String contextMenuItemTagDelete()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagDelete));
+}
+
+String contextMenuItemTagSelectAll()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagSelectAll));
+}
+
+String contextMenuItemTagUnicode()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagUnicode));
+}
+
+String contextMenuItemTagInputMethods()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagInputMethods));
+}
+
+String contextMenuItemTagGoBack()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagGoBack));
+}
+
+String contextMenuItemTagGoForward()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagGoForward));
+}
+
+String contextMenuItemTagStop()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagStop));
+}
+
+String contextMenuItemTagReload()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagReload));
+}
+
+String contextMenuItemTagCut()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagCut));
+}
+
+String contextMenuItemTagPaste()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagPaste));
+}
+
+String contextMenuItemTagNoGuessesFound()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagNoGuessesFound));
+}
+
+String contextMenuItemTagIgnoreSpelling()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagIgnoreSpelling));
+}
+
+String contextMenuItemTagLearnSpelling()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagLearnSpelling));
+}
+
+String contextMenuItemTagSearchWeb()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagSearchWeb));
+}
+
+String contextMenuItemTagLookUpInDictionary()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagLookUpInDictionary));
+}
+
+String contextMenuItemTagOpenLink()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagOpenLink));
+}
+
+String contextMenuItemTagIgnoreGrammar()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagIgnoreGrammar));
+}
+
+String contextMenuItemTagSpellingMenu()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagSpellingMenu));
+}
+
+String contextMenuItemTagShowSpellingPanel(bool show)
+{
+    if(show)
+        return String::fromUTF8(_(MSG_ContextMenuItemTagShowSpellingPanel));
+    else
+        return String::fromUTF8(_(MSG_ContextMenuItemTagHideSpellingPanel));
+}
+
+String contextMenuItemTagCheckSpelling()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagCheckSpelling));
+}
+
+String contextMenuItemTagCheckSpellingWhileTyping()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagCheckSpellingWhileTyping));
+}
+
+String contextMenuItemTagCheckGrammarWithSpelling()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagCheckGrammarWithSpelling));
+}
+
+String contextMenuItemTagFontMenu()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagFontMenu));
+}
+
+String contextMenuItemTagBold()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagBold));
+}
+
+String contextMenuItemTagItalic()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagItalic));
+}
+
+String contextMenuItemTagUnderline()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagUnderline));
+}
+
+String contextMenuItemTagOutline()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagOutline));
+}
+
+String contextMenuItemTagInspectElement()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagInspectElement));
+}
+
+String searchMenuNoRecentSearchesText()
+{
+    return String::fromUTF8(_(MSG_searchMenuNoRecentSearchesText));
+}
+
+String searchMenuRecentSearchesText()
+{
+    return String::fromUTF8(_(MSG_searchMenuRecentSearchesText));
+}
+
+String searchMenuClearRecentSearchesText()
+{
+    return String::fromUTF8(_(MSG_searchMenuClearRecentSearchesText));
+}
+
+String AXDefinitionListTermText()
+{
+    return String::fromUTF8(_(MSG_AXDefinitionListTermText));
+}
+
+String AXDefinitionListDefinitionText()
+{
+    return String::fromUTF8(_(MSG_AXDefinitionListDefinitionText));
+}
+
+String AXButtonActionVerb()
+{
+    return String::fromUTF8(_(MSG_AXButtonActionVerb));
+}
+
+String AXRadioButtonActionVerb()
+{
+    return String::fromUTF8(_(MSG_AXRadioButtonActionVerb));
+}
+
+String AXTextFieldActionVerb()
+{
+    return String::fromUTF8(_(MSG_AXTextFieldActionVerb));
+}
+
+String AXCheckedCheckBoxActionVerb()
+{
+    return String::fromUTF8(_(MSG_AXCheckedCheckBoxActionVerb));
+}
+
+String AXUncheckedCheckBoxActionVerb()
+{
+    return String::fromUTF8(_(MSG_AXUncheckedCheckBoxActionVerb));
+}
+
+String AXLinkActionVerb()
+{
+    return String::fromUTF8(_(MSG_AXLinkActionVerb));
+}
+
+String unknownFileSizeText()
+{
+    return String::fromUTF8(_(MSG_unknownFileSizeText));
+}
+
+String imageTitle(const String& filename, const IntSize& size)
+{
+    return String::fromUTF8(_(MSG_imageTitle));
+}
+
+String contextMenuItemTagLeftToRight()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagLeftToRight));
+}
+
+String contextMenuItemTagDefaultDirection()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagDefaultDirection));
+}
+
+String contextMenuItemTagRightToLeft()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagRightToLeft));
+}
+
+String contextMenuItemTagWritingDirectionMenu()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagWritingDirectionMenu));
+}
+
+String contextMenuItemTagTextDirectionMenu()
+{
+    return String::fromUTF8(_(MSG_ContextMenuItemTagTextDirectionMenu));
+}
+
+String multipleFileUploadText(unsigned numberOfFiles)
+{
+    return String::fromUTF8(_(MSG_MultipleFileUploadText));
+}
+
+}
diff -ruN OWB-r1097/BAL/Internationalization/WebCore/AROS/BCLocalizedStringsAROS.h OWB-r1097.aros/BAL/Internationalization/WebCore/AROS/BCLocalizedStringsAROS.h
--- OWB-r1097/BAL/Internationalization/WebCore/AROS/BCLocalizedStringsAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Internationalization/WebCore/AROS/BCLocalizedStringsAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,115 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef LocalizedStrings_h
+#define LocalizedStrings_h
+
+namespace WebCore {
+
+    class String;
+    class IntSize;
+    
+    String inputElementAltText();
+    String resetButtonDefaultLabel();
+    String searchableIndexIntroduction();
+    String submitButtonDefaultLabel();
+    String fileButtonChooseFileLabel();
+    String fileButtonNoFileSelectedLabel();
+    String copyImageUnknownFileLabel();
+    String contextMenuItemTagOpenLinkInNewWindow();
+    String contextMenuItemTagOpenLinkInNewTab();
+    String contextMenuItemTagDownloadLinkToDisk();
+    String contextMenuItemTagCopyLinkToClipboard();
+    String contextMenuItemTagOpenImageInNewWindow();
+    String contextMenuItemTagOpenImageInNewTab();
+    String contextMenuItemTagDownloadImageToDisk();
+    String contextMenuItemTagCopyImageToClipboard();
+    String contextMenuItemTagOpenFrameInNewWindow();
+    String contextMenuItemTagOpenFrameInNewTab();
+    String contextMenuItemTagCopy();
+    String contextMenuItemTagGoBack();
+    String contextMenuItemTagGoForward();
+    String contextMenuItemTagStop();
+    String contextMenuItemTagReload();
+    String contextMenuItemTagCut();
+    String contextMenuItemTagPaste();
+    String contextMenuItemTagDelete();
+    String contextMenuItemTagSelectAll();
+    String contextMenuItemTagInputMethods();
+    String contextMenuItemTagUnicode();
+    String contextMenuItemTagNoGuessesFound();
+    String contextMenuItemTagIgnoreSpelling();
+    String contextMenuItemTagLearnSpelling();
+    String contextMenuItemTagSearchWeb();
+    String contextMenuItemTagLookUpInDictionary();
+    String contextMenuItemTagOpenLink();
+    String contextMenuItemTagIgnoreGrammar();
+    String contextMenuItemTagSpellingMenu();
+    String contextMenuItemTagShowSpellingPanel(bool show);
+    String contextMenuItemTagCheckSpelling();
+    String contextMenuItemTagCheckSpellingWhileTyping();
+    String contextMenuItemTagCheckGrammarWithSpelling();
+    String contextMenuItemTagFontMenu();
+    String contextMenuItemTagBold();
+    String contextMenuItemTagItalic();
+    String contextMenuItemTagUnderline();
+    String contextMenuItemTagOutline();
+    String contextMenuItemTagWritingDirectionMenu();
+    String contextMenuItemTagDefaultDirection();
+    String contextMenuItemTagLeftToRight();
+    String contextMenuItemTagRightToLeft();
+
+    String contextMenuItemTagInspectElement();
+
+    String searchMenuNoRecentSearchesText();
+    String searchMenuRecentSearchesText();
+    String searchMenuClearRecentSearchesText();
+
+    String AXWebAreaText();
+    String AXLinkText();
+    String AXListMarkerText();
+    String AXImageMapText();
+    String AXHeadingText();
+    String AXDefinitionListTermText();
+    String AXDefinitionListDefinitionText();
+
+    String AXButtonActionVerb();
+    String AXRadioButtonActionVerb();
+    String AXTextFieldActionVerb();
+    String AXCheckedCheckBoxActionVerb();
+    String AXUncheckedCheckBoxActionVerb();
+    String AXLinkActionVerb();
+
+    String multipleFileUploadText(unsigned numberOfFiles);
+    String unknownFileSizeText();
+    String contextMenuItemTagTextDirectionMenu();
+
+    String imageTitle(const String& filename, const IntSize& size);
+}
+
+#endif
diff -ruN OWB-r1097/BAL/Internationalization/WebCore/AROS/BCTextBreakIteratorInternalICUAROS.cpp OWB-r1097.aros/BAL/Internationalization/WebCore/AROS/BCTextBreakIteratorInternalICUAROS.cpp
--- OWB-r1097/BAL/Internationalization/WebCore/AROS/BCTextBreakIteratorInternalICUAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Internationalization/WebCore/AROS/BCTextBreakIteratorInternalICUAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,45 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "TextBreakIteratorInternalICU.h"
+
+namespace WebCore {
+
+const char* currentSearchLocaleID()
+{
+    // FIXME: Should use system locale.
+    return "";
+}
+
+const char* currentTextBreakLocaleID()
+{
+    return "en_us";
+}
+
+}
diff -ruN OWB-r1097/BAL/Internationalization/WebCore/AROS/BCTextBreakIteratorInternalICUAROS.h OWB-r1097.aros/BAL/Internationalization/WebCore/AROS/BCTextBreakIteratorInternalICUAROS.h
--- OWB-r1097/BAL/Internationalization/WebCore/AROS/BCTextBreakIteratorInternalICUAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Internationalization/WebCore/AROS/BCTextBreakIteratorInternalICUAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,41 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef TextBreakIteratorInternalICU_h
+#define TextBreakIteratorInternalICU_h
+
+#include <wtf/unicode/Unicode.h>
+
+namespace WebCore {
+
+    const char* currentSearchLocaleID();
+    const char* currentTextBreakLocaleID();
+
+}
+
+#endif
diff -ruN OWB-r1097/BAL/Internationalization/WebCore/AROS/strings.h OWB-r1097.aros/BAL/Internationalization/WebCore/AROS/strings.h
--- OWB-r1097/BAL/Internationalization/WebCore/AROS/strings.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Internationalization/WebCore/AROS/strings.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,640 @@
+/****************************************************************
+   This file was created automatically by `FlexCat 2.4'
+   from "/home/sszymczy/workspace/AROS/contrib/Networking/Apps/OWB/catalogs/owb.cd".
+
+   Do NOT edit by hand!
+****************************************************************/
+
+#ifndef owb_H
+#define owb_H
+
+
+#ifndef EXEC_TYPES_H
+#include <exec/types.h>
+#endif
+
+
+#ifdef CATCOMP_ARRAY
+#undef CATCOMP_NUMBERS
+#undef CATCOMP_STRINGS
+#define CATCOMP_NUMBERS
+#define CATCOMP_STRINGS
+#endif
+
+#ifdef CATCOMP_BLOCK
+#undef CATCOMP_STRINGS
+#define CATCOMP_STRINGS
+#endif
+
+/***************************************************************/
+
+
+#ifdef CATCOMP_NUMBERS
+
+#define MSG_OWB 0
+#define MSG_SubmitButtonDefaultLabel 1
+#define MSG_InputElementAltText 2
+#define MSG_ResetButtonDefaultLabel 3
+#define MSG_SearchableIndexIntroduction 4
+#define MSG_FileButtonChooseFileLabel 5
+#define MSG_FileButtonNoFileSelectedLabel 6
+#define MSG_ContextMenuItemTagOpenLinkInNewWindow 7
+#define MSG_ContextMenuItemTagOpenLinkInNewTab 8
+#define MSG_ContextMenuItemTagDownloadLinkToDisk 9
+#define MSG_ContextMenuItemTagCopyLinkToClipboard 10
+#define MSG_ContextMenuItemTagOpenImageInNewWindow 11
+#define MSG_ContextMenuItemTagOpenImageInNewTab 12
+#define MSG_ContextMenuItemTagDownloadImageToDisk 13
+#define MSG_ContextMenuItemTagCopyImageToClipboard 14
+#define MSG_ContextMenuItemTagOpenFrameInNewWindow 15
+#define MSG_ContextMenuItemTagOpenFrameInNewTab 16
+#define MSG_ContextMenuItemTagCopy 17
+#define MSG_ContextMenuItemTagDelete 18
+#define MSG_ContextMenuItemTagSelectAll 19
+#define MSG_ContextMenuItemTagUnicode 20
+#define MSG_ContextMenuItemTagInputMethods 21
+#define MSG_ContextMenuItemTagGoBack 22
+#define MSG_ContextMenuItemTagGoForward 23
+#define MSG_ContextMenuItemTagStop 24
+#define MSG_ContextMenuItemTagReload 25
+#define MSG_ContextMenuItemTagCut 26
+#define MSG_ContextMenuItemTagPaste 27
+#define MSG_ContextMenuItemTagNoGuessesFound 28
+#define MSG_ContextMenuItemTagIgnoreSpelling 29
+#define MSG_ContextMenuItemTagLearnSpelling 30
+#define MSG_ContextMenuItemTagSearchWeb 31
+#define MSG_ContextMenuItemTagLookUpInDictionary 32
+#define MSG_ContextMenuItemTagOpenLink 33
+#define MSG_ContextMenuItemTagIgnoreGrammar 34
+#define MSG_ContextMenuItemTagSpellingMenu 35
+#define MSG_ContextMenuItemTagShowSpellingPanel 36
+#define MSG_ContextMenuItemTagHideSpellingPanel 37
+#define MSG_ContextMenuItemTagCheckSpelling 38
+#define MSG_ContextMenuItemTagCheckSpellingWhileTyping 39
+#define MSG_ContextMenuItemTagCheckGrammarWithSpelling 40
+#define MSG_ContextMenuItemTagFontMenu 41
+#define MSG_ContextMenuItemTagBold 42
+#define MSG_ContextMenuItemTagItalic 43
+#define MSG_ContextMenuItemTagUnderline 44
+#define MSG_ContextMenuItemTagOutline 45
+#define MSG_ContextMenuItemTagInspectElement 46
+#define MSG_searchMenuNoRecentSearchesText 47
+#define MSG_searchMenuRecentSearchesText 48
+#define MSG_searchMenuClearRecentSearchesText 49
+#define MSG_AXDefinitionListTermText 50
+#define MSG_AXDefinitionListDefinitionText 51
+#define MSG_AXButtonActionVerb 52
+#define MSG_AXRadioButtonActionVerb 53
+#define MSG_AXTextFieldActionVerb 54
+#define MSG_AXCheckedCheckBoxActionVerb 55
+#define MSG_AXUncheckedCheckBoxActionVerb 56
+#define MSG_AXLinkActionVerb 57
+#define MSG_unknownFileSizeText 58
+#define MSG_imageTitle 59
+#define MSG_ContextMenuItemTagLeftToRight 60
+#define MSG_ContextMenuItemTagDefaultDirection 61
+#define MSG_ContextMenuItemTagRightToLeft 62
+#define MSG_ContextMenuItemTagWritingDirectionMenu 63
+#define MSG_ContextMenuItemTagTextDirectionMenu 64
+#define MSG_MultipleFileUploadText 65
+#define MSG_Loading 66
+#define MSG_Ready 67
+#define MSG_Connecting 68
+#define MSG_Error 69
+#define MSG_Untitled 70
+#define MSG_DownloadState_Starting 71
+#define MSG_DownloadState_Active 72
+#define MSG_DownloadState_Failed 73
+#define MSG_DownloadState_Finished 74
+#define MSG_UnknownFileSize 75
+#define MSG_UnknownFileName 76
+#define MSG_UnknownDownloadSpeed 77
+#define MSG_DownloadFileSize 78
+#define MSG_DownloadFileName 79
+#define MSG_DownloadSpeed 80
+#define MSG_DownloadState 81
+#define MSG_DownloadProgress 82
+#define MSG_DownloadManager_Title 83
+#define MSG_DownloadManager_Cancel 84
+#define MSG_DownloadManager_ClearFinished 85
+#define MSG_SearchWindow_Title 86
+#define MSG_SearchWindow_Locate 87
+#define MSG_SearchWindow_CaseSensitive 88
+#define MSG_SearchWindow_FindNext 89
+#define MSG_SearchWindow_FindPrevious 90
+#define MSG_PreferencesManager_Title 91
+#define MSG_PreferencesManager_Main 92
+#define MSG_PreferencesManager_Downloads 93
+#define MSG_PreferencesManager_SaveFilesTo 94
+#define MSG_PreferencesManager_ZuneSettings 95
+#define MSG_PreferencesManager_OpenZuneSettings 96
+#define MSG_PreferencesManager_ProxySettings 97
+#define MSG_PreferencesManager_HttpProxy 98
+#define MSG_PreferencesManager_Content 99
+#define MSG_PreferencesManager_JavaScript 100
+#define MSG_PreferencesManager_EnableJavaScript 101
+#define MSG_PreferencesManager_Images 102
+#define MSG_PreferencesManager_LoadImagesAutomatically 103
+#define MSG_PreferencesManager_AllowAnimatedImages 104
+#define MSG_PreferencesManager_AllowLoopedAnimation 105
+#define MSG_PreferencesManager_DecodeBMPWithDatatypes 106
+#define MSG_PreferencesManager_DecodePNGWithDatatypes 107
+#define MSG_PreferencesManager_DecodeGIFWithDatatypes 108
+#define MSG_PreferencesManager_DecodeJPGWithDatatypes 109
+#define MSG_PreferencesManager_Fonts 110
+#define MSG_PreferencesManager_DefaultFontSize 111
+#define MSG_PreferencesManager_MinimumFontSize 112
+#define MSG_PreferencesManager_StandardFontFamily 113
+#define MSG_PreferencesManager_DefaultFixedFontSize 114
+#define MSG_PreferencesManager_FixedFontFamily 115
+#define MSG_PreferencesManager_SerifFontFamily 116
+#define MSG_PreferencesManager_SansSerifFontFamily 117
+#define MSG_PreferencesManager_CursiveFontFamily 118
+#define MSG_PreferencesManager_FantasyFontFamily 119
+#define MSG_PreferencesManager_Save 120
+#define MSG_PreferencesManager_Use 121
+#define MSG_PreferencesManager_Cancel 122
+#define MSG_Tabs 123
+#define MSG_Tabs_OpenNew 124
+#define MSG_Tabs_CloseActive 125
+#define MSG_Tabs_Bookmark 126
+#define MSG_JavaScript_Alert 127
+#define MSG_JavaScript_AlertOK 128
+#define MSG_JavaScript_Confirm 129
+#define MSG_JavaScript_ConfirmOptions 130
+#define MSG_JavaScript_Prompt 131
+#define MSG_JavaScript_PromptOK 132
+#define MSG_JavaScript_PromptCancel 133
+#define MSG_RequestPolicy_Title 134
+#define MSG_RequestPolicy_Message 135
+#define MSG_RequestPolicy_Options 136
+#define MSG_RequestCredentials_Title 137
+#define MSG_RequestCredentials_Message 138
+#define MSG_RequestCredentials_Username 139
+#define MSG_RequestCredentials_Password 140
+#define MSG_RequestCredentials_OK 141
+#define MSG_RequestCredentials_Cancel 142
+#define MSG_BookmarkManager_Title 143
+#define MSG_BookmarkManager_Label 144
+#define MSG_BookmarkManager_URL 145
+#define MSG_BookmarkManager_Insert 146
+#define MSG_BookmarkManager_Change 147
+#define MSG_BookmarkManager_Remove 148
+#define MSG_BookmarkManager_MenuTitle 149
+#define MSG_BookmarkManager_MoveUp 150
+#define MSG_BookmarkManager_MoveDown 151
+#define MSG_MainMenu_File 152
+#define MSG_MainMenu_OpenNewTab 153
+#define MSG_MainMenu_OpenNewWindow 154
+#define MSG_MainMenu_OpenFile 155
+#define MSG_MainMenu_CloseCurrentTab 156
+#define MSG_MainMenu_CloseWindow 157
+#define MSG_MainMenu_Quit 158
+#define MSG_MainMenu_Edit 159
+#define MSG_MainMenu_Find 160
+#define MSG_MainMenu_FindNext 161
+#define MSG_MainMenu_Preferences 162
+#define MSG_MainMenu_Tools 163
+#define MSG_MainMenu_BookmarkManager 164
+#define MSG_MainMenu_DownloadManager 165
+#define MSG_MainMenu_Cut 166
+#define MSG_MainMenu_Copy 167
+#define MSG_MainMenu_Paste 168
+#define MSG_MainMenu_View 169
+#define MSG_MainMenu_ZoomIn 170
+#define MSG_MainMenu_ZoomOut 171
+#define MSG_MainMenu_ZoomReset 172
+#define MSG_MainMenu_ViewSource 173
+
+#endif /* CATCOMP_NUMBERS */
+
+
+/***************************************************************/
+
+#ifdef CATCOMP_STRINGS
+
+#define MSG_OWB_STR "OWB"
+#define MSG_SubmitButtonDefaultLabel_STR "Submit"
+#define MSG_InputElementAltText_STR "Submit"
+#define MSG_ResetButtonDefaultLabel_STR "Reset"
+#define MSG_SearchableIndexIntroduction_STR "Searchable Index"
+#define MSG_FileButtonChooseFileLabel_STR "Choose File"
+#define MSG_FileButtonNoFileSelectedLabel_STR "(None)"
+#define MSG_ContextMenuItemTagOpenLinkInNewWindow_STR "Open Link in New Window"
+#define MSG_ContextMenuItemTagOpenLinkInNewTab_STR "Open Link in New Tab"
+#define MSG_ContextMenuItemTagDownloadLinkToDisk_STR "Download Linked File"
+#define MSG_ContextMenuItemTagCopyLinkToClipboard_STR "Copy Link Location"
+#define MSG_ContextMenuItemTagOpenImageInNewWindow_STR "Open Image in New Window"
+#define MSG_ContextMenuItemTagOpenImageInNewTab_STR "Open Image in New Tab"
+#define MSG_ContextMenuItemTagDownloadImageToDisk_STR "Save Image As"
+#define MSG_ContextMenuItemTagCopyImageToClipboard_STR "Copy Image"
+#define MSG_ContextMenuItemTagOpenFrameInNewWindow_STR "Open Frame in New Window"
+#define MSG_ContextMenuItemTagOpenFrameInNewTab_STR "Open Frame in New Tab"
+#define MSG_ContextMenuItemTagCopy_STR "copy"
+#define MSG_ContextMenuItemTagDelete_STR "delete"
+#define MSG_ContextMenuItemTagSelectAll_STR "Select All"
+#define MSG_ContextMenuItemTagUnicode_STR "Insert Unicode Control Character"
+#define MSG_ContextMenuItemTagInputMethods_STR "Input Methods"
+#define MSG_ContextMenuItemTagGoBack_STR "back"
+#define MSG_ContextMenuItemTagGoForward_STR "forward"
+#define MSG_ContextMenuItemTagStop_STR "stop"
+#define MSG_ContextMenuItemTagReload_STR "Reload"
+#define MSG_ContextMenuItemTagCut_STR "cut"
+#define MSG_ContextMenuItemTagPaste_STR "paste"
+#define MSG_ContextMenuItemTagNoGuessesFound_STR "No Guesses Found"
+#define MSG_ContextMenuItemTagIgnoreSpelling_STR "Ignore Spelling"
+#define MSG_ContextMenuItemTagLearnSpelling_STR "Learn Spelling"
+#define MSG_ContextMenuItemTagSearchWeb_STR "Search the Web"
+#define MSG_ContextMenuItemTagLookUpInDictionary_STR "Look Up in Dictionary"
+#define MSG_ContextMenuItemTagOpenLink_STR "Open Link"
+#define MSG_ContextMenuItemTagIgnoreGrammar_STR "Ignore Grammar"
+#define MSG_ContextMenuItemTagSpellingMenu_STR "Spelling and Grammar"
+#define MSG_ContextMenuItemTagShowSpellingPanel_STR "Show Spelling and Grammar"
+#define MSG_ContextMenuItemTagHideSpellingPanel_STR "Hide Spelling and Grammar"
+#define MSG_ContextMenuItemTagCheckSpelling_STR "Check Document Now"
+#define MSG_ContextMenuItemTagCheckSpellingWhileTyping_STR "Check Spelling While Typing"
+#define MSG_ContextMenuItemTagCheckGrammarWithSpelling_STR "Check Grammar With Spelling"
+#define MSG_ContextMenuItemTagFontMenu_STR "Font"
+#define MSG_ContextMenuItemTagBold_STR "Bold"
+#define MSG_ContextMenuItemTagItalic_STR "Italic"
+#define MSG_ContextMenuItemTagUnderline_STR "Underline"
+#define MSG_ContextMenuItemTagOutline_STR "Outline"
+#define MSG_ContextMenuItemTagInspectElement_STR "Inspect Element"
+#define MSG_searchMenuNoRecentSearchesText_STR "No recent searches"
+#define MSG_searchMenuRecentSearchesText_STR "Recent searches"
+#define MSG_searchMenuClearRecentSearchesText_STR "Clear recent searches"
+#define MSG_AXDefinitionListTermText_STR "term"
+#define MSG_AXDefinitionListDefinitionText_STR "definition"
+#define MSG_AXButtonActionVerb_STR ""
+#define MSG_AXRadioButtonActionVerb_STR ""
+#define MSG_AXTextFieldActionVerb_STR ""
+#define MSG_AXCheckedCheckBoxActionVerb_STR ""
+#define MSG_AXUncheckedCheckBoxActionVerb_STR ""
+#define MSG_AXLinkActionVerb_STR ""
+#define MSG_unknownFileSizeText_STR "Unknown"
+#define MSG_imageTitle_STR ""
+#define MSG_ContextMenuItemTagLeftToRight_STR "Left to Right context menu item"
+#define MSG_ContextMenuItemTagDefaultDirection_STR "Default writing direction context menu item"
+#define MSG_ContextMenuItemTagRightToLeft_STR "Right to Left context menu item"
+#define MSG_ContextMenuItemTagWritingDirectionMenu_STR "Writing direction context sub-menu item"
+#define MSG_ContextMenuItemTagTextDirectionMenu_STR "Text direction context sub-menu item"
+#define MSG_MultipleFileUploadText_STR ""
+#define MSG_Loading_STR "Loading..."
+#define MSG_Ready_STR "Ready"
+#define MSG_Connecting_STR "Connecting..."
+#define MSG_Error_STR "Error"
+#define MSG_Untitled_STR "(Untitled)"
+#define MSG_DownloadState_Starting_STR "Starting"
+#define MSG_DownloadState_Active_STR "Downloading"
+#define MSG_DownloadState_Failed_STR "Error"
+#define MSG_DownloadState_Finished_STR "Finished"
+#define MSG_UnknownFileSize_STR "unknown"
+#define MSG_UnknownFileName_STR "unknown"
+#define MSG_UnknownDownloadSpeed_STR "unknown"
+#define MSG_DownloadFileSize_STR "File size"
+#define MSG_DownloadFileName_STR "File name"
+#define MSG_DownloadSpeed_STR "Speed"
+#define MSG_DownloadState_STR "Status"
+#define MSG_DownloadProgress_STR "Progress"
+#define MSG_DownloadManager_Title_STR "OWB Download Manager"
+#define MSG_DownloadManager_Cancel_STR "Cancel"
+#define MSG_DownloadManager_ClearFinished_STR "Clear finished"
+#define MSG_SearchWindow_Title_STR "OWB Search Window"
+#define MSG_SearchWindow_Locate_STR "Locate:"
+#define MSG_SearchWindow_CaseSensitive_STR "Case Sensitive"
+#define MSG_SearchWindow_FindNext_STR "Find next"
+#define MSG_SearchWindow_FindPrevious_STR "Find previous"
+#define MSG_PreferencesManager_Title_STR "OWB Preferences"
+#define MSG_PreferencesManager_Main_STR "Main"
+#define MSG_PreferencesManager_Downloads_STR "Downloads"
+#define MSG_PreferencesManager_SaveFilesTo_STR "Save files to:"
+#define MSG_PreferencesManager_ZuneSettings_STR "Zune Settings"
+#define MSG_PreferencesManager_OpenZuneSettings_STR "Open Zune Settings"
+#define MSG_PreferencesManager_ProxySettings_STR "Proxy Settings"
+#define MSG_PreferencesManager_HttpProxy_STR "HTTP Proxy:"
+#define MSG_PreferencesManager_Content_STR "Content"
+#define MSG_PreferencesManager_JavaScript_STR "JavaScript"
+#define MSG_PreferencesManager_EnableJavaScript_STR "Enable JavaScript:"
+#define MSG_PreferencesManager_Images_STR "Images"
+#define MSG_PreferencesManager_LoadImagesAutomatically_STR "Load images automatically:"
+#define MSG_PreferencesManager_AllowAnimatedImages_STR "Allow animated images:"
+#define MSG_PreferencesManager_AllowLoopedAnimation_STR "Allow looped animation:"
+#define MSG_PreferencesManager_DecodeBMPWithDatatypes_STR "Decode BMP with Datatypes:"
+#define MSG_PreferencesManager_DecodePNGWithDatatypes_STR "Decode PNG with Datatypes:"
+#define MSG_PreferencesManager_DecodeGIFWithDatatypes_STR "Decode GIF with Datatypes:"
+#define MSG_PreferencesManager_DecodeJPGWithDatatypes_STR "Decode JPG with Datatypes:"
+#define MSG_PreferencesManager_Fonts_STR "Fonts"
+#define MSG_PreferencesManager_DefaultFontSize_STR "Default font size:"
+#define MSG_PreferencesManager_MinimumFontSize_STR "Minimum font size:"
+#define MSG_PreferencesManager_StandardFontFamily_STR "Standard font family:"
+#define MSG_PreferencesManager_DefaultFixedFontSize_STR "Default fixed font size:"
+#define MSG_PreferencesManager_FixedFontFamily_STR "Fixed font family:"
+#define MSG_PreferencesManager_SerifFontFamily_STR "Serif font family:"
+#define MSG_PreferencesManager_SansSerifFontFamily_STR "Sans-serif font family:"
+#define MSG_PreferencesManager_CursiveFontFamily_STR "Cursive font family:"
+#define MSG_PreferencesManager_FantasyFontFamily_STR "Fantasy font family:"
+#define MSG_PreferencesManager_Save_STR "Save"
+#define MSG_PreferencesManager_Use_STR "Use"
+#define MSG_PreferencesManager_Cancel_STR "Cancel"
+#define MSG_Tabs_STR "Tabs"
+#define MSG_Tabs_OpenNew_STR "Open new tab"
+#define MSG_Tabs_CloseActive_STR "Close active tab"
+#define MSG_Tabs_Bookmark_STR "Bookmark this tab"
+#define MSG_JavaScript_Alert_STR "OWB JavaScript Alert"
+#define MSG_JavaScript_AlertOK_STR "OK"
+#define MSG_JavaScript_Confirm_STR "OWB JavaScript Confirm"
+#define MSG_JavaScript_ConfirmOptions_STR "Cancel|OK"
+#define MSG_JavaScript_Prompt_STR "OWB JavaScript Prompt"
+#define MSG_JavaScript_PromptOK_STR "OK"
+#define MSG_JavaScript_PromptCancel_STR "Cancel"
+#define MSG_RequestPolicy_Title_STR "OWB Policy Requester"
+#define MSG_RequestPolicy_Message_STR "You are about to open file '%s' having MIME type '%s'.\nWhat should OWB do with this file?"
+#define MSG_RequestPolicy_Options_STR "Download|Show|Cancel"
+#define MSG_RequestCredentials_Title_STR "OWB Authentication Requester"
+#define MSG_RequestCredentials_Message_STR "Please enter username and password to access realm %s at host %s."
+#define MSG_RequestCredentials_Username_STR "Username:"
+#define MSG_RequestCredentials_Password_STR "Password:"
+#define MSG_RequestCredentials_OK_STR "OK"
+#define MSG_RequestCredentials_Cancel_STR "Cancel"
+#define MSG_BookmarkManager_Title_STR "Bookmark Manager"
+#define MSG_BookmarkManager_Label_STR "Label"
+#define MSG_BookmarkManager_URL_STR "URL"
+#define MSG_BookmarkManager_Insert_STR "Insert"
+#define MSG_BookmarkManager_Change_STR "Change"
+#define MSG_BookmarkManager_Remove_STR "Remove"
+#define MSG_BookmarkManager_MenuTitle_STR "Bookmarks"
+#define MSG_BookmarkManager_MoveUp_STR "Move up"
+#define MSG_BookmarkManager_MoveDown_STR "Move down"
+#define MSG_MainMenu_File_STR "File"
+#define MSG_MainMenu_OpenNewTab_STR "Open new tab"
+#define MSG_MainMenu_OpenNewWindow_STR "Open new window"
+#define MSG_MainMenu_OpenFile_STR "Open file"
+#define MSG_MainMenu_CloseCurrentTab_STR "Close current tab"
+#define MSG_MainMenu_CloseWindow_STR "Close window"
+#define MSG_MainMenu_Quit_STR "Quit"
+#define MSG_MainMenu_Edit_STR "Edit"
+#define MSG_MainMenu_Find_STR "Find"
+#define MSG_MainMenu_FindNext_STR "Find next"
+#define MSG_MainMenu_Preferences_STR "Preferences"
+#define MSG_MainMenu_Tools_STR "Tools"
+#define MSG_MainMenu_BookmarkManager_STR "Bookmark manager"
+#define MSG_MainMenu_DownloadManager_STR "Download manager"
+#define MSG_MainMenu_Cut_STR "Cut"
+#define MSG_MainMenu_Copy_STR "Copy"
+#define MSG_MainMenu_Paste_STR "Paste"
+#define MSG_MainMenu_View_STR "View"
+#define MSG_MainMenu_ZoomIn_STR "Zoom in"
+#define MSG_MainMenu_ZoomOut_STR "Zoom out"
+#define MSG_MainMenu_ZoomReset_STR "Reset zoom"
+#define MSG_MainMenu_ViewSource_STR "View source"
+
+#endif /* CATCOMP_STRINGS */
+
+
+/***************************************************************/
+
+
+#ifdef CATCOMP_ARRAY
+
+struct CatCompArrayType
+{
+  LONG   cca_ID;
+  STRPTR cca_Str;
+};
+
+static const struct CatCompArrayType CatCompArray[] =
+{
+  {MSG_OWB,(STRPTR)MSG_OWB_STR},
+  {MSG_SubmitButtonDefaultLabel,(STRPTR)MSG_SubmitButtonDefaultLabel_STR},
+  {MSG_InputElementAltText,(STRPTR)MSG_InputElementAltText_STR},
+  {MSG_ResetButtonDefaultLabel,(STRPTR)MSG_ResetButtonDefaultLabel_STR},
+  {MSG_SearchableIndexIntroduction,(STRPTR)MSG_SearchableIndexIntroduction_STR},
+  {MSG_FileButtonChooseFileLabel,(STRPTR)MSG_FileButtonChooseFileLabel_STR},
+  {MSG_FileButtonNoFileSelectedLabel,(STRPTR)MSG_FileButtonNoFileSelectedLabel_STR},
+  {MSG_ContextMenuItemTagOpenLinkInNewWindow,(STRPTR)MSG_ContextMenuItemTagOpenLinkInNewWindow_STR},
+  {MSG_ContextMenuItemTagOpenLinkInNewTab,(STRPTR)MSG_ContextMenuItemTagOpenLinkInNewTab_STR},
+  {MSG_ContextMenuItemTagDownloadLinkToDisk,(STRPTR)MSG_ContextMenuItemTagDownloadLinkToDisk_STR},
+  {MSG_ContextMenuItemTagCopyLinkToClipboard,(STRPTR)MSG_ContextMenuItemTagCopyLinkToClipboard_STR},
+  {MSG_ContextMenuItemTagOpenImageInNewWindow,(STRPTR)MSG_ContextMenuItemTagOpenImageInNewWindow_STR},
+  {MSG_ContextMenuItemTagOpenImageInNewTab,(STRPTR)MSG_ContextMenuItemTagOpenImageInNewTab_STR},
+  {MSG_ContextMenuItemTagDownloadImageToDisk,(STRPTR)MSG_ContextMenuItemTagDownloadImageToDisk_STR},
+  {MSG_ContextMenuItemTagCopyImageToClipboard,(STRPTR)MSG_ContextMenuItemTagCopyImageToClipboard_STR},
+  {MSG_ContextMenuItemTagOpenFrameInNewWindow,(STRPTR)MSG_ContextMenuItemTagOpenFrameInNewWindow_STR},
+  {MSG_ContextMenuItemTagOpenFrameInNewTab,(STRPTR)MSG_ContextMenuItemTagOpenFrameInNewTab_STR},
+  {MSG_ContextMenuItemTagCopy,(STRPTR)MSG_ContextMenuItemTagCopy_STR},
+  {MSG_ContextMenuItemTagDelete,(STRPTR)MSG_ContextMenuItemTagDelete_STR},
+  {MSG_ContextMenuItemTagSelectAll,(STRPTR)MSG_ContextMenuItemTagSelectAll_STR},
+  {MSG_ContextMenuItemTagUnicode,(STRPTR)MSG_ContextMenuItemTagUnicode_STR},
+  {MSG_ContextMenuItemTagInputMethods,(STRPTR)MSG_ContextMenuItemTagInputMethods_STR},
+  {MSG_ContextMenuItemTagGoBack,(STRPTR)MSG_ContextMenuItemTagGoBack_STR},
+  {MSG_ContextMenuItemTagGoForward,(STRPTR)MSG_ContextMenuItemTagGoForward_STR},
+  {MSG_ContextMenuItemTagStop,(STRPTR)MSG_ContextMenuItemTagStop_STR},
+  {MSG_ContextMenuItemTagReload,(STRPTR)MSG_ContextMenuItemTagReload_STR},
+  {MSG_ContextMenuItemTagCut,(STRPTR)MSG_ContextMenuItemTagCut_STR},
+  {MSG_ContextMenuItemTagPaste,(STRPTR)MSG_ContextMenuItemTagPaste_STR},
+  {MSG_ContextMenuItemTagNoGuessesFound,(STRPTR)MSG_ContextMenuItemTagNoGuessesFound_STR},
+  {MSG_ContextMenuItemTagIgnoreSpelling,(STRPTR)MSG_ContextMenuItemTagIgnoreSpelling_STR},
+  {MSG_ContextMenuItemTagLearnSpelling,(STRPTR)MSG_ContextMenuItemTagLearnSpelling_STR},
+  {MSG_ContextMenuItemTagSearchWeb,(STRPTR)MSG_ContextMenuItemTagSearchWeb_STR},
+  {MSG_ContextMenuItemTagLookUpInDictionary,(STRPTR)MSG_ContextMenuItemTagLookUpInDictionary_STR},
+  {MSG_ContextMenuItemTagOpenLink,(STRPTR)MSG_ContextMenuItemTagOpenLink_STR},
+  {MSG_ContextMenuItemTagIgnoreGrammar,(STRPTR)MSG_ContextMenuItemTagIgnoreGrammar_STR},
+  {MSG_ContextMenuItemTagSpellingMenu,(STRPTR)MSG_ContextMenuItemTagSpellingMenu_STR},
+  {MSG_ContextMenuItemTagShowSpellingPanel,(STRPTR)MSG_ContextMenuItemTagShowSpellingPanel_STR},
+  {MSG_ContextMenuItemTagHideSpellingPanel,(STRPTR)MSG_ContextMenuItemTagHideSpellingPanel_STR},
+  {MSG_ContextMenuItemTagCheckSpelling,(STRPTR)MSG_ContextMenuItemTagCheckSpelling_STR},
+  {MSG_ContextMenuItemTagCheckSpellingWhileTyping,(STRPTR)MSG_ContextMenuItemTagCheckSpellingWhileTyping_STR},
+  {MSG_ContextMenuItemTagCheckGrammarWithSpelling,(STRPTR)MSG_ContextMenuItemTagCheckGrammarWithSpelling_STR},
+  {MSG_ContextMenuItemTagFontMenu,(STRPTR)MSG_ContextMenuItemTagFontMenu_STR},
+  {MSG_ContextMenuItemTagBold,(STRPTR)MSG_ContextMenuItemTagBold_STR},
+  {MSG_ContextMenuItemTagItalic,(STRPTR)MSG_ContextMenuItemTagItalic_STR},
+  {MSG_ContextMenuItemTagUnderline,(STRPTR)MSG_ContextMenuItemTagUnderline_STR},
+  {MSG_ContextMenuItemTagOutline,(STRPTR)MSG_ContextMenuItemTagOutline_STR},
+  {MSG_ContextMenuItemTagInspectElement,(STRPTR)MSG_ContextMenuItemTagInspectElement_STR},
+  {MSG_searchMenuNoRecentSearchesText,(STRPTR)MSG_searchMenuNoRecentSearchesText_STR},
+  {MSG_searchMenuRecentSearchesText,(STRPTR)MSG_searchMenuRecentSearchesText_STR},
+  {MSG_searchMenuClearRecentSearchesText,(STRPTR)MSG_searchMenuClearRecentSearchesText_STR},
+  {MSG_AXDefinitionListTermText,(STRPTR)MSG_AXDefinitionListTermText_STR},
+  {MSG_AXDefinitionListDefinitionText,(STRPTR)MSG_AXDefinitionListDefinitionText_STR},
+  {MSG_AXButtonActionVerb,(STRPTR)MSG_AXButtonActionVerb_STR},
+  {MSG_AXRadioButtonActionVerb,(STRPTR)MSG_AXRadioButtonActionVerb_STR},
+  {MSG_AXTextFieldActionVerb,(STRPTR)MSG_AXTextFieldActionVerb_STR},
+  {MSG_AXCheckedCheckBoxActionVerb,(STRPTR)MSG_AXCheckedCheckBoxActionVerb_STR},
+  {MSG_AXUncheckedCheckBoxActionVerb,(STRPTR)MSG_AXUncheckedCheckBoxActionVerb_STR},
+  {MSG_AXLinkActionVerb,(STRPTR)MSG_AXLinkActionVerb_STR},
+  {MSG_unknownFileSizeText,(STRPTR)MSG_unknownFileSizeText_STR},
+  {MSG_imageTitle,(STRPTR)MSG_imageTitle_STR},
+  {MSG_ContextMenuItemTagLeftToRight,(STRPTR)MSG_ContextMenuItemTagLeftToRight_STR},
+  {MSG_ContextMenuItemTagDefaultDirection,(STRPTR)MSG_ContextMenuItemTagDefaultDirection_STR},
+  {MSG_ContextMenuItemTagRightToLeft,(STRPTR)MSG_ContextMenuItemTagRightToLeft_STR},
+  {MSG_ContextMenuItemTagWritingDirectionMenu,(STRPTR)MSG_ContextMenuItemTagWritingDirectionMenu_STR},
+  {MSG_ContextMenuItemTagTextDirectionMenu,(STRPTR)MSG_ContextMenuItemTagTextDirectionMenu_STR},
+  {MSG_MultipleFileUploadText,(STRPTR)MSG_MultipleFileUploadText_STR},
+  {MSG_Loading,(STRPTR)MSG_Loading_STR},
+  {MSG_Ready,(STRPTR)MSG_Ready_STR},
+  {MSG_Connecting,(STRPTR)MSG_Connecting_STR},
+  {MSG_Error,(STRPTR)MSG_Error_STR},
+  {MSG_Untitled,(STRPTR)MSG_Untitled_STR},
+  {MSG_DownloadState_Starting,(STRPTR)MSG_DownloadState_Starting_STR},
+  {MSG_DownloadState_Active,(STRPTR)MSG_DownloadState_Active_STR},
+  {MSG_DownloadState_Failed,(STRPTR)MSG_DownloadState_Failed_STR},
+  {MSG_DownloadState_Finished,(STRPTR)MSG_DownloadState_Finished_STR},
+  {MSG_UnknownFileSize,(STRPTR)MSG_UnknownFileSize_STR},
+  {MSG_UnknownFileName,(STRPTR)MSG_UnknownFileName_STR},
+  {MSG_UnknownDownloadSpeed,(STRPTR)MSG_UnknownDownloadSpeed_STR},
+  {MSG_DownloadFileSize,(STRPTR)MSG_DownloadFileSize_STR},
+  {MSG_DownloadFileName,(STRPTR)MSG_DownloadFileName_STR},
+  {MSG_DownloadSpeed,(STRPTR)MSG_DownloadSpeed_STR},
+  {MSG_DownloadState,(STRPTR)MSG_DownloadState_STR},
+  {MSG_DownloadProgress,(STRPTR)MSG_DownloadProgress_STR},
+  {MSG_DownloadManager_Title,(STRPTR)MSG_DownloadManager_Title_STR},
+  {MSG_DownloadManager_Cancel,(STRPTR)MSG_DownloadManager_Cancel_STR},
+  {MSG_DownloadManager_ClearFinished,(STRPTR)MSG_DownloadManager_ClearFinished_STR},
+  {MSG_SearchWindow_Title,(STRPTR)MSG_SearchWindow_Title_STR},
+  {MSG_SearchWindow_Locate,(STRPTR)MSG_SearchWindow_Locate_STR},
+  {MSG_SearchWindow_CaseSensitive,(STRPTR)MSG_SearchWindow_CaseSensitive_STR},
+  {MSG_SearchWindow_FindNext,(STRPTR)MSG_SearchWindow_FindNext_STR},
+  {MSG_SearchWindow_FindPrevious,(STRPTR)MSG_SearchWindow_FindPrevious_STR},
+  {MSG_PreferencesManager_Title,(STRPTR)MSG_PreferencesManager_Title_STR},
+  {MSG_PreferencesManager_Main,(STRPTR)MSG_PreferencesManager_Main_STR},
+  {MSG_PreferencesManager_Downloads,(STRPTR)MSG_PreferencesManager_Downloads_STR},
+  {MSG_PreferencesManager_SaveFilesTo,(STRPTR)MSG_PreferencesManager_SaveFilesTo_STR},
+  {MSG_PreferencesManager_ZuneSettings,(STRPTR)MSG_PreferencesManager_ZuneSettings_STR},
+  {MSG_PreferencesManager_OpenZuneSettings,(STRPTR)MSG_PreferencesManager_OpenZuneSettings_STR},
+  {MSG_PreferencesManager_ProxySettings,(STRPTR)MSG_PreferencesManager_ProxySettings_STR},
+  {MSG_PreferencesManager_HttpProxy,(STRPTR)MSG_PreferencesManager_HttpProxy_STR},
+  {MSG_PreferencesManager_Content,(STRPTR)MSG_PreferencesManager_Content_STR},
+  {MSG_PreferencesManager_JavaScript,(STRPTR)MSG_PreferencesManager_JavaScript_STR},
+  {MSG_PreferencesManager_EnableJavaScript,(STRPTR)MSG_PreferencesManager_EnableJavaScript_STR},
+  {MSG_PreferencesManager_Images,(STRPTR)MSG_PreferencesManager_Images_STR},
+  {MSG_PreferencesManager_LoadImagesAutomatically,(STRPTR)MSG_PreferencesManager_LoadImagesAutomatically_STR},
+  {MSG_PreferencesManager_AllowAnimatedImages,(STRPTR)MSG_PreferencesManager_AllowAnimatedImages_STR},
+  {MSG_PreferencesManager_AllowLoopedAnimation,(STRPTR)MSG_PreferencesManager_AllowLoopedAnimation_STR},
+  {MSG_PreferencesManager_DecodeBMPWithDatatypes,(STRPTR)MSG_PreferencesManager_DecodeBMPWithDatatypes_STR},
+  {MSG_PreferencesManager_DecodePNGWithDatatypes,(STRPTR)MSG_PreferencesManager_DecodePNGWithDatatypes_STR},
+  {MSG_PreferencesManager_DecodeGIFWithDatatypes,(STRPTR)MSG_PreferencesManager_DecodeGIFWithDatatypes_STR},
+  {MSG_PreferencesManager_DecodeJPGWithDatatypes,(STRPTR)MSG_PreferencesManager_DecodeJPGWithDatatypes_STR},
+  {MSG_PreferencesManager_Fonts,(STRPTR)MSG_PreferencesManager_Fonts_STR},
+  {MSG_PreferencesManager_DefaultFontSize,(STRPTR)MSG_PreferencesManager_DefaultFontSize_STR},
+  {MSG_PreferencesManager_MinimumFontSize,(STRPTR)MSG_PreferencesManager_MinimumFontSize_STR},
+  {MSG_PreferencesManager_StandardFontFamily,(STRPTR)MSG_PreferencesManager_StandardFontFamily_STR},
+  {MSG_PreferencesManager_DefaultFixedFontSize,(STRPTR)MSG_PreferencesManager_DefaultFixedFontSize_STR},
+  {MSG_PreferencesManager_FixedFontFamily,(STRPTR)MSG_PreferencesManager_FixedFontFamily_STR},
+  {MSG_PreferencesManager_SerifFontFamily,(STRPTR)MSG_PreferencesManager_SerifFontFamily_STR},
+  {MSG_PreferencesManager_SansSerifFontFamily,(STRPTR)MSG_PreferencesManager_SansSerifFontFamily_STR},
+  {MSG_PreferencesManager_CursiveFontFamily,(STRPTR)MSG_PreferencesManager_CursiveFontFamily_STR},
+  {MSG_PreferencesManager_FantasyFontFamily,(STRPTR)MSG_PreferencesManager_FantasyFontFamily_STR},
+  {MSG_PreferencesManager_Save,(STRPTR)MSG_PreferencesManager_Save_STR},
+  {MSG_PreferencesManager_Use,(STRPTR)MSG_PreferencesManager_Use_STR},
+  {MSG_PreferencesManager_Cancel,(STRPTR)MSG_PreferencesManager_Cancel_STR},
+  {MSG_Tabs,(STRPTR)MSG_Tabs_STR},
+  {MSG_Tabs_OpenNew,(STRPTR)MSG_Tabs_OpenNew_STR},
+  {MSG_Tabs_CloseActive,(STRPTR)MSG_Tabs_CloseActive_STR},
+  {MSG_Tabs_Bookmark,(STRPTR)MSG_Tabs_Bookmark_STR},
+  {MSG_JavaScript_Alert,(STRPTR)MSG_JavaScript_Alert_STR},
+  {MSG_JavaScript_AlertOK,(STRPTR)MSG_JavaScript_AlertOK_STR},
+  {MSG_JavaScript_Confirm,(STRPTR)MSG_JavaScript_Confirm_STR},
+  {MSG_JavaScript_ConfirmOptions,(STRPTR)MSG_JavaScript_ConfirmOptions_STR},
+  {MSG_JavaScript_Prompt,(STRPTR)MSG_JavaScript_Prompt_STR},
+  {MSG_JavaScript_PromptOK,(STRPTR)MSG_JavaScript_PromptOK_STR},
+  {MSG_JavaScript_PromptCancel,(STRPTR)MSG_JavaScript_PromptCancel_STR},
+  {MSG_RequestPolicy_Title,(STRPTR)MSG_RequestPolicy_Title_STR},
+  {MSG_RequestPolicy_Message,(STRPTR)MSG_RequestPolicy_Message_STR},
+  {MSG_RequestPolicy_Options,(STRPTR)MSG_RequestPolicy_Options_STR},
+  {MSG_RequestCredentials_Title,(STRPTR)MSG_RequestCredentials_Title_STR},
+  {MSG_RequestCredentials_Message,(STRPTR)MSG_RequestCredentials_Message_STR},
+  {MSG_RequestCredentials_Username,(STRPTR)MSG_RequestCredentials_Username_STR},
+  {MSG_RequestCredentials_Password,(STRPTR)MSG_RequestCredentials_Password_STR},
+  {MSG_RequestCredentials_OK,(STRPTR)MSG_RequestCredentials_OK_STR},
+  {MSG_RequestCredentials_Cancel,(STRPTR)MSG_RequestCredentials_Cancel_STR},
+  {MSG_BookmarkManager_Title,(STRPTR)MSG_BookmarkManager_Title_STR},
+  {MSG_BookmarkManager_Label,(STRPTR)MSG_BookmarkManager_Label_STR},
+  {MSG_BookmarkManager_URL,(STRPTR)MSG_BookmarkManager_URL_STR},
+  {MSG_BookmarkManager_Insert,(STRPTR)MSG_BookmarkManager_Insert_STR},
+  {MSG_BookmarkManager_Change,(STRPTR)MSG_BookmarkManager_Change_STR},
+  {MSG_BookmarkManager_Remove,(STRPTR)MSG_BookmarkManager_Remove_STR},
+  {MSG_BookmarkManager_MenuTitle,(STRPTR)MSG_BookmarkManager_MenuTitle_STR},
+  {MSG_BookmarkManager_MoveUp,(STRPTR)MSG_BookmarkManager_MoveUp_STR},
+  {MSG_BookmarkManager_MoveDown,(STRPTR)MSG_BookmarkManager_MoveDown_STR},
+  {MSG_MainMenu_File,(STRPTR)MSG_MainMenu_File_STR},
+  {MSG_MainMenu_OpenNewTab,(STRPTR)MSG_MainMenu_OpenNewTab_STR},
+  {MSG_MainMenu_OpenNewWindow,(STRPTR)MSG_MainMenu_OpenNewWindow_STR},
+  {MSG_MainMenu_OpenFile,(STRPTR)MSG_MainMenu_OpenFile_STR},
+  {MSG_MainMenu_CloseCurrentTab,(STRPTR)MSG_MainMenu_CloseCurrentTab_STR},
+  {MSG_MainMenu_CloseWindow,(STRPTR)MSG_MainMenu_CloseWindow_STR},
+  {MSG_MainMenu_Quit,(STRPTR)MSG_MainMenu_Quit_STR},
+  {MSG_MainMenu_Edit,(STRPTR)MSG_MainMenu_Edit_STR},
+  {MSG_MainMenu_Find,(STRPTR)MSG_MainMenu_Find_STR},
+  {MSG_MainMenu_FindNext,(STRPTR)MSG_MainMenu_FindNext_STR},
+  {MSG_MainMenu_Preferences,(STRPTR)MSG_MainMenu_Preferences_STR},
+  {MSG_MainMenu_Tools,(STRPTR)MSG_MainMenu_Tools_STR},
+  {MSG_MainMenu_BookmarkManager,(STRPTR)MSG_MainMenu_BookmarkManager_STR},
+  {MSG_MainMenu_DownloadManager,(STRPTR)MSG_MainMenu_DownloadManager_STR},
+  {MSG_MainMenu_Cut,(STRPTR)MSG_MainMenu_Cut_STR},
+  {MSG_MainMenu_Copy,(STRPTR)MSG_MainMenu_Copy_STR},
+  {MSG_MainMenu_Paste,(STRPTR)MSG_MainMenu_Paste_STR},
+  {MSG_MainMenu_View,(STRPTR)MSG_MainMenu_View_STR},
+  {MSG_MainMenu_ZoomIn,(STRPTR)MSG_MainMenu_ZoomIn_STR},
+  {MSG_MainMenu_ZoomOut,(STRPTR)MSG_MainMenu_ZoomOut_STR},
+  {MSG_MainMenu_ZoomReset,(STRPTR)MSG_MainMenu_ZoomReset_STR},
+  {MSG_MainMenu_ViewSource,(STRPTR)MSG_MainMenu_ViewSource_STR},
+  {0,NULL}
+};
+
+#endif /* CATCOMP_ARRAY */
+
+/***************************************************************/
+
+
+#ifdef CATCOMP_BLOCK
+
+//static const chat CatCompBlock[] =
+//{
+//     
+//};
+
+#endif /* CATCOMP_BLOCK */
+
+/***************************************************************/
+
+struct LocaleInfo
+{
+  APTR li_LocaleBase;
+  APTR li_Catalog;
+};
+
+
+#ifdef CATCOMP_CODE
+
+STRPTR GetString(struct LocaleInfo *li, LONG stringNum)
+{
+  LONG *l;
+  UWORD *w;
+  STRPTR  builtIn;
+
+  l = (LONG *)CatCompBlock;
+
+  while (*l != stringNum)
+  {
+    w = (UWORD *)((IPTR)l + 4);
+    l = (LONG *)((IPTR)l + (LONG)*w + 6);
+  }
+  builtIn = (STRPTR)((IPTR)l + 6);
+
+#define XLocaleBase LocaleBase
+#define LocaleBase li->li_LocaleBase
+
+  if (LocaleBase)
+    return(GetCatalogStr(li->li_Catalog,stringNum,builtIn));
+#define LocaleBase XLocaleBase
+#undef XLocaleBase
+
+  return (builtIn);
+}  
+
+#endif /* CATCOMP_CODE */
+
+/***************************************************************/
+
+
+#endif
diff -ruN OWB-r1097/BAL/Internationalization/WebCore/CMakeLists.txt OWB-r1097.aros/BAL/Internationalization/WebCore/CMakeLists.txt
--- OWB-r1097/BAL/Internationalization/WebCore/CMakeLists.txt	2009-10-06 09:13:04.000000000 +0100
+++ OWB-r1097.aros/BAL/Internationalization/WebCore/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -37,6 +37,12 @@
     aux_source_directory(${BAL_DIR}/Internationalization/WebCore/Generic WEBCORE_SRC)
 endif(USE_I18N_GENERIC)
 
+if(USE_GRAPHICS_AROS)
+    create_include_link(${BAL_DIR}/Internationalization/WebCore/AROS BAL)
+
+    aux_source_directory(${BAL_DIR}/Internationalization/WebCore/AROS WEBCORE_SRC)
+endif(USE_GRAPHICS_AROS)
+
 if(USE_I18N_QT)
     create_include_link(${BAL_DIR}/Internationalization/WebCore/Qt BAL)
     create_include_link(${BAL_DIR}/Internationalization/WebCore/Qt BAL/qt)
diff -ruN OWB-r1097/BAL/Internationalization/WebCore/ICU/BCTextEncodingDetectorICU.cpp OWB-r1097.aros/BAL/Internationalization/WebCore/ICU/BCTextEncodingDetectorICU.cpp
--- OWB-r1097/BAL/Internationalization/WebCore/ICU/BCTextEncodingDetectorICU.cpp	2009-03-27 17:37:38.000000000 +0000
+++ OWB-r1097.aros/BAL/Internationalization/WebCore/ICU/BCTextEncodingDetectorICU.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -53,7 +53,7 @@
     UNUSED_PARAM(hintEncodingName);
     return false;
 #else
-    int matchesCount = 0; 
+    int32_t matchesCount = 0; 
     UErrorCode status = U_ZERO_ERROR;
     UCharsetDetector* detector = ucsdet_open(&status);
     if (U_FAILURE(status))
diff -ruN OWB-r1097/BAL/Media/WebCore/AROS/BCSoundAROS.cpp OWB-r1097.aros/BAL/Media/WebCore/AROS/BCSoundAROS.cpp
--- OWB-r1097/BAL/Media/WebCore/AROS/BCSoundAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Media/WebCore/AROS/BCSoundAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,42 @@
+/*
+ * Copyright (C) 2009 Stanislaw Szymczyk
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+
+#include "Sound.h"
+#include <proto/intuition.h>
+
+namespace WebCore {
+
+void systemBeep()
+{
+    DisplayBeep(NULL);
+}
+
+}
diff -ruN OWB-r1097/BAL/Media/WebCore/CMakeLists.txt OWB-r1097.aros/BAL/Media/WebCore/CMakeLists.txt
--- OWB-r1097/BAL/Media/WebCore/CMakeLists.txt	2009-10-06 09:13:04.000000000 +0100
+++ OWB-r1097.aros/BAL/Media/WebCore/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -39,3 +39,7 @@
     endif(ENABLE_VIDEO)
         aux_source_directory(${BAL_DIR}/Media/WebCore/SDL WEBCORE_SRC)
 endif(USE_GRAPHICS_SDL)
+
+if(USE_GRAPHICS_AROS)
+    aux_source_directory(${BAL_DIR}/Media/WebCore/AROS WEBCORE_SRC)
+endif(USE_GRAPHICS_AROS)
diff -ruN OWB-r1097/BAL/Memory/WTF/BCFastMallocWTF.cpp OWB-r1097.aros/BAL/Memory/WTF/BCFastMallocWTF.cpp
--- OWB-r1097/BAL/Memory/WTF/BCFastMallocWTF.cpp	2009-10-05 11:36:03.000000000 +0100
+++ OWB-r1097.aros/BAL/Memory/WTF/BCFastMallocWTF.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -192,10 +192,11 @@
 #if FORCE_SYSTEM_MALLOC
 
 #include <stdlib.h>
-#if !PLATFORM(WIN_OS)
-    #include <pthread.h>
-#else
+#if PLATFORM(WIN_OS)
     #include "windows.h"
+#elif PLATFORM(AROS)
+#else
+    #include <pthread.h>
 #endif
 
 namespace WTF {
diff -ruN OWB-r1097/BAL/Memory/WTF/BCTCSystemAllocWTF.cpp OWB-r1097.aros/BAL/Memory/WTF/BCTCSystemAllocWTF.cpp
--- OWB-r1097/BAL/Memory/WTF/BCTCSystemAllocWTF.cpp	2009-07-29 12:38:23.000000000 +0100
+++ OWB-r1097.aros/BAL/Memory/WTF/BCTCSystemAllocWTF.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -52,8 +52,10 @@
 #else
 #include <errno.h>
 #include <unistd.h>
+#if !PLATFORM(AROS)
 #include <sys/mman.h>
 #endif
+#endif
 
 #ifndef MAP_ANONYMOUS
 #define MAP_ANONYMOUS MAP_ANON
diff -ruN OWB-r1097/BAL/Network/WebCore/Curl/BCAuthenticationChallengeCurl.h OWB-r1097.aros/BAL/Network/WebCore/Curl/BCAuthenticationChallengeCurl.h
--- OWB-r1097/BAL/Network/WebCore/Curl/BCAuthenticationChallengeCurl.h	2008-12-10 09:32:50.000000000 +0000
+++ OWB-r1097.aros/BAL/Network/WebCore/Curl/BCAuthenticationChallengeCurl.h	2017-04-01 14:57:02.745938516 +0100
@@ -39,8 +39,9 @@
     {
     }
 
-    AuthenticationChallenge(const ProtectionSpace& protectionSpace, const Credential& proposedCredential, unsigned previousFailureCount, const ResourceResponse& response, const ResourceError& error)
+    AuthenticationChallenge(const ProtectionSpace& protectionSpace, const Credential& proposedCredential, unsigned previousFailureCount, const ResourceResponse& response, const ResourceError& error, ResourceHandle* sourceHandle)
         : AuthenticationChallengeBase(protectionSpace, proposedCredential, previousFailureCount, response, error)
+        , m_sourceHandle(sourceHandle)
     {
     }
 
diff -ruN OWB-r1097/BAL/Network/WebCore/Curl/BCCookieManagerCurl.cpp OWB-r1097.aros/BAL/Network/WebCore/Curl/BCCookieManagerCurl.cpp
--- OWB-r1097/BAL/Network/WebCore/Curl/BCCookieManagerCurl.cpp	2009-10-16 19:40:05.000000000 +0100
+++ OWB-r1097.aros/BAL/Network/WebCore/Curl/BCCookieManagerCurl.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -79,7 +79,7 @@
 bool CookieManager::shouldRejectForSecurityReason(const ParsedCookie* cookie, const KURL& url)
 {
     // Check if path attribute is a prefix of the request URI.
-    if (!cookie->path().endsWith(url.path()) == -1) {
+    if (!url.path().startsWith(cookie->path())) {
         LOG_ERROR("Cookie %s is rejected because its path does not math the URL %s\n", cookie->toString().utf8().data(), url.string().utf8().data());
         return true;
     }
@@ -117,8 +117,8 @@
     if (url.string().startsWith(httpsPrefix, false))
         isConnectionSecure = true;
 
-    // The max size is the number of cookie per host multiplied by the maximum length of a cookie. We add 1 for the final '\0'.
-    static const size_t cookiesMaxLength = s_maxCookieLength * s_maxCookieCountPerHost + 1;
+    // The max size is the number of cookie per host multiplied by the maximum length of a cookie with a space appended. We add 1 for the final '\0'.
+    static const size_t cookiesMaxLength = (s_maxCookieLength + 1) * s_maxCookieCountPerHost + 1;
     Vector<UChar> cookiePairs;
     cookiePairs.reserveInitialCapacity(cookiesMaxLength);
     for (HashMap<String, CookieMap*>::iterator it = m_managerMap.begin(); it != m_managerMap.end(); ++it) {
@@ -134,6 +134,7 @@
                 if (url.path().startsWith(cookie->path(), false) && (isConnectionSecure || !cookie->isSecure()) && (filter == WithHttpOnlyCookies || !cookie->isHttpOnly())) {
                     String nameValuePair = cookie->toNameValuePair();
                     append(cookiePairs, nameValuePair);
+                    cookiePairs.append(' ');
                 }
             }
         }
@@ -141,6 +142,10 @@
     // Per construction of our cookies, we should not grow our vector.
     ASSERT(cookiePairs.capacity() == cookiesMaxLength);
 
+    // remove the unnecessary final cookie separating space
+    if (cookiePairs.size() > 0)
+        cookiePairs.removeLast();
+
     // Append the final '\0'.
     static const String nullTerminator("\0");
     append(cookiePairs, nullTerminator);
@@ -161,8 +166,11 @@
 
 void CookieManager::setCookieJar(const char* fileName)
 {
+    if(m_cookieJarFileName == fileName)
+        return;
     m_cookieJarFileName = String(fileName);
     cookieBackingStore().open(m_cookieJarFileName);
+    getBackingStoreCookies();
 }
 
 void CookieManager::checkAndTreatCookie(ParsedCookie* cookie)
@@ -251,9 +259,10 @@
     for (size_t i = 0; i < cookies.size(); ++i) {
         ParsedCookie* newCookie = cookies[i];
 
-        if (newCookie->hasExpired())
+        if (newCookie->hasExpired()) {
+            cookieBackingStore().remove(newCookie);
             delete newCookie;
-        else {
+        } else {
             CookieMap* curMap = m_managerMap.get(newCookie->domain());
             if (!curMap) {
                 curMap = new CookieMap();
diff -ruN OWB-r1097/BAL/Network/WebCore/Curl/BCCookieParserCurl.cpp OWB-r1097.aros/BAL/Network/WebCore/Curl/BCCookieParserCurl.cpp
--- OWB-r1097/BAL/Network/WebCore/Curl/BCCookieParserCurl.cpp	2009-08-14 16:35:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Network/WebCore/Curl/BCCookieParserCurl.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -316,9 +316,16 @@
     if (!res->domain() || !res->domain().length())
         res->setDomain("." + m_defaultCookieURL.host());
 
-    // If no path was provided, set it to the host's path
-    if (!res->path() || !res->path().length())
-        res->setPath(m_defaultCookieURL.path());
+    // If no path was provided, set it to the host's path up to the last slash
+    if (!res->path() || !res->path().length()) {
+	String cookiePath = m_defaultCookieURL.path();
+	int lastSlashLocation = cookiePath.reverseFind('/');
+	if (lastSlashLocation > 0) {
+	    res->setPath(cookiePath.substring(0, lastSlashLocation));
+	} else {
+	    res->setPath("/");
+	}
+    }
 
     return res;
 }
diff -ruN OWB-r1097/BAL/Network/WebCore/Curl/BCFormDataStreamCurl.cpp OWB-r1097.aros/BAL/Network/WebCore/Curl/BCFormDataStreamCurl.cpp
--- OWB-r1097/BAL/Network/WebCore/Curl/BCFormDataStreamCurl.cpp	2008-12-10 09:32:50.000000000 +0000
+++ OWB-r1097.aros/BAL/Network/WebCore/Curl/BCFormDataStreamCurl.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -110,4 +110,14 @@
     return m_formDataElementIndex < elements.size();
 }
 
+void FormDataStream::rewind()
+{
+    if (m_file) {
+        fclose(m_file);
+	m_file = 0;
+    }
+    m_formDataElementIndex = 0;
+    m_formDataElementDataOffset = 0;
+}
+
 } // namespace WebCore
diff -ruN OWB-r1097/BAL/Network/WebCore/Curl/BCFormDataStreamCurl.h OWB-r1097.aros/BAL/Network/WebCore/Curl/BCFormDataStreamCurl.h
--- OWB-r1097/BAL/Network/WebCore/Curl/BCFormDataStreamCurl.h	2008-12-10 09:32:50.000000000 +0000
+++ OWB-r1097.aros/BAL/Network/WebCore/Curl/BCFormDataStreamCurl.h	2017-04-01 14:57:02.745938516 +0100
@@ -47,6 +47,7 @@
 
     size_t read(void* ptr, size_t blockSize, size_t numberOfBlocks);
     bool hasMoreElements() const;
+    void rewind();
 
 private:
     // We can hold a weak reference to our ResourceHandle as it holds a strong reference
diff -ruN OWB-r1097/BAL/Network/WebCore/Curl/BCResourceHandleCurl.cpp OWB-r1097.aros/BAL/Network/WebCore/Curl/BCResourceHandleCurl.cpp
--- OWB-r1097/BAL/Network/WebCore/Curl/BCResourceHandleCurl.cpp	2009-10-16 19:40:05.000000000 +0100
+++ OWB-r1097.aros/BAL/Network/WebCore/Curl/BCResourceHandleCurl.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -238,20 +238,87 @@
     response = syncLoader.resourceResponse();
 }
 
-//stubs needed for windows version
-void ResourceHandle::didReceiveAuthenticationChallenge(const AuthenticationChallenge&) 
+void ResourceHandle::didReceiveAuthenticationChallenge(const AuthenticationChallenge& challenge) 
 {
-    notImplemented();
+    /* FIXME: add support for FTP, HTTPS, and FTPS authentication,
+     * get the right port, server and authentication scheme
+     */
+    ResourceHandleInternal* d = getInternal();
+    if (d->m_continueWithoutCredential)
+        return;
+    
+    cancel();
+
+    ProtectionSpace protectionSpace;
+    unsigned previousFailureCount = 0;
+    if (challenge.isNull()) {
+        String authHeader = d->m_response.httpHeaderField("WWW-Authenticate");
+        String authType;
+        String realm;
+        int splitPos = authHeader.find(' ');
+        if(splitPos != -1)
+            authType = authHeader.left(splitPos).stripWhiteSpace();
+        Vector<String> authParams;
+        authHeader.substring(splitPos+1).stripWhiteSpace().split(",", authParams);
+        for(Vector<String>::iterator it = authParams.begin(); it != authParams.end(); it++)
+        {
+            if((*it).startsWith("realm=", false))
+        	realm = (*it).substring(6);
+        }
+
+        ProtectionSpaceAuthenticationScheme protectionScheme = ProtectionSpaceAuthenticationSchemeDefault;
+        if(authType.lower() == "basic")
+            protectionScheme = ProtectionSpaceAuthenticationSchemeHTTPBasic;
+        else if(authType.lower() == "digest")
+            protectionScheme = ProtectionSpaceAuthenticationSchemeHTTPDigest;
+
+        protectionSpace = ProtectionSpace(d->m_request.url().host(),
+                                          80,
+                                          ProtectionSpaceServerHTTP,
+                                          realm,
+                                          protectionScheme);
+    } else {
+        protectionSpace = d->m_webChallenge.protectionSpace();
+        previousFailureCount = d->m_webChallenge.previousFailureCount()+1;
+    }
+    
+    d->m_webChallenge = AuthenticationChallenge(protectionSpace,
+                                                challenge.proposedCredential(),
+                                                previousFailureCount,
+                                                d->m_response,
+                                                challenge.error(),
+                                                this);
+
+    if (d->client())
+        d->client()->didReceiveAuthenticationChallenge(this, d->m_webChallenge);
 }
 
-void ResourceHandle::receivedCredential(const AuthenticationChallenge&, const Credential&) 
+void ResourceHandle::receivedCredential(const AuthenticationChallenge& challenge, const Credential& credential) 
 {
-    notImplemented();
+    ASSERT(!challenge.isNull());   
+    ResourceHandleInternal* d = getInternal();
+    if (challenge != d->m_webChallenge)
+        return;
+
+    d->m_webChallenge = AuthenticationChallenge(challenge.protectionSpace(),
+                                                credential,
+                                                challenge.previousFailureCount(),
+                                                challenge.failureResponse(),
+                                                challenge.error(),
+                                                this);
+
+    ResourceHandleManager::sharedInstance()->add(this);
 }
 
-void ResourceHandle::receivedRequestToContinueWithoutCredential(const AuthenticationChallenge&) 
+void ResourceHandle::receivedRequestToContinueWithoutCredential(const AuthenticationChallenge& challenge) 
 {
-    notImplemented();
+    ASSERT(!challenge.isNull());   
+    ResourceHandleInternal* d = getInternal();
+    if (challenge != d->m_webChallenge)
+        return;
+
+    d->m_continueWithoutCredential = true;
+    ResourceHandleManager::sharedInstance()->add(this);
 }
 
 void ResourceHandle::receivedCancellation(const AuthenticationChallenge&)
diff -ruN OWB-r1097/BAL/Network/WebCore/Curl/BCResourceHandleManagerCurl.cpp OWB-r1097.aros/BAL/Network/WebCore/Curl/BCResourceHandleManagerCurl.cpp
--- OWB-r1097/BAL/Network/WebCore/Curl/BCResourceHandleManagerCurl.cpp	2009-10-16 19:40:05.000000000 +0100
+++ OWB-r1097.aros/BAL/Network/WebCore/Curl/BCResourceHandleManagerCurl.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -50,13 +50,18 @@
 #include <wtf/Threading.h>
 #include <wtf/Vector.h>
 
+#if PLATFORM(AROS)
+    #include <proto/bsdsocket.h>
+    #include <aros/debug.h>
+#endif
+
 namespace WebCore {
 
 const int selectTimeoutMS = 5;
-const double pollTimeSeconds = 0.05;
-const int maxRunningJobs = 5;
+const double pollTimeSeconds = 0.001;
+const int maxRunningJobs = 10;
 
-static const bool ignoreSSLErrors = getenv("WEBKIT_IGNORE_SSL_ERRORS");
+static const bool ignoreSSLErrors = true; // getenv("WEBKIT_IGNORE_SSL_ERRORS");
 
 static CString certificatePath()
 {
@@ -185,6 +190,16 @@
     if (CURLE_OK == err && httpCode >= 300 && httpCode < 400)
         return totalSize;
 
+    // authentication challenge must be issued in write callback because
+    // during digest authentication server sends 401 followed by 200 and
+    // there's no way to know in header callback whether authentication
+    // succeeded or not
+    if (CURLE_OK == err && httpCode == 401 && d->m_response.isHTTP())
+    {
+        job->didReceiveAuthenticationChallenge(d->m_webChallenge);
+        return totalSize;
+    }
+
     if (!d->m_response.responseFired()) {
         handleLocalReceiveResponse(h, job, d);
         if (d->m_cancelled)
@@ -249,6 +264,10 @@
         d->m_response.setTextEncodingName(extractCharsetFromMediaType(d->m_response.httpHeaderField("Content-Type")));
         d->m_response.setSuggestedFilename(filenameFromHTTPContentDisposition(d->m_response.httpHeaderField("Content-Disposition")));
 
+        // HTTP authentication happens in writeCallback()
+        if (httpCode == 401 && d->m_response.isHTTP())
+            return totalSize;
+
         // HTTP redirection
         if (httpCode >= 300 && httpCode < 400) {
             String location = d->m_response.httpHeaderField("location");
@@ -277,6 +296,15 @@
             return totalSize;
         }
 
+        // Ignore "100: Continue" as it's means that we should either:
+        //  * send the remainder of the request (cURL and readCallback() will take care of that), or 
+        //  * ignore this response if the request has already been completed
+        // In any case it's not a final server response and shouldn't be treated like one.
+        if (httpCode == 100) {
+            ASSERT(job->request().httpMethod() == "POST");
+            return totalSize;
+        }
+
         if (client)
             client->didReceiveResponse(job, d->m_response);
         d->m_response.setResponseFired(true);
@@ -340,6 +368,21 @@
     return sent;
 }
 
+curlioerr ioctlCallback(CURL *handle, curliocmd cmd, void *data)
+{
+    ResourceHandle* job = static_cast<ResourceHandle*>(data);
+    ResourceHandleInternal* d = job->getInternal();
+
+    switch(cmd) {
+    case CURLIOCMD_RESTARTREAD:
+        d->m_formDataStream.rewind();
+        break;
+    default:
+        return CURLIOE_UNKNOWNCMD;
+    }
+    return CURLIOE_OK;
+}
+
 void ResourceHandleManager::downloadTimerCallback(Timer<ResourceHandleManager>* timer)
 {
     startScheduledJobs();
@@ -364,7 +407,11 @@
         // and bail out, stopping the file download. So make sure we
         // have valid file descriptors before calling select.
         if (maxfd >= 0)
+#if PLATFORM(AROS)
+            rc = select(maxfd + 1, &fdread, &fdwrite, &fdexcep, &timeout);
+#else
             rc = ::select(maxfd + 1, &fdread, &fdwrite, &fdexcep, &timeout);
+#endif
     } while (rc == -1 && errno == EINTR);
 
     if (-1 == rc) {
@@ -530,11 +577,13 @@
         if (sizeof(long long) == expectedSizeOfCurlOffT)
           curl_easy_setopt(d->m_handle, CURLOPT_POSTFIELDSIZE_LARGE, (long long)size);
         else
-          curl_easy_setopt(d->m_handle, CURLOPT_POSTFIELDSIZE_LARGE, (int)size);
+          curl_easy_setopt(d->m_handle, CURLOPT_POSTFIELDSIZE, (long)size);
     }
 
     curl_easy_setopt(d->m_handle, CURLOPT_READFUNCTION, readCallback);
     curl_easy_setopt(d->m_handle, CURLOPT_READDATA, job);
+    curl_easy_setopt(d->m_handle, CURLOPT_IOCTLFUNCTION, ioctlCallback);
+    curl_easy_setopt(d->m_handle, CURLOPT_IOCTLDATA, job);
 }
 
 void ResourceHandleManager::add(ResourceHandle* job)
@@ -705,7 +754,13 @@
         d->m_response.setMimeType(MIMETypeRegistry::getMIMETypeForPath(url));
     }
 
+    // HTTP Authentication scheduled job cancellation, but it was not done yet, so we do it now 
+    if(d->m_handle && d->m_cancelled)
+	removeFromCurl(job);
+
     d->m_handle = curl_easy_init();
+    // HTTP Authentication cancels the job so be sure the new job is not cancelled   
+    d->m_cancelled = false;
 
 #if LIBCURL_VERSION_NUM > 0x071800
     if (d->m_defersLoading) {
@@ -749,6 +804,33 @@
     d->m_url = strdup(url.latin1().data());
     curl_easy_setopt(d->m_handle, CURLOPT_URL, d->m_url);
 
+    if (!d->m_webChallenge.isNull() && !d->m_continueWithoutCredential) {
+        long curlAuth;
+        switch(d->m_webChallenge.protectionSpace().authenticationScheme()) {
+        case ProtectionSpaceAuthenticationSchemeHTTPDigest:
+            curlAuth = CURLAUTH_DIGEST;
+            break;
+        case ProtectionSpaceAuthenticationSchemeHTTPBasic:
+        case ProtectionSpaceAuthenticationSchemeDefault:
+        default:
+            curlAuth = CURLAUTH_BASIC;
+            break;
+        }
+
+        Credential credential = d->m_webChallenge.proposedCredential();
+        char* userpwd = strdup((credential.user() + ":" + credential.password()).utf8().data());
+
+        curl_easy_setopt(d->m_handle, CURLOPT_HTTPAUTH, curlAuth);
+        curl_easy_setopt(d->m_handle, CURLOPT_USERPWD, userpwd);
+        m_rememberedCredentials.set(kurl.host(), std::pair<long,char*>(curlAuth, userpwd));
+    }
+    else if(m_rememberedCredentials.contains(kurl.host()) && !d->m_continueWithoutCredential)
+    {
+        std::pair<long,char*> authData = m_rememberedCredentials.get(kurl.host());
+        curl_easy_setopt(d->m_handle, CURLOPT_HTTPAUTH, authData.first);
+        curl_easy_setopt(d->m_handle, CURLOPT_USERPWD, authData.second);
+    }
+
     struct curl_slist* headers = 0;
     if (job->request().httpHeaderFields().size() > 0) {
         HTTPHeaderMap customHeaders = job->request().httpHeaderFields();
diff -ruN OWB-r1097/BAL/Network/WebCore/Curl/BCResourceHandleManagerCurl.h OWB-r1097.aros/BAL/Network/WebCore/Curl/BCResourceHandleManagerCurl.h
--- OWB-r1097/BAL/Network/WebCore/Curl/BCResourceHandleManagerCurl.h	2009-08-12 21:20:06.000000000 +0100
+++ OWB-r1097.aros/BAL/Network/WebCore/Curl/BCResourceHandleManagerCurl.h	2017-04-01 14:57:02.745938516 +0100
@@ -73,6 +73,7 @@
     Vector<ResourceHandle*> m_resourceHandleList;
     const CString m_certificatePath;
     int m_runningJobs;
+    HashMap<AtomicString,std::pair<long,char*> > m_rememberedCredentials;
 };
 
 }
diff -ruN OWB-r1097/BAL/Network/WebCore/Curl/CookieDatabaseBackingStore/BCCookieDatabaseBackingStoreCurl.cpp OWB-r1097.aros/BAL/Network/WebCore/Curl/CookieDatabaseBackingStore/BCCookieDatabaseBackingStoreCurl.cpp
--- OWB-r1097/BAL/Network/WebCore/Curl/CookieDatabaseBackingStore/BCCookieDatabaseBackingStoreCurl.cpp	2009-08-14 16:35:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Network/WebCore/Curl/CookieDatabaseBackingStore/BCCookieDatabaseBackingStoreCurl.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -131,7 +131,7 @@
 
     // Binds all the values
     if (updateStatement.bindText(1, cookie->name()) || updateStatement.bindText(2, cookie->value())
-        || updateStatement.bindText(3, cookie->path()) || updateStatement.bindText(4, cookie->domain())
+        || updateStatement.bindText(3, cookie->domain()) || updateStatement.bindText(4, cookie->path())
         || updateStatement.bindDouble(5, cookie->expiry()) || updateStatement.bindDouble(6, cookie->lastAccessed())
         || updateStatement.bindInt64(7, cookie->isSecure()) || updateStatement.bindInt64(8, cookie->isHttpOnly())) {
         LOG_ERROR("Cannot update cookie");
diff -ruN OWB-r1097/BAL/Network/WebCore/WK/BCResourceHandleInternalWK.h OWB-r1097.aros/BAL/Network/WebCore/WK/BCResourceHandleInternalWK.h
--- OWB-r1097/BAL/Network/WebCore/WK/BCResourceHandleInternalWK.h	2009-09-16 16:49:28.000000000 +0100
+++ OWB-r1097.aros/BAL/Network/WebCore/WK/BCResourceHandleInternalWK.h	2017-04-01 14:57:02.745938516 +0100
@@ -108,6 +108,8 @@
             , m_shouldIncludeExpectHeader(true)
             , m_cancelled(false)
             , m_formDataStream(loader)
+            , m_webChallenge()
+            , m_continueWithoutCredential(false)
 #endif
 #if USE(SOUP)
             , m_msg(0)
@@ -192,6 +194,8 @@
 
         FormDataStream m_formDataStream;
         Vector<char> m_postBytes;
+        AuthenticationChallenge m_webChallenge;
+        bool m_continueWithoutCredential;
 #endif
 #if USE(SOUP)
         SoupMessage* m_msg;
diff -ruN OWB-r1097/BAL/Timer/WebCore/AROS/BCSharedTimerAROS.cpp OWB-r1097.aros/BAL/Timer/WebCore/AROS/BCSharedTimerAROS.cpp
--- OWB-r1097/BAL/Timer/WebCore/AROS/BCSharedTimerAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Timer/WebCore/AROS/BCSharedTimerAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,165 @@
+/*
+ * Copyright (C) 2009 Stanislaw Szymczyk
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+#include "config.h"
+#include "SharedTimer.h"
+
+#include "CurrentTime.h"
+#include <wtf/Assertions.h>
+#include <assert.h>
+#include <signal.h>
+#include <sys/time.h>
+#include <stdio.h>
+#include "Platform.h"
+
+#include <proto/exec.h>
+#include <devices/timer.h>
+
+namespace WebCore {
+
+void (*sharedTimerFiredFunction)() = NULL;
+
+// Single timer, shared to implement all the timers managed by the Timer class.
+// Not intended to be used directly; use the Timer class instead.
+
+#if !PLATFORM(GTK)
+/**
+ * Macro to use to protect code from firing timers.
+ * This ensures that there is no concurrent access on ressource and prevent deadlocks.
+ */
+#define ENTER_CRITICAL_SECTION
+
+#define LEAVE_CRITICAL_SECTION
+
+
+static unsigned int m_count = 0;
+/**
+ * We absolutely need to protect these 2 functions in a critical section.
+ * Signals/timers will increment count, event loop will decrement it: 2 concurrent accesses.
+ * Increment is usually done in 3 machine instructions, so there's room for a concurrent access.
+ * See ticket #123. Maybe we should put timers in a separate thread to be able to use mutexes.
+ */
+void incrementTimerCount()
+{
+    ENTER_CRITICAL_SECTION;
+    m_count++;
+    LEAVE_CRITICAL_SECTION;
+}
+
+void fireTimerIfNeeded()
+{
+    ENTER_CRITICAL_SECTION;
+    if (m_count>0) {
+        m_count--;
+        sharedTimerFiredFunction();
+    }
+    LEAVE_CRITICAL_SECTION;
+}
+#endif
+
+static unsigned timerint_func(struct ExceptionContext *Context, struct ExecBase *SysBase, void *UserData)
+{
+   if (sharedTimerFiredFunction)
+      incrementTimerCount();
+   return 0;
+}
+
+static struct MsgPort *mp = NULL;
+static struct timerequest *timereq = NULL;
+#if defined(__i386__)
+static struct Interrupt timerint = { { NULL, NULL, "OWB shared timer int", NT_UNKNOWN, 0 }, NULL, (void (*)(void)) timerint_func };
+#else
+static struct Interrupt timerint = { { NULL, NULL, NT_UNKNOWN, 0, "OWB shared timer int" }, NULL, (void (*)(void)) timerint_func };
+#endif
+
+static void cleanup(void)
+{
+    AbortIO((struct IORequest *)timereq);
+    CloseDevice((struct IORequest *)timereq);
+    DeleteIORequest((struct IORequest *) timereq);
+    DeleteMsgPort(mp);
+}
+
+void setSharedTimerFiredFunction(void (*f)()) 
+{
+    if ( NULL == sharedTimerFiredFunction ) 
+    {
+        sharedTimerFiredFunction = f;
+
+        mp = (struct MsgPort *) CreateMsgPort();
+        mp->mp_Flags = PA_SOFTINT;
+        mp->mp_SoftInt = &timerint;
+        if (mp) 
+        {
+           timereq = (struct timerequest *) CreateIORequest(mp, sizeof (struct timerequest));
+           if (timereq) 
+           {
+              if(OpenDevice("timer.device", UNIT_MICROHZ, (struct IORequest *) timereq, 0) == 0)
+              {
+                 timereq->tr_node.io_Command = TR_ADDREQUEST;
+                 timereq->tr_time.tv_secs    = 1;
+                 timereq->tr_time.tv_micro   = 0;
+
+                 atexit(cleanup);
+                 return;
+               }
+               DeleteIORequest((struct IORequest *) timereq);
+               timereq = NULL;
+           }
+           DeleteMsgPort(mp);
+       }
+       fprintf(stderr, "couldn't create shared timer\n");
+       exit(1);
+    }
+}
+
+// The fire time is relative to the classic POSIX epoch of January 1, 1970,
+// as the result of currentTime() is.
+void setSharedTimerFireTime(double fireTime) 
+{
+    assert(sharedTimerFiredFunction);
+
+    double interval = fireTime - currentTime();
+    unsigned intervalInUS = 0;
+    if (interval > 0) {
+        interval = interval * 1000 * 1000;
+        intervalInUS = static_cast<unsigned>(interval);
+    }
+
+    if (intervalInUS < 10 * 1000) // min. time 1/100 sec.
+        intervalInUS = 10 * 1000;
+
+    stopSharedTimer();
+
+    timereq->tr_time.tv_secs = intervalInUS / (1000 * 1000);
+    timereq->tr_time.tv_micro = intervalInUS % (1000 * 1000);
+    SendIO((struct IORequest *) timereq);
+}
+
+void stopSharedTimer() 
+{
+    AbortIO((struct IORequest *)timereq);
+}
+
+}
diff -ruN OWB-r1097/BAL/Timer/WebCore/AROS/BCSharedTimerAROS.h OWB-r1097.aros/BAL/Timer/WebCore/AROS/BCSharedTimerAROS.h
--- OWB-r1097/BAL/Timer/WebCore/AROS/BCSharedTimerAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Timer/WebCore/AROS/BCSharedTimerAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,86 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef SharedTimer_h
+#define SharedTimer_h
+
+#include "wtf/Platform.h"
+
+namespace WebCore {
+
+    // Each thread has its own single instance of shared timer, which implements this interface.
+    // This instance is shared by all timers in the thread.
+    // Not intended to be used directly; use the Timer class instead.
+    class SharedTimer {
+    public:
+        virtual ~SharedTimer() {}
+        virtual void setFiredFunction(void (*)()) = 0;
+
+        // The fire time is relative to the classic POSIX epoch of January 1, 1970,
+        // as the result of currentTime() is.
+        virtual void setFireTime(double) = 0;
+        virtual void stop() = 0;
+    };
+    
+    
+    // Single timer, shared to implement all the timers managed by the Timer class.
+    // Not intended to be used directly; use the Timer class instead.
+
+    void setSharedTimerFiredFunction(void (*)());
+
+    // The fire time is relative to the classic POSIX epoch of January 1, 1970,
+    // as the result of currentTime() is.
+
+    void setSharedTimerFireTime(double fireTime);
+    void stopSharedTimer();
+
+#if !PLATFORM(GTK)
+    void fireTimerIfNeeded();
+#endif
+
+    // Implementation of SharedTimer for the main thread.
+    class MainThreadSharedTimer : public SharedTimer {
+    public:
+        virtual void setFiredFunction(void (*function)())
+        {
+            setSharedTimerFiredFunction(function);
+        }
+
+        virtual void setFireTime(double fireTime)
+        {
+            setSharedTimerFireTime(fireTime);
+        }
+
+        virtual void stop()
+        {
+            stopSharedTimer();
+        }
+    };
+}
+
+#endif
diff -ruN OWB-r1097/BAL/Timer/WebCore/AROS/BCSystemTimeAROS.cpp OWB-r1097.aros/BAL/Timer/WebCore/AROS/BCSystemTimeAROS.cpp
--- OWB-r1097/BAL/Timer/WebCore/AROS/BCSystemTimeAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Timer/WebCore/AROS/BCSystemTimeAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,41 @@
+/*
+ * Copyright (C) 2006 Apple Computer, Inc.  All rights reserved.
+ * Copyright (C) 2006 Michael Emmel mike.emmel@gmail.com
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "SystemTime.h"
+#include "NotImplemented.h"
+
+#include <float.h>
+
+namespace WebCore {
+
+float userIdleTime() 
+{ 
+    notImplemented(); 
+    return FLT_MAX; 
+}
+}
diff -ruN OWB-r1097/BAL/Timer/WebCore/CMakeLists.txt OWB-r1097.aros/BAL/Timer/WebCore/CMakeLists.txt
--- OWB-r1097/BAL/Timer/WebCore/CMakeLists.txt	2009-03-09 15:37:11.000000000 +0000
+++ OWB-r1097.aros/BAL/Timer/WebCore/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -18,3 +18,7 @@
     aux_source_directory(${BAL_DIR}/Timer/WebCore/Qt WEBCORE_SRC)
 endif(USE_TIMER_QT)
 
+if(USE_TIMER_AROS)
+    create_include_link(${BAL_DIR}/Timer/WebCore/AROS BAL)
+    aux_source_directory(${BAL_DIR}/Timer/WebCore/AROS WEBCORE_SRC)
+endif(USE_TIMER_AROS)
diff -ruN OWB-r1097/BAL/Types/WebCore/CMakeLists.txt OWB-r1097.aros/BAL/Types/WebCore/CMakeLists.txt
--- OWB-r1097/BAL/Types/WebCore/CMakeLists.txt	2009-09-15 07:54:14.000000000 +0100
+++ OWB-r1097.aros/BAL/Types/WebCore/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -25,3 +25,12 @@
         ${TYPES_DIR}/SDL/BCKURLSDL.cpp
     )
 endif(USE_GRAPHICS_SDL)
+
+if(USE_GRAPHICS_AROS)
+    create_include_link(${TYPES_DIR}/SDL BAL)
+    list(APPEND WEBCORE_SRC
+        ${TYPES_DIR}/SDL/BCIconSDL.cpp
+        ${TYPES_DIR}/SDL/BCSharedBufferSDL.cpp
+        ${TYPES_DIR}/SDL/BCKURLSDL.cpp
+    )
+endif(USE_GRAPHICS_AROS)
diff -ruN OWB-r1097/BAL/Types/WTF/BCTCSpinLockWTF.h OWB-r1097.aros/BAL/Types/WTF/BCTCSpinLockWTF.h
--- OWB-r1097/BAL/Types/WTF/BCTCSpinLockWTF.h	2009-10-06 09:13:04.000000000 +0100
+++ OWB-r1097.aros/BAL/Types/WTF/BCTCSpinLockWTF.h	2017-04-01 14:57:02.745938516 +0100
@@ -33,7 +33,7 @@
 #ifndef TCMALLOC_INTERNAL_SPINLOCK_H__
 #define TCMALLOC_INTERNAL_SPINLOCK_H__
 
-#if (PLATFORM(X86) || PLATFORM(PPC)) && (COMPILER(GCC) || COMPILER(MSVC))
+#if (!PLATFORM(AROS) && (PLATFORM(X86) || PLATFORM(PPC))) && (COMPILER(GCC) || COMPILER(MSVC))
 
 #include <time.h>       /* For nanosleep() */
 
@@ -191,6 +191,31 @@
   }
 }
 
+#elif PLATFORM(AROS)
+
+#include <libraries/thread.h>
+#include <proto/thread.h>
+
+// AROS version
+struct TCMalloc_SpinLock {
+  void *private_lock_;
+
+  inline void Init() {
+    if ((private_lock_ = CreateMutex()) == NULL) abort();
+  }
+  inline void Finalize() {
+    DestroyMutex(private_lock_);
+  }
+  inline void Lock() {
+    LockMutex(private_lock_);
+  }
+  inline void Unlock() {
+    UnlockMutex(private_lock_);
+  }
+};
+
+#define SPINLOCK_INITIALIZER { NULL }
+
 #else
 
 #include <pthread.h>
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCAccessibilityObjectAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCAccessibilityObjectAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCAccessibilityObjectAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCAccessibilityObjectAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,40 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "AccessibilityObject.h"
+
+namespace WebCore {
+
+#if HAVE(ACCESSIBILITY)
+bool AccessibilityObject::accessibilityIgnoreAttachment() const
+{
+    return false;
+}
+#endif
+} // namespace WebCore
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCAccessibilityObjectWrapperAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCAccessibilityObjectWrapperAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCAccessibilityObjectWrapperAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCAccessibilityObjectWrapperAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,53 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "AccessibilityObject.h"
+#include "RefCounted.h"
+
+class AccessibilityObjectWrapper {
+};
+
+
+namespace WebCore {
+
+
+#if HAVE(ACCESSIBILITY)
+AccessibilityObjectWrapper* AccessibilityObject::wrapper() const 
+{ 
+    return m_wrapper; 
+}
+
+void AccessibilityObject::setWrapper(AccessibilityObjectWrapper* wrapper)
+{
+    m_wrapper = wrapper;
+}
+#endif
+
+}
+
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCAXObjectCacheAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCAXObjectCacheAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCAXObjectCacheAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCAXObjectCacheAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,57 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "AXObjectCache.h"
+
+#include "AccessibilityObject.h"
+
+namespace WebCore {
+
+#if HAVE(ACCESSIBILITY)
+void AXObjectCache::detachWrapper(AccessibilityObject* obj)
+{
+}
+
+void AXObjectCache::attachWrapper(AccessibilityObject* obj)
+{
+}
+
+void AXObjectCache::postNotification(RenderObject*, const String&)
+{
+}
+
+void AXObjectCache::postNotificationToElement(RenderObject*, const String&)
+{
+}
+
+void AXObjectCache::handleFocusedUIElementChanged()
+{
+}
+#endif
+} // namespace WebCore
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCClipboardAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCClipboardAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCClipboardAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCClipboardAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,147 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "ClipboardAROS.h"
+
+#include "NotImplemented.h"
+#include "StringHash.h"
+#include "FileList.h"
+
+#include "Editor.h"
+
+#include <cstdio>
+
+namespace WebCore {
+PassRefPtr<Clipboard> Editor::newGeneralClipboard(ClipboardAccessPolicy policy)
+{
+    return ClipboardBal::create(policy, false);
+}
+
+ClipboardBal::ClipboardBal(ClipboardAccessPolicy policy, bool forDragging)
+    : Clipboard(policy, forDragging)
+{
+    NotImplemented();
+}
+
+ClipboardBal::~ClipboardBal()
+{
+    NotImplemented();
+}
+
+void ClipboardBal::clearData(const String&)
+{
+    NotImplemented();
+}
+
+void ClipboardBal::clearAllData()
+{
+    NotImplemented();
+}
+
+String ClipboardBal::getData(const String&, bool &success) const
+{
+    NotImplemented();
+    success = false;
+    return String();
+}
+
+bool ClipboardBal::setData(const String&, const String&)
+{
+    NotImplemented();
+    return false;
+}
+
+HashSet<String> ClipboardBal::types() const
+{
+    NotImplemented();
+    return HashSet<String>();
+}
+
+PassRefPtr<FileList> ClipboardBal::files() const 
+{ 
+    notImplemented(); 
+    return 0; 
+} 
+
+IntPoint ClipboardBal::dragLocation() const
+{
+    NotImplemented();
+    return IntPoint(0, 0);
+}
+
+CachedImage* ClipboardBal::dragImage() const
+{
+    NotImplemented();
+    return 0;
+}
+
+void ClipboardBal::setDragImage(CachedImage*, const IntPoint&)
+{
+    NotImplemented();
+}
+
+Node* ClipboardBal::dragImageElement()
+{
+    NotImplemented();
+    return 0;
+}
+
+void ClipboardBal::setDragImageElement(Node*, const IntPoint&)
+{
+    NotImplemented();
+}
+
+DragImageRef ClipboardBal::createDragImage(IntPoint&) const
+{
+    NotImplemented();
+    return 0;
+}
+
+void ClipboardBal::declareAndWriteDragImage(Element*, const KURL&, const String&, Frame*)
+{
+    NotImplemented();
+}
+
+void ClipboardBal::writeURL(const KURL&, const String&, Frame*)
+{
+    NotImplemented();
+}
+
+void ClipboardBal::writeRange(Range*, Frame*)
+{
+    NotImplemented();
+}
+
+bool ClipboardBal::hasData()
+{
+    NotImplemented();
+    return false;
+}
+
+}
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCClipboardAROS.h OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCClipboardAROS.h
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCClipboardAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCClipboardAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,76 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#ifndef ClipboardGdk_h
+#define ClipboardGdk_h
+
+#include "Clipboard.h"
+#include "BALBase.h"
+
+namespace WebCore {
+    class CachedImage;
+    class FileList;
+
+    // State available during IE's events for drag and drop and copy/paste
+    // Created from the EventHandlerGtk to be used by the dom
+    class ClipboardBal : public Clipboard {
+    public:
+        static PassRefPtr<ClipboardBal> create(ClipboardAccessPolicy policy, bool isForDragging)
+        {
+            return adoptRef(new ClipboardBal(policy, isForDragging));
+        }
+        virtual ~ClipboardBal();
+
+
+        void clearData(const String&);
+        void clearAllData();
+        String getData(const String&, bool&) const;
+        bool setData(const String&, const String&);
+
+        HashSet<String> types() const;
+        virtual PassRefPtr<FileList> files() const;
+
+        IntPoint dragLocation() const;
+        CachedImage* dragImage() const;
+        void setDragImage(CachedImage*, const IntPoint&);
+        Node* dragImageElement();
+        void setDragImageElement(Node*, const IntPoint&);
+
+        virtual DragImageRef createDragImage(IntPoint&) const;
+        virtual void declareAndWriteDragImage(Element*, const KURL&, const String&, Frame*);
+        virtual void writeURL(const KURL&, const String&, Frame*);
+        virtual void writeRange(Range*, Frame*);
+
+        virtual bool hasData();
+    private:
+        ClipboardBal(ClipboardAccessPolicy, bool);
+    };
+}
+
+#endif
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCContextMenuAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCContextMenuAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCContextMenuAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCContextMenuAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,107 @@
+/*
+ * Copyright (C) 2009 Stanislaw Szymczyk.
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#include "config.h"
+#include "ContextMenu.h"
+
+#include "ContextMenuController.h"
+
+#include <cstdio>
+
+extern "C" {
+#include <exec/types.h>
+#include <libraries/mui.h>
+#include <proto/muimaster.h>
+#include <proto/alib.h>
+#include <proto/intuition.h>
+#include <aros/debug.h>
+#include <utility/hooks.h>
+}
+
+namespace WebCore {
+
+static void menuItemActivated(struct Hook *hook, Object *menuItem, ContextMenuController **controller)
+{
+    D(bug("menuItemActivated\n"));
+    ContextMenuItem item(menuItem);
+
+    if(controller && *controller)
+    {
+        (*controller)->contextMenuItemSelected(&item);
+    }
+}
+
+// TODO: ref-counting correctness checking.
+// See http://bugs.webkit.org/show_bug.cgi?id=16115
+
+ContextMenu::ContextMenu(const HitTestResult& result)
+    : m_hitTestResult(result)
+{
+    m_platformDescription = MenuObject, MUIA_Menu_Title, "OWB", End;
+    D(bug("created menu: %p\n", m_platformDescription));
+    menuItemActivatedHook.h_Entry = (APTR)HookEntry;
+    menuItemActivatedHook.h_SubEntry = (APTR) menuItemActivated;
+}
+
+ContextMenu::~ContextMenu()
+{
+}
+
+void ContextMenu::appendItem(ContextMenuItem& item)
+{
+    Object *menuItem = ContextMenuItem::createNativeMenuItem(item.releasePlatformDescription());
+    
+    DoMethod(menuItem, MUIM_Notify, MUIA_Menuitem_Trigger, MUIV_EveryTime,
+            (IPTR) menuItem, 3,
+            MUIM_CallHook, &menuItemActivatedHook, controller());
+    
+    DoMethod(m_platformDescription, MUIM_Family_AddTail, menuItem);
+}
+
+void ContextMenu::setPlatformDescription(PlatformMenuDescription menu)
+{
+    MUI_DisposeObject(m_platformDescription);
+    m_platformDescription = menu;
+}
+
+PlatformMenuDescription ContextMenu::platformDescription() const
+{
+    return m_platformDescription;
+}
+
+PlatformMenuDescription ContextMenu::releasePlatformDescription()
+{
+    PlatformMenuDescription description = m_platformDescription;
+    m_platformDescription = 0;
+
+    return description;
+}
+
+}
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCContextMenuItemAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCContextMenuItemAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCContextMenuItemAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCContextMenuItemAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,200 @@
+/*
+ * Copyright (C) 2009 Stanislaw Szymczyk.
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#include "config.h"
+#include "ContextMenu.h"
+#include "ContextMenuItem.h"
+#include "CString.h"
+#include "Logging.h"
+
+#include <cstdio>
+#include <cstring>
+
+extern "C" {
+#include <exec/types.h>
+#include <libraries/mui.h>
+#include <proto/muimaster.h>
+#include <proto/alib.h>
+#include <aros/debug.h>
+#include <exec/nodes.h>
+#include <exec/lists.h>
+#include <proto/intuition.h>
+#include <proto/codesets.h>
+#include <libraries/codesets.h>
+}
+
+#define WEBKIT_CONTEXT_MENU_ACTION "webkit-context-menu"
+
+namespace WebCore {
+
+// Extract the ActionType from the menu item
+ContextMenuItem::ContextMenuItem(BalMenuItem* item)
+    : m_platformDescription()
+{
+    char *title;
+    GetAttr(MUIA_Menuitem_Title, item, (IPTR*) &title);
+    
+    IPTR checkable = 0;
+    GetAttr(MUIA_Menuitem_Checkit, item, (IPTR*) &checkable);
+    IPTR checked = 0;
+    GetAttr(MUIA_Menuitem_Checked, item, (IPTR*) &checkable);
+    
+    int childcount = 0;
+    /*
+     * TODO - add support for nested menus
+    struct MinList *children;
+    GetAttr(MUIA_Family_List, item, (IPTR*) &children);
+    ListLength(children,childcount)
+    */
+
+    D(bug("title: %p, childcount: %d, checkable: %d, checked: %d\n", title, childcount, checkable, checked));
+    
+    if (title == NM_BARLABEL)
+        m_platformDescription.type = SeparatorType;
+    else if (childcount > 0)
+        m_platformDescription.type = SubmenuType;
+    else if (checkable) {
+        m_platformDescription.type = CheckableActionType;
+        m_platformDescription.checked = (bool) checked;
+    } else
+        m_platformDescription.type = ActionType;
+
+    IPTR menuAction;
+    GetAttr(MUIA_UserData, item, (IPTR*) &menuAction);
+    m_platformDescription.action = (ContextMenuAction) menuAction;
+/*
+    m_platformDescription.subMenu = GTK_MENU(gtk_menu_item_get_submenu(item));
+    if (m_platformDescription.subMenu)
+        g_object_ref(m_platformDescription.subMenu); */
+}
+
+ContextMenuItem::ContextMenuItem(ContextMenu*)
+{
+    NotImplemented();
+}
+
+ContextMenuItem::ContextMenuItem(ContextMenuItemType type, ContextMenuAction action, const String& title, ContextMenu* subMenu)
+{
+    m_platformDescription.type = type;
+    m_platformDescription.action = action;
+    m_platformDescription.title = title;
+
+    setSubMenu(subMenu);
+}
+
+ContextMenuItem::~ContextMenuItem()
+{
+}
+
+BalMenuItem* ContextMenuItem::createNativeMenuItem(const PlatformMenuItemDescription& menu)
+{
+    /* TODO: release the title memory after destroying menu */
+    char *title;
+    if(menu.title.length() > 0)
+    {
+        title = strdup(menu.title.utf8().data());
+        char *titleConverted = CodesetsUTF8ToStr(CSA_Source, (IPTR) title, TAG_END);
+        if(titleConverted)
+        {
+            free(title);
+            title = titleConverted;
+        }
+    }
+    else
+        title = NM_BARLABEL;
+
+    D(bug("creating menu item with title %s\n", menu.title.utf8().data()));
+    Object *menuItem = MenuitemObject, 
+        MUIA_Menuitem_Checked, (IPTR) menu.checked, 
+        MUIA_Menuitem_Enabled, (IPTR) menu.enabled,
+        MUIA_Menuitem_Title, (IPTR) title,
+        MUIA_UserData, (IPTR) menu.action,
+        End;
+    return menuItem;
+}
+
+PlatformMenuItemDescription ContextMenuItem::releasePlatformDescription()
+{
+    PlatformMenuItemDescription description = m_platformDescription;
+    m_platformDescription = PlatformMenuItemDescription();
+    return description;
+}
+
+ContextMenuItemType ContextMenuItem::type() const
+{
+    return m_platformDescription.type;
+}
+
+void ContextMenuItem::setType(ContextMenuItemType type)
+{
+    m_platformDescription.type = type;
+}
+
+ContextMenuAction ContextMenuItem::action() const
+{
+    return m_platformDescription.action;
+}
+
+void ContextMenuItem::setAction(ContextMenuAction action)
+{
+    m_platformDescription.action = action;
+}
+
+String ContextMenuItem::title() const
+{
+    NotImplemented();
+    return String();
+}
+
+void ContextMenuItem::setTitle(const String&)
+{
+    NotImplemented();
+}
+
+PlatformMenuDescription ContextMenuItem::platformSubMenu() const
+{
+    return m_platformDescription.subMenu;
+}
+
+void ContextMenuItem::setSubMenu(ContextMenu* menu)
+{
+}
+
+void ContextMenuItem::setChecked(bool shouldCheck)
+{
+    m_platformDescription.checked = shouldCheck;
+}
+
+void ContextMenuItem::setEnabled(bool shouldEnable)
+{
+    m_platformDescription.enabled = shouldEnable;
+}
+
+}
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCCursorAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCCursorAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCCursorAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCCursorAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,371 @@
+/*
+ * Copyright (C) 2009 Stanislaw Szymczyk
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#include "config.h"
+
+#include "Logging.h"
+#include <wtf/Assertions.h>
+#include "stdio.h"
+#include "Cursor.h"
+#include "BALBase.h"
+
+namespace WebCore {
+
+Cursor::Cursor(const Cursor& other)
+    : m_impl(other.m_impl)
+{
+    NotImplemented();
+}
+
+Cursor::Cursor(Image*, const IntPoint&)
+{
+    NotImplemented();
+}
+
+Cursor::~Cursor()
+{
+    //printf("Cursor::~Cursor\n");
+}
+
+Cursor& Cursor::operator=(const Cursor& other)
+{
+    m_impl = other.m_impl;
+    return *this;
+}
+
+Cursor::Cursor(PlatformCursor c)
+    : m_impl(c)
+{
+    m_impl = c;
+    NotImplemented();
+}
+
+const Cursor& pointerCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& crossCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& handCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& moveCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& iBeamCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& waitCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& helpCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& eastResizeCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& northResizeCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& northEastResizeCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& northWestResizeCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& southResizeCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& southEastResizeCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& southWestResizeCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& westResizeCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& northSouthResizeCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& eastWestResizeCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& northEastSouthWestResizeCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& northWestSouthEastResizeCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+const Cursor& columnResizeCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& rowResizeCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& middlePanningCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& eastPanningCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& northPanningCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& northEastPanningCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& northWestPanningCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& southPanningCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& southEastPanningCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& southWestPanningCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& westPanningCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& verticalTextCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& cellCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& contextMenuCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& noDropCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& copyCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& progressCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& aliasCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& noneCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& notAllowedCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& zoomInCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& zoomOutCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& grabCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+const Cursor& grabbingCursor()
+{
+    BalNotImplemented();
+    static Cursor c;
+    return c;
+}
+
+
+}
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCCursorAROS.h OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCCursorAROS.h
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCCursorAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCCursorAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,104 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#ifndef Cursor_h
+#define Cursor_h
+
+#include <wtf/Platform.h>
+#include "BALBase.h"
+
+namespace WebCore {
+
+    class Image;
+    class IntPoint;
+
+    class Cursor {
+    public:
+        Cursor()
+        { }
+
+        Cursor(Image*, const IntPoint& hotspot);
+        Cursor(const Cursor&);
+        ~Cursor();
+        Cursor& operator=(const Cursor&);
+
+        Cursor(PlatformCursor);
+        PlatformCursor impl() const { return m_impl; }
+
+     private:
+        PlatformCursor m_impl;
+    };
+
+    const Cursor& pointerCursor();
+    const Cursor& crossCursor();
+    const Cursor& handCursor();
+    const Cursor& moveCursor();
+    const Cursor& iBeamCursor();
+    const Cursor& waitCursor();
+    const Cursor& helpCursor();
+    const Cursor& eastResizeCursor();
+    const Cursor& northResizeCursor();
+    const Cursor& northEastResizeCursor();
+    const Cursor& northWestResizeCursor();
+    const Cursor& southResizeCursor();
+    const Cursor& southEastResizeCursor();
+    const Cursor& southWestResizeCursor();
+    const Cursor& westResizeCursor();
+    const Cursor& northSouthResizeCursor();
+    const Cursor& eastWestResizeCursor();
+    const Cursor& northEastSouthWestResizeCursor();
+    const Cursor& northWestSouthEastResizeCursor();
+    const Cursor& columnResizeCursor();
+    const Cursor& rowResizeCursor();
+    const Cursor& middlePanningCursor();
+    const Cursor& eastPanningCursor();
+    const Cursor& northPanningCursor();
+    const Cursor& northEastPanningCursor();
+    const Cursor& northWestPanningCursor();
+    const Cursor& southPanningCursor();
+    const Cursor& southEastPanningCursor();
+    const Cursor& southWestPanningCursor();
+    const Cursor& westPanningCursor();
+    const Cursor& verticalTextCursor();
+    const Cursor& cellCursor();
+    const Cursor& contextMenuCursor();
+    const Cursor& noDropCursor();
+    const Cursor& notAllowedCursor();
+    const Cursor& progressCursor();
+    const Cursor& aliasCursor();
+    const Cursor& zoomInCursor();
+    const Cursor& zoomOutCursor();
+    const Cursor& copyCursor();
+    const Cursor& noneCursor();
+    const Cursor& grabCursor();
+    const Cursor& grabbingCursor();
+
+} // namespace WebCore
+
+#endif // Cursor_h
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCDragControllerAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCDragControllerAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCDragControllerAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCDragControllerAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,76 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#include "config.h"
+#include "DragController.h"
+
+#include "DragData.h"
+#include "Frame.h"
+#include "FrameView.h"
+#include "Page.h"
+
+#include <cstdio>
+
+namespace WebCore {
+
+// FIXME: These values are straight out of DragControllerMac, so probably have
+// little correlation with Gdk standards...
+const int DragController::LinkDragBorderInset = 2;
+const int DragController::MaxOriginalImageArea = 1500 * 1500;
+const int DragController::DragIconRightInset = 7;
+const int DragController::DragIconBottomInset = 3;
+
+const float DragController::DragImageAlpha = 0.75f;
+
+bool DragController::isCopyKeyDown()
+{
+    return false;
+}
+
+DragOperation DragController::dragOperation(DragData* dragData)
+{
+    //FIXME: This logic is incomplete
+     if (dragData->containsURL())
+        return DragOperationCopy;
+
+   return DragOperationNone;
+}
+
+const IntSize& DragController::maxDragImageSize()
+{
+    static const IntSize maxDragImageSize(400, 400);
+
+    return maxDragImageSize;
+}
+
+void DragController::cleanupAfterSystemDrag()
+{
+}
+
+}
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCFrameAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCFrameAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCFrameAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCFrameAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,42 @@
+/*
+ * Copyright (C) 2006 Apple Computer, Inc.  All rights reserved.
+ * Copyright (C) 2006 Michael Emmel mike.emmel@gmail.com
+ * Copyright (C) 2007 Holger Hans Peter Freyther
+ * Copyright (C) 2008 Collabora Ltd.  All rights reserved.
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "Frame.h"
+#include "NotImplemented.h"
+
+namespace WebCore {
+
+DragImageRef Frame::dragImageForSelection()
+{
+    notImplemented();
+    return 0;
+}
+
+}
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCPasteboardAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPasteboardAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCPasteboardAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPasteboardAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,287 @@
+/*
+ * Copyright (C) 2009 Stanislaw Szymczyk
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "Logging.h"
+#include "Pasteboard.h"
+
+#include "CString.h"
+#include "DocumentFragment.h"
+#include "Frame.h"
+#include "PlatformString.h"
+#include "Image.h"
+#include "Range.h"
+#include "RenderImage.h"
+#include "KURL.h"
+#include "markup.h"
+
+#include <cstdio>
+
+extern "C" {
+#include <libraries/iffparse.h>
+#include <proto/iffparse.h>
+#include <datatypes/textclass.h>
+#include <proto/intuition.h>
+#include <proto/codesets.h>
+#include <libraries/codesets.h>
+}
+
+namespace WebCore {
+
+/* FIXME: we must get rid of this and use the enum in webkitwebview.h someway */
+typedef enum
+{
+    WEBKIT_WEB_VIEW_TARGET_INFO_HTML = - 1,
+    WEBKIT_WEB_VIEW_TARGET_INFO_TEXT = - 2
+} WebKitWebViewTargetInfo;
+
+class PasteboardSelectionData {
+public:
+    PasteboardSelectionData(char* text, char* markup)
+        : m_text(text)
+        , m_markup(markup) { }
+
+    ~PasteboardSelectionData() {
+        free(m_text);
+        free(m_markup);
+    }
+
+    const char* text() const { return m_text; }
+    const char* markup() const { return m_markup; }
+
+private:
+    char* m_text;
+    char* m_markup;
+};
+
+Pasteboard* Pasteboard::generalPasteboard()
+{
+    static Pasteboard* pasteboard = new Pasteboard();
+    return pasteboard;
+}
+
+Pasteboard::Pasteboard()
+{
+    NotImplemented();
+}
+
+Pasteboard::~Pasteboard()
+{
+    delete m_helper;
+}
+
+void Pasteboard::setHelper(PasteboardHelper* helper)
+{
+    m_helper = helper;
+}
+
+void Pasteboard::writeSelection(Range* selectedRange, bool canSmartCopyOrDelete, Frame* frame)
+{
+    writePlainText(frame->selectedText());
+}
+
+void Pasteboard::writePlainText(const String& text)
+{
+    IFFHandle *ih;
+    CString utf8 = text.utf8(); //selectedRange->text().utf8();
+    const char *data = utf8.data();
+    size_t len = utf8.length();
+
+    bool copied = false;
+
+
+    if (data && len && (ih = AllocIFF())) 
+    {
+        if (ih->iff_Stream = (IPTR) OpenClipboard(PRIMARY_CLIP)) 
+        {
+            InitIFFasClip(ih);
+
+            if (0 == OpenIFF(ih, IFFF_WRITE)) 
+            {
+                if (0 == PushChunk(ih, ID_FTXT, ID_FORM, IFFSIZE_UNKNOWN)) 
+                {
+                    if (0 == PushChunk(ih, 0, ID_CHRS, IFFSIZE_UNKNOWN)) 
+                    {
+                        ULONG dataConvertedLength;
+                        STRPTR dataConverted = CodesetsUTF8ToStr(
+                                CSA_Source, (IPTR) data, 
+                                CSA_SourceLen, (IPTR) len, 
+                                CSA_DestLenPtr, (IPTR) &dataConvertedLength,
+                                TAG_END
+                        );
+                        if(dataConverted)
+                        {
+                            if (WriteChunkBytes(ih, (APTR) dataConverted, dataConvertedLength) > 0)
+                                copied = true;
+                            CodesetsFreeA(dataConverted, NULL);
+                        }
+                        PopChunk(ih);
+                    }
+                    PopChunk(ih);
+                }
+                CloseIFF(ih);
+            }
+            CloseClipboard((ClipboardHandle*) ih->iff_Stream);
+        }
+        FreeIFF(ih);
+    }
+
+    if (!copied)
+        DisplayBeep(NULL);
+}
+
+void Pasteboard::writeURL(const KURL& url, const String&, Frame* frame)
+{
+    IFFHandle *ih;
+    CString utf8 = url.string().utf8();
+    const char *data = utf8.data();
+    size_t len = utf8.length();
+
+    bool copied = false;
+
+    if (data && len && (ih = AllocIFF())) 
+    {
+        if (ih->iff_Stream = (IPTR) OpenClipboard(PRIMARY_CLIP)) 
+        {
+            InitIFFasClip(ih);
+
+            if (0 == OpenIFF(ih, IFFF_WRITE)) 
+            {
+                if (0 == PushChunk(ih, ID_FTXT, ID_FORM, IFFSIZE_UNKNOWN)) 
+                {
+                    if (0 == PushChunk(ih, 0, ID_CHRS, IFFSIZE_UNKNOWN)) 
+                    {
+                        ULONG dataConvertedLength;
+                        STRPTR dataConverted = CodesetsUTF8ToStr(
+                                CSA_Source, (IPTR) data, 
+                                CSA_SourceLen, (IPTR) len, 
+                                CSA_DestLenPtr, (IPTR) &dataConvertedLength,
+                                TAG_END
+                        );
+                        if(dataConverted)
+                        {
+                            if (WriteChunkBytes(ih, (APTR) dataConverted, dataConvertedLength) > 0)
+                                copied = true;
+                            CodesetsFreeA(dataConverted, NULL);
+                        }
+                        PopChunk(ih);
+                    }
+                    PopChunk(ih);
+                }
+                CloseIFF(ih);
+            }
+            CloseClipboard((ClipboardHandle*) ih->iff_Stream);
+        }
+        FreeIFF(ih);
+    }
+}
+
+void Pasteboard::writeImage(Node* node, const KURL&, const String&)
+{
+    NotImplemented();
+}
+
+void Pasteboard::clear()
+{
+}
+
+bool Pasteboard::canSmartReplace()
+{
+    NotImplemented();
+    return false;
+}
+
+PassRefPtr<DocumentFragment> Pasteboard::documentFragment(Frame* frame, PassRefPtr<Range> context,
+                                                          bool allowPlainText, bool& chosePlainText)
+{
+    if (allowPlainText) {
+        String text = plainText(frame);
+
+        chosePlainText = true;
+        RefPtr<DocumentFragment> fragment = createFragmentFromText(context.get(), text);
+        if (fragment)
+            return fragment.release();
+    }
+}
+
+String Pasteboard::plainText(Frame* frame)
+{
+    String result;
+
+    struct codeset *utfCodeset = CodesetsFindA("UTF-8", NULL);
+    if(!utfCodeset)
+        return result;
+    
+    if (IFFHandle *ih = AllocIFF()) {
+        if (ih->iff_Stream = (IPTR) OpenClipboard(PRIMARY_CLIP)) 
+        {
+            InitIFFasClip(ih);
+
+            if (0 == OpenIFF(ih, IFFF_READ)) 
+            {
+                LONG chunks[] = { ID_FTXT, ID_CHRS };
+
+                if (0 == CollectionChunks(ih, chunks, 1) && 0 == StopOnExit(ih, ID_FTXT, ID_FORM))
+                    while (true)
+                        if (IFFERR_EOC == ParseIFF(ih, IFFPARSE_SCAN)) 
+                        {
+                            CollectionItem *ci;
+
+                            ci = FindCollection(ih, ID_FTXT, ID_CHRS);
+                            if (ci)
+                            {
+                                ULONG dataConvertedLength;
+                                STRPTR dataConverted = CodesetsConvertStr(
+                                        CSA_Source, (IPTR) ci->ci_Data, 
+                                        CSA_SourceLen, (IPTR) ci->ci_Size, 
+                                        CSA_DestLenPtr, (IPTR) &dataConvertedLength, 
+                                        CSA_DestCodeset, (IPTR) utfCodeset, 
+                                        TAG_END
+                                );
+                                if(dataConverted)
+                                {
+                                    result.append(String::fromUTF8((const char *) dataConverted, dataConvertedLength));
+                                    CodesetsFreeA(dataConverted, NULL);
+                                }
+                            }
+                        }
+                        else
+                            break;
+
+                CloseIFF(ih);
+            }
+            CloseClipboard((ClipboardHandle*) ih->iff_Stream);
+        }
+        FreeIFF(ih);
+    }
+
+    return result;
+}
+
+}
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCPasteboardAROS.h OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPasteboardAROS.h
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCPasteboardAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPasteboardAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,79 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef Pasteboard_h
+#define Pasteboard_h
+
+#include <wtf/Forward.h>
+#include <wtf/HashSet.h>
+#include <wtf/Noncopyable.h>
+
+
+#include <PasteboardHelper.h>
+
+// FIXME: This class is too high-level to be in the platform directory, since it
+// uses the DOM and makes calls to Editor. It should either be divested of its
+// knowledge of the frame and editor or moved into the editing directory.
+
+
+namespace WebCore {
+
+class CString;
+class DocumentFragment;
+class Frame;
+class HitTestResult;
+class KURL;
+class Node;
+class Range;
+class String;
+    
+class Pasteboard : Noncopyable {
+public:
+    static Pasteboard* generalPasteboard();
+    void writeSelection(Range*, bool canSmartCopyOrDelete, Frame*);
+    void writePlainText(const String&);
+    void writeURL(const KURL&, const String&, Frame* = 0);
+    void writeImage(Node*, const KURL&, const String& title);
+
+    void clear();
+    bool canSmartReplace();
+    PassRefPtr<DocumentFragment> documentFragment(Frame*, PassRefPtr<Range>, bool allowPlainText, bool& chosePlainText);
+    String plainText(Frame* = 0);
+
+    void setHelper(PasteboardHelper*);
+
+private:
+    Pasteboard();
+    ~Pasteboard();
+
+    PasteboardHelper* m_helper;
+};
+
+} // namespace WebCore
+
+#endif // Pasteboard_h
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCPasteboardHelperAROS.h OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPasteboardHelperAROS.h
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCPasteboardHelperAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPasteboardHelperAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,54 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#ifndef PasteboardHelper_h
+#define PasteboardHelper_h
+
+#include "BALBase.h"
+/*
+ * FIXME: this is for WebCore support and must be removed once
+ * a better solution is found
+ */
+#include "Frame.h"
+
+
+namespace WebCore {
+
+class PasteboardHelper {
+public:
+    virtual ~PasteboardHelper() {};
+
+    virtual BalClipboard* getClipboard(Frame*) const = 0;
+    virtual BalTargetList* getCopyTargetList(Frame*) const = 0;
+    virtual BalTargetList* getPasteTargetList(Frame*) const = 0;
+};
+
+}
+
+#endif // PasteboardHelper_h
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCPlatformMenuDescriptionAROS.h OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPlatformMenuDescriptionAROS.h
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCPlatformMenuDescriptionAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPlatformMenuDescriptionAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,40 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#ifndef PlatformMenuDescription_h
+#define PlatformMenuDescription_h
+
+#include "BALBase.h"
+namespace WebCore {
+
+    typedef BalMenu* PlatformMenuDescription;
+
+} // namespace
+
+#endif // PlatformMenuDescription_h
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCPlatformScreenAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPlatformScreenAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCPlatformScreenAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPlatformScreenAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,84 @@
+/*
+ * Copyright (C) 2009 Stanislaw Szymczyk
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#include "config.h"
+#include "PlatformScreen.h"
+#include "Assertions.h"
+#include "Logging.h"
+#include "HostWindow.h"
+#include "ScrollView.h"
+#include "Widget.h"
+#include <proto/graphics.h>
+#include <proto/intuition.h>
+#include <intuition/intuition.h>
+#include <libraries/mui.h>
+
+namespace WebCore {
+
+int screenDepth(Widget* widget)
+{
+    struct Screen *screen;
+    int depth;
+    struct DrawInfo *info;
+    screen = LockPubScreen(NULL);
+    info = GetScreenDrawInfo(screen);
+    depth = info->dri_Depth;
+    UnlockPubScreen(NULL, screen);
+    return depth;
+}
+
+int screenDepthPerComponent(Widget*)
+{
+    NotImplemented();
+    return 8;
+}
+
+bool screenIsMonochrome(Widget* widget)
+{
+    return screenDepth(widget) < 2;
+}
+
+FloatRect screenRect(Widget* widget)
+{
+    struct Screen *screen;
+    int width, height;
+    screen = LockPubScreen(NULL);
+    width = screen->Width;
+    height = screen->Height;
+    UnlockPubScreen(NULL, screen);
+    return FloatRect(0, 0, width, height);
+}
+
+FloatRect screenAvailableRect(Widget* widget)
+{
+    return screenRect(widget);
+}
+
+} // namespace WebCore
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCPlatformScreenAROS.h OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPlatformScreenAROS.h
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCPlatformScreenAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPlatformScreenAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,53 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#ifndef PlatformScreen_h
+#define PlatformScreen_h
+
+#include "FloatRect.h"
+#include <wtf/Forward.h>
+#include <wtf/RefPtr.h>
+#include "BALBase.h"
+
+namespace WebCore {
+
+    class FloatRect;
+    class Widget;
+
+    int screenDepth(Widget*);
+    int screenDepthPerComponent(Widget*);
+    bool screenIsMonochrome(Widget*);
+
+    FloatRect screenRect(Widget*);
+    FloatRect screenAvailableRect(Widget*);
+
+
+} // namespace WebCore
+
+#endif // PlatformScreen_h
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCPopupMenuAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPopupMenuAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCPopupMenuAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPopupMenuAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,253 @@
+/*
+ * Copyright (C) 2009 Stanislaw Szymczyk
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#include "config.h"
+#include "PopupMenu.h"
+
+#include "Document.h"
+#include "FloatRect.h"
+#include "FontSelector.h"
+#include "FrameView.h"
+#include "GraphicsContext.h"
+#include "HTMLNames.h"
+#include "Page.h"
+#include "PlatformMouseEvent.h"
+#include "PlatformScreen.h"
+#include "RenderTheme.h"
+#include "RenderView.h"
+#include "Scrollbar.h"
+#include "ScrollbarTheme.h"
+#include "SimpleFontData.h"
+#include "ObserverServiceData.h"
+#include "CString.h"
+
+extern "C" {
+#include <exec/types.h>
+#include <proto/exec.h>
+#include <libraries/mui.h>
+#include <proto/muimaster.h>
+#include <proto/intuition.h>
+#include <aros/debug.h>
+#include <proto/alib.h>
+#include <proto/codesets.h>
+#include <libraries/codesets.h>
+}
+
+using std::min;
+
+namespace WebCore {
+
+using namespace HTMLNames;
+
+// Default Window animation duration in milliseconds
+static const int defaultAnimationDuration = 200;
+// Maximum height of a popup window
+static const int maxPopupHeight = 320;
+
+static const int popupWindowAlphaPercent = 95;
+
+const int optionSpacingMiddle = 1;
+const int popupWindowBorderWidth = 1;
+
+// FIXME: Remove this as soon as practical.
+static inline bool isASCIIPrintable(unsigned c)
+{
+    return c >= 0x20 && c <= 0x7E;
+}
+
+static void cancelled(struct Hook *hook, Object *popupwin, PopupMenu **that)
+{
+    (*that)->hide();
+}
+
+static void closed(struct Hook *hook, Object *popupwin, PopupMenu **that)
+{
+    WebCore::ObserverServiceData::createObserverService()->notifyObserver("PopupMenuHide", "", (*that));
+    (*that)->client()->popupDidHide();
+}
+
+static void opened(struct Hook *hook, Object *popupwin, PopupMenu **that)
+{
+    WebCore::ObserverServiceData::createObserverService()->notifyObserver("PopupMenuShow", "", (*that));
+}
+
+static void itemActivated(struct Hook *hook, Object *list, PopupMenu **that)
+{
+    IPTR activeItem;
+    GetAttr(MUIA_List_Active, list, (IPTR*) &activeItem);
+    D(bug("setting active item to %d\n", activeItem));
+    (*that)->client()->valueChanged(activeItem);
+    (*that)->hide();
+}
+
+PopupMenu::PopupMenu(PopupMenuClient* client)
+    : m_popupClient(client)
+    , m_popup(0)
+{
+    int itemCount = this->client()->listSize();
+
+    m_items = (char**) AllocVec(sizeof(char*) * (itemCount + 1), MEMF_ANY | MEMF_CLEAR);
+    for (int i = 0; i < itemCount; ++i) {
+        String text = this->client()->itemText(i);
+
+        if(text.isEmpty())
+            m_items[i] = (char*) StrDup("");
+	else
+	{
+            char *textChars = strdup(text.utf8().data());
+        
+            if(textChars)
+            {
+                char *textConverted = CodesetsUTF8ToStr(CSA_Source, (IPTR) textChars, TAG_END);
+                if(textConverted)
+                {
+                    m_items[i] = (char*) StrDup(textConverted);
+                    CodesetsFreeA(textConverted, NULL);
+                }
+                free(textChars);
+            }
+	}
+    }
+
+    Object *list;
+
+    m_popup = WindowObject,
+        MUIA_Window_Borderless, (IPTR) TRUE,
+        MUIA_Window_DragBar, (IPTR) FALSE,
+        MUIA_Window_CloseGadget, (IPTR) FALSE,
+        MUIA_Window_DepthGadget, (IPTR) FALSE,
+        MUIA_Window_SizeGadget, (IPTR) FALSE,
+        WindowContents, 
+            m_listview = ListviewObject,
+                MUIA_Listview_List,
+                    list = ListObject,
+                        MUIA_List_SourceArray, m_items,
+                    End,
+            End,
+        End;
+        
+    m_itemActivatedHook.h_Entry = (APTR)HookEntry;
+    m_itemActivatedHook.h_SubEntry = (APTR)itemActivated;
+
+    m_cancelledHook.h_Entry = (APTR)HookEntry;
+    m_cancelledHook.h_SubEntry = (APTR)cancelled;
+
+    m_hideHook.h_Entry = (APTR)HookEntry;
+    m_hideHook.h_SubEntry = (APTR)closed;
+
+    m_showHook.h_Entry = (APTR)HookEntry;
+    m_showHook.h_SubEntry = (APTR)opened;
+
+    DoMethod(list, MUIM_Notify, MUIA_List_Active, MUIV_EveryTime,
+        list, 3,
+        MUIM_CallHook, &m_itemActivatedHook, (IPTR) this);
+
+    DoMethod(m_popup, MUIM_Notify, MUIA_Window_Activate, FALSE,
+        m_popup, 3,
+        MUIM_CallHook, &m_cancelledHook, (IPTR) this);
+
+    DoMethod(m_popup, MUIM_Notify, MUIA_Window_Open, FALSE,
+        m_popup, 3,
+        MUIM_CallHook, &m_hideHook, (IPTR) this);
+
+    DoMethod(m_popup, MUIM_Notify, MUIA_Window_Open, TRUE,
+        m_popup, 3,
+        MUIM_CallHook, &m_showHook, (IPTR) this);
+
+    /* Add popup window to application */
+    Object *webView = (Object*) m_popupClient->hostWindow()->platformPageClient();
+    DoMethod(_app(webView), OM_ADDMEMBER, m_popup);
+}
+
+PopupMenu::~PopupMenu()
+{
+    DoMethod(_app(m_popup), MUIM_Set, MUIA_Window_Open, (IPTR) FALSE);
+    DoMethod(_app(m_popup), OM_REMMEMBER, m_popup);
+
+    int itemCount = this->client()->listSize();
+    for (int i = 0; i < itemCount; ++i) {
+            FreeVec(m_items[i]);
+    }
+    FreeVec(m_items);
+
+    MUI_DisposeObject(m_popup);
+}
+
+void PopupMenu::show(const IntRect& r, FrameView* view, int index)
+{
+    ASSERT(client());
+
+    Object *webView = (Object*) view->hostWindow()->platformPageClient();
+
+    IntRect rScreenCoords(view->contentsToWindow(r.location()), r.size());
+    rScreenCoords.setY(rScreenCoords.y() + rScreenCoords.height());
+    
+    struct MUI_MinMax MinMaxInfo;
+    DoMethod(m_listview, MUIM_AskMinMax, &MinMaxInfo);
+
+    rScreenCoords.setHeight(MinMaxInfo.DefHeight);
+    rScreenCoords.setWidth(max(rScreenCoords.width(), (int) MinMaxInfo.DefWidth));
+
+    /* Get offsets to compute absolute position of new window on the screen */
+    IPTR winOffsetX, winOffsetY;
+    struct Window *parentWindow;
+    GetAttr(MUIA_Window, webView, (IPTR*) &parentWindow);
+    winOffsetX = parentWindow->LeftEdge;
+    winOffsetY = parentWindow->TopEdge;
+
+    SetAttrs(m_popup, 
+        MUIA_Window_LeftEdge, (IPTR) _left(webView) + winOffsetX + rScreenCoords.x(),
+        MUIA_Window_TopEdge, (IPTR) _top(webView) + winOffsetY + rScreenCoords.y(),
+        MUIA_Window_Width, (IPTR) rScreenCoords.width(),
+        TAG_DONE
+    );
+
+    DoMethod(_app(m_popup), MUIM_Application_PushMethod, m_popup, 3, MUIM_Set, MUIA_Window_Open, (IPTR) TRUE);
+}
+
+void PopupMenu::hide()
+{
+    /* It has to be this way because List object crashes if we close its parent window
+     * inside a notification call for this object */
+    DoMethod(_app(m_popup), MUIM_Application_PushMethod, m_popup, 3, MUIM_Set, MUIA_Window_Open, (IPTR) FALSE);
+
+}
+
+void PopupMenu::updateFromElement()
+{
+    client()->setTextFromItem(client()->selectedIndex());
+}
+
+bool PopupMenu::itemWritingDirectionIsNatural()
+{
+    return false;
+}
+
+}
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCPopupMenuAROS.h OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPopupMenuAROS.h
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCPopupMenuAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCPopupMenuAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,84 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#ifndef PopupMenu_h
+#define PopupMenu_h
+
+#include "IntRect.h"
+#include "PopupMenuClient.h"
+#include <wtf/PassRefPtr.h>
+#include <wtf/RefCounted.h>
+#include "BALBase.h"
+
+#include "Scrollbar.h"
+#include "ScrollbarClient.h"
+#include <wtf/RefPtr.h>
+
+#include <wtf/HashMap.h>
+
+#include <utility/hooks.h>
+
+namespace WebCore {
+
+class FrameView;
+class Scrollbar;
+
+class PopupMenu : public RefCounted<PopupMenu>
+{
+public:
+    static PassRefPtr<PopupMenu> create(PopupMenuClient* client) { return new PopupMenu(client); }
+    ~PopupMenu();
+    
+    void disconnectClient() { m_popupClient = 0; }
+
+    void show(const IntRect&, FrameView*, int index);
+    void hide();
+
+    void updateFromElement();
+    
+    PopupMenuClient* client() const { return m_popupClient; }
+
+    static bool itemWritingDirectionIsNatural();
+    
+protected:
+    PopupMenu(PopupMenuClient*);
+
+private:
+    PopupMenuClient* m_popupClient;
+
+    BalWidget* m_popup;
+    BalWidget* m_listview;
+    int m_focusedIndex;
+    char **m_items;
+    struct Hook m_itemActivatedHook, m_hideHook, m_cancelledHook, m_showHook;
+};
+
+}
+
+#endif
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCRenderThemeAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCRenderThemeAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCRenderThemeAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCRenderThemeAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,510 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#include "config.h"
+#include "Logging.h"
+#include "InputElement.h"
+#include "RenderObject.h"
+#include "RenderThemeAROS.h"
+
+#include "GraphicsContext.h"
+#include "Pen.h"
+#include "RenderBox.h"
+
+#include <cstdio>
+
+#define THEME_COLOR 204
+#define THEME_FONT  210
+
+// Generic state constants
+#define TS_NORMAL    1
+#define TS_HOVER     2
+#define TS_ACTIVE    3
+#define TS_DISABLED  4
+#define TS_FOCUSED   5
+
+// Button constants
+#define BP_BUTTON    1
+#define BP_RADIO     2
+#define BP_CHECKBOX  3
+
+// Textfield constants
+#define TFP_TEXTFIELD 1
+#define TFS_READONLY  6
+
+
+namespace WebCore {
+
+PassRefPtr<RenderTheme> RenderThemeBal::create()
+{
+    return adoptRef(new RenderThemeBal());
+}
+
+PassRefPtr<RenderTheme> RenderTheme::themeForPage(Page* page)
+{
+    static RenderTheme* rt = RenderThemeBal::create().releaseRef();
+    return rt;
+}
+
+void RenderThemeBal::addIntrinsicMargins(RenderStyle* style) const
+{
+    // Cut out the intrinsic margins completely if we end up using a small font size
+    if (style->fontSize() < 11)
+        return;
+
+    // Intrinsic margin value.
+    const int m = 2;
+
+    // FIXME: Using width/height alone and not also dealing with min-width/max-width is flawed.
+    if (style->width().isIntrinsicOrAuto()) {
+        if (style->marginLeft().quirk())
+            style->setMarginLeft(Length(m, Fixed));
+        if (style->marginRight().quirk())
+            style->setMarginRight(Length(m, Fixed));
+    }
+
+    if (style->height().isAuto()) {
+        if (style->marginTop().quirk())
+            style->setMarginTop(Length(m, Fixed));
+        if (style->marginBottom().quirk())
+            style->setMarginBottom(Length(m, Fixed));
+    }
+}
+
+
+RenderThemeBal::RenderThemeBal()
+    : m_balWindow(0)
+    , m_balContainer(0)
+    , m_balEntry(0)
+    , m_balTreeView(0)
+{
+}
+
+bool RenderThemeBal::supportsFocusRing(const RenderStyle* style) const
+{
+    return false;
+}
+
+bool RenderThemeBal::controlSupportsTints(const RenderObject* o) const
+{
+    return isEnabled(o);
+}
+
+int RenderThemeBal::baselinePosition(const RenderObject* o) const
+{
+    // FIXME: This strategy is possibly incorrect for the GTK+ port.
+    if (o->style()->appearance() == CheckboxPart ||
+        o->style()->appearance() == RadioPart)
+        return toRenderBox(o)->marginTop() + toRenderBox(o)->height() - 2;
+    return RenderTheme::baselinePosition(o);
+}
+
+
+
+void RenderThemeBal::setCheckboxSize(RenderStyle* style) const
+{
+    // If the width and height are both specified, then we have nothing to do.
+    if (!style->width().isIntrinsicOrAuto() && !style->height().isAuto())
+        return;
+
+    // FIXME:  A hard-coded size of 13 is used.  This is wrong but necessary for now.  It matches Firefox.
+    // At different DPI settings on Windows, querying the theme gives you a larger size that accounts for
+    // the higher DPI.  Until our entire engine honors a DPI setting other than 96, we can't rely on the theme's
+    // metrics.
+    if (style->width().isIntrinsicOrAuto())
+        style->setWidth(Length(13, Fixed));
+    if (style->height().isAuto())
+        style->setHeight(Length(13, Fixed));
+}
+
+bool RenderThemeBal::paintCheckbox(RenderObject* o, const RenderObject::PaintInfo& i, const IntRect& r)
+{
+    i.context->save();
+    i.context->setStrokeStyle(SolidStroke);
+    i.context->setStrokeColor(Color::black);
+    PassRefPtr<RenderStyle> style = RenderStyle::create();
+    addIntrinsicMargins(style.get());
+
+    EBorderStyle v = INSET;
+    style->setBorderTopStyle(v);
+    style->setBorderLeftStyle(v);
+    style->setBorderBottomStyle(v);
+    style->setBorderRightStyle(v);
+    int borderWidth = 1;
+    style->setBorderTopWidth(borderWidth);
+    style->setBorderLeftWidth(borderWidth);
+    style->setBorderBottomWidth(borderWidth);
+    style->setBorderRightWidth(borderWidth);
+    toRenderBox(o)->paintFillLayerExtended(i,
+        o->style()->backgroundColor(), o->style()->backgroundLayers(), r.x(), r.y(), toRenderBox(o)->width(), toRenderBox(o)->height(), 0, style->backgroundComposite());
+    toRenderBox(o)->paintBorder(i.context,
+        r.x(), r.y(), r.width(), r.height(),
+        style.get(), true, true);
+
+    if( o->node()->active() ) {
+        IntRect r2(r);
+        r2.inflate(-2);
+        i.context->setFillColor(WebCore::Color(0xc0,0xc0,0xc0));
+        i.context->drawRect(r2);
+        v = GROOVE;
+        style->setBorderTopStyle(v);
+        style->setBorderLeftStyle(v);
+        style->setBorderBottomStyle(v);
+        style->setBorderRightStyle(v);
+        int borderWidth = 1;
+        style->setBorderTopWidth(borderWidth);
+        style->setBorderLeftWidth(borderWidth);
+        style->setBorderBottomWidth(borderWidth);
+        style->setBorderRightWidth(borderWidth);
+        toRenderBox(o)->paintFillLayerExtended(i,
+        o->style()->backgroundColor(), o->style()->backgroundLayers(), r.x(), r.y(), toRenderBox(o)->width(), toRenderBox(o)->height(), 0, style->backgroundComposite());
+        toRenderBox(o)->paintBorder(i.context,
+            r.x(), r.y(), r.width(), r.height(),
+            style.get(), true, true);
+    }
+    InputElement *input = toInputElement(static_cast<Element*>(o->node()));
+    if(input && input->isChecked()) {
+        i.context->setStrokeColor(Color::black);
+        i.context->setStrokeStyle(SolidStroke);
+        IntRect r2(r);
+        r2.inflate(-borderWidth-2);
+        i.context->drawLine(IntPoint(r2.x(),r2.y()), IntPoint(r2.x()+r2.width(),r2.y()+r2.height()));
+        i.context->drawLine(IntPoint(r2.x()+r2.width(),r2.y()), IntPoint(r2.x(),r2.y()+r2.height()));
+    }
+    i.context->restore();
+    return false;
+}
+
+void RenderThemeBal::setRadioSize(RenderStyle* style) const
+{
+    // This is the same as checkboxes.
+    setCheckboxSize(style);
+}
+
+bool RenderThemeBal::paintRadio(RenderObject* o, const RenderObject::PaintInfo& i, const IntRect& r)
+{
+    i.context->save();
+    i.context->setStrokeStyle(SolidStroke);
+    PassRefPtr<RenderStyle> style = RenderStyle::create();
+    EBorderStyle v = RIDGE;
+    style->setBorderTopStyle(v);
+    style->setBorderLeftStyle(v);
+    style->setBorderBottomStyle(v);
+    style->setBorderRightStyle(v);
+#if PLATFORM(AMIGAOS4)
+    int borderWidth = 2;
+#else
+    int borderWidth = 1;
+#endif
+    style->setBorderTopWidth(borderWidth);
+    style->setBorderLeftWidth(borderWidth);
+    style->setBorderBottomWidth(borderWidth);
+    style->setBorderRightWidth(borderWidth);
+
+    toRenderBox(o)->paintFillLayerExtended(i,
+        o->style()->backgroundColor(), o->style()->backgroundLayers(), r.x(), r.y(), toRenderBox(o)->width(), toRenderBox(o)->height(), 0, style->backgroundComposite());
+    toRenderBox(o)->paintBorder(i.context,
+        r.x(), r.y(), r.width(), r.height(),
+        style.get(), true, true);
+    InputElement *input = toInputElement(static_cast<Element*>(o->node()));
+    if(input && input->isChecked()) {
+        IntRect r2(r);
+#if PLATFORM(AMIGAOS4)
+        r2.inflate(-borderWidth - 1);
+        i.context->setFillColor(Color(0xFF618ECE));
+#else
+        r2.inflate(-borderWidth - 2);
+#endif
+        i.context->drawRect(r2);
+    }
+    i.context->restore();
+    return false;
+}
+
+void RenderThemeBal::adjustButtonStyle(CSSStyleSelector* selector, RenderStyle* style, WebCore::Element* e) const
+{
+    addIntrinsicMargins(style);
+}
+
+bool RenderThemeBal::paintButton(RenderObject* o, const RenderObject::PaintInfo& i, const IntRect& r)
+{
+    toRenderBox(o)->paintFillLayerExtended(i,
+        o->style()->backgroundColor(), o->style()->backgroundLayers(), r.x(), r.y(), toRenderBox(o)->width(), toRenderBox(o)->height(), 0, o->style()->backgroundComposite());
+    toRenderBox(o)->paintBorder(i.context,
+        r.x(), r.y(), r.width(), r.height(),
+        o->style(), true, true);
+    return false;
+}
+
+void RenderThemeBal::adjustMenuListStyle(CSSStyleSelector* selector, RenderStyle* style, WebCore::Element* e) const
+{
+    style->resetBorder();
+    style->resetPadding();
+    style->setHeight(Length(Auto));
+    style->setWhiteSpace(PRE);
+}
+
+bool RenderThemeBal::paintMenuList(RenderObject* o, const RenderObject::PaintInfo& i, const IntRect& r)
+{
+    PassRefPtr<RenderStyle> style = RenderStyle::create();
+    style->setMarginLeft(Length(10, Fixed));
+    style->setMarginTop(Length(10, Fixed));
+    EBorderStyle v = INSET;
+    style->setBorderTopStyle(v);
+    style->setBorderLeftStyle(v);
+    style->setBorderBottomStyle(v);
+    style->setBorderRightStyle(v);
+    style->setBorderTopWidth(1);
+    style->setBorderLeftWidth(1);
+    style->setBorderBottomWidth(1);
+    style->setBorderRightWidth(1);
+    toRenderBox(o)->paintFillLayerExtended(i,
+        o->style()->backgroundColor(), o->style()->backgroundLayers(), r.x(), r.y(), toRenderBox(o)->width(), toRenderBox(o)->height(), 0, style->backgroundComposite());
+    toRenderBox(o)->paintBorder(i.context,
+        r.x(), r.y(), r.width(), r.height(),
+        style.get(), true, true);
+    return false;
+    
+}
+
+void RenderThemeBal::adjustTextFieldStyle(CSSStyleSelector* selector, RenderStyle* style, Element* e) const
+{
+    style->resetBorder();
+    style->resetPadding();
+    style->setHeight(Length(Auto));
+    style->setWhiteSpace(PRE);
+}
+
+bool RenderThemeBal::paintTextField(RenderObject* o, const RenderObject::PaintInfo& i, const IntRect& r)
+{
+    i.context->save();
+    i.context->setStrokeStyle(SolidStroke);
+    i.context->setStrokeColor(Color::black);
+    PassRefPtr<RenderStyle> style = RenderStyle::create();
+    addIntrinsicMargins(style.get());
+
+    EBorderStyle v = INSET;
+    style->setBorderTopStyle(v);
+    style->setBorderLeftStyle(v);
+    style->setBorderBottomStyle(v);
+    style->setBorderRightStyle(v);
+    int borderWidth = 1;
+    style->setBorderTopWidth(borderWidth);
+    style->setBorderLeftWidth(borderWidth);
+    style->setBorderBottomWidth(borderWidth);
+    style->setBorderRightWidth(borderWidth);
+    toRenderBox(o)->paintFillLayerExtended(i,
+        o->style()->backgroundColor(), o->style()->backgroundLayers(), r.x(), r.y(), toRenderBox(o)->width(), toRenderBox(o)->height(), 0, style->backgroundComposite());
+    toRenderBox(o)->paintBorder(i.context,
+        r.x(), r.y(), r.width(), r.height(),
+        style.get(), true, true);
+
+    i.context->restore();
+    return false;
+}
+
+void RenderThemeBal::adjustTextAreaStyle(CSSStyleSelector* selector, RenderStyle* style, Element* e) const
+{
+    adjustTextFieldStyle(selector, style, e);
+}
+
+bool RenderThemeBal::paintTextArea(RenderObject* o, const RenderObject::PaintInfo& i, const IntRect& r)
+{
+    return paintTextField(o, i, r);
+}
+
+void RenderThemeBal::adjustSearchFieldResultsButtonStyle(CSSStyleSelector* selector, RenderStyle* style, Element* e) const
+{
+    adjustSearchFieldCancelButtonStyle(selector, style, e);
+}
+
+bool RenderThemeBal::paintSearchFieldResultsButton(RenderObject* o, const RenderObject::PaintInfo& i, const IntRect& rect)
+{
+    return true;
+}
+
+void RenderThemeBal::adjustSearchFieldResultsDecorationStyle(CSSStyleSelector* selector, RenderStyle* style, Element* e) const
+{
+    style->resetBorder();
+    style->resetPadding();
+
+    // FIXME: This should not be hard-coded.
+    IntSize size = IntSize(14, 14);
+    style->setWidth(Length(size.width(), Fixed));
+    style->setHeight(Length(size.height(), Fixed));
+}
+
+bool RenderThemeBal::paintSearchFieldResultsDecoration(RenderObject* o, const RenderObject::PaintInfo& i, const IntRect& rect)
+{
+    return true;
+}
+
+void RenderThemeBal::adjustSearchFieldCancelButtonStyle(CSSStyleSelector* selector, RenderStyle* style, Element* e) const
+{
+    style->resetBorder();
+    style->resetPadding();
+
+    // FIXME: This should not be hard-coded.
+    IntSize size = IntSize(14, 14);
+    style->setWidth(Length(size.width(), Fixed));
+    style->setHeight(Length(size.height(), Fixed));
+}
+
+bool RenderThemeBal::paintSearchFieldCancelButton(RenderObject* o, const RenderObject::PaintInfo& i, const IntRect& rect)
+{
+    return true;
+}
+
+void RenderThemeBal::adjustSearchFieldStyle(CSSStyleSelector* selector, RenderStyle* style, Element* e) const
+{
+    adjustTextFieldStyle(selector, style, e);
+}
+
+bool RenderThemeBal::paintSearchField(RenderObject* o, const RenderObject::PaintInfo& i, const IntRect& rect)
+{
+    return paintTextField(o, i, rect);
+}
+
+Color RenderThemeBal::platformActiveSelectionBackgroundColor() const
+{
+#if PLATFORM(AMIGAOS4)
+    Color c(0xFF618ECE);
+#else
+    Color c(0, 0, 255);
+#endif
+    return c;
+}
+
+Color RenderThemeBal::platformInactiveSelectionBackgroundColor() const
+{
+#if PLATFORM(AMIGAOS4)
+    Color c(0xFFCFCFCF);
+#else
+    Color c(0, 0, 255);
+#endif
+    return c;
+}
+
+Color RenderThemeBal::platformActiveSelectionForegroundColor() const
+{
+#if PLATFORM(AMIGAOS4)
+    Color c(0xFF000000);
+#else
+    Color c(255, 255, 255);
+#endif
+    return c;
+}
+
+Color RenderThemeBal::platformInactiveSelectionForegroundColor() const
+{
+#if PLATFORM(AMIGAOS4)
+    Color c(0xFF3F3F3F);
+#else
+    Color c(255, 255, 255);
+#endif
+    return c;
+}
+
+Color RenderThemeBal::activeListBoxSelectionBackgroundColor() const
+{
+#if PLATFORM(AMIGAOS4)
+    Color c(0xFF618ECE);
+#else
+    Color c(0, 0, 255);
+#endif
+    return c;
+}
+
+Color RenderThemeBal::inactiveListBoxSelectionBackgroundColor() const
+{
+#if PLATFORM(AMIGAOS4)
+    Color c(0xFFCFCFCF);
+#else
+    Color c(0, 0, 255);
+#endif
+    return c;
+}
+
+Color RenderThemeBal::activeListBoxSelectionForegroundColor() const
+{
+#if PLATFORM(AMIGAOS4)
+    Color c(0xFF000000);
+#else
+    Color c(255, 255, 255);
+#endif
+    return c;
+}
+
+Color RenderThemeBal::inactiveListBoxSelectionForegroundColor() const
+{
+#if PLATFORM(AMIGAOS4)
+    Color c(0xFF3F3F3F);
+#else
+    Color c(255, 255, 255);
+#endif
+    return c;
+}
+
+double RenderThemeBal::caretBlinkInterval() const
+{
+    return 1.0;
+}
+
+void RenderThemeBal::systemFont(int, FontDescription&) const
+{
+    // If you remove this notImplemented(), replace it with an comment that explains why.
+    NotImplemented();
+}
+
+
+BalContainer* RenderThemeBal::balContainer() const
+{
+    if (m_balContainer)
+        return m_balContainer;
+
+    return m_balContainer;
+}
+
+BalWidget* RenderThemeBal::balEntry() const
+{
+    if (m_balEntry)
+        return m_balEntry;
+
+    return m_balEntry;
+}
+
+BalWidget* RenderThemeBal::balTreeView() const
+{
+    if (m_balTreeView)
+        return m_balTreeView;
+
+    return m_balTreeView;
+}
+
+}
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCRenderThemeAROS.h OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCRenderThemeAROS.h
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCRenderThemeAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCRenderThemeAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,136 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#ifndef RenderThemeGdk_h
+#define RenderThemeGdk_h
+
+#include "RenderTheme.h"
+#include "GraphicsContext.h"
+
+#include "BALBase.h"
+
+namespace WebCore {
+
+class RenderThemeBal : public RenderTheme {
+private:
+    RenderThemeBal();
+    virtual ~RenderThemeBal() { }
+
+public:
+    static PassRefPtr<RenderTheme> create();
+
+    // A method asking if the theme's controls actually care about redrawing when hovered.
+    virtual bool supportsHover(const RenderStyle* style) const { return true; }
+
+    // A method asking if the theme is able to draw the focus ring.
+    virtual bool supportsFocusRing(const RenderStyle*) const;
+
+    // A method asking if the control changes its tint when the window has focus or not.
+    virtual bool controlSupportsTints(const RenderObject*) const;
+
+    // A general method asking if any control tinting is supported at all.
+    virtual bool supportsControlTints() const { return true; }
+
+    // A method to obtain the baseline position for a "leaf" control.  This will only be used if a baseline
+    // position cannot be determined by examining child content. Checkboxes and radio buttons are examples of
+    // controls that need to do this.
+    virtual int baselinePosition(const RenderObject*) const;
+
+    // The platform selection color.
+    virtual Color platformActiveSelectionBackgroundColor() const;
+    virtual Color platformInactiveSelectionBackgroundColor() const;
+    virtual Color platformActiveSelectionForegroundColor() const;
+    virtual Color platformInactiveSelectionForegroundColor() const;
+
+    // List Box selection color
+    virtual Color activeListBoxSelectionBackgroundColor() const;
+    virtual Color activeListBoxSelectionForegroundColor() const;
+    virtual Color inactiveListBoxSelectionBackgroundColor() const;
+    virtual Color inactiveListBoxSelectionForegroundColor() const;
+
+    virtual double caretBlinkInterval() const;
+
+    // System fonts.
+    virtual void systemFont(int propId, FontDescription&) const;
+
+protected:
+    virtual bool paintCheckbox(RenderObject* o, const RenderObject::PaintInfo& i, const IntRect& r);
+    virtual void setCheckboxSize(RenderStyle* style) const;
+
+    virtual bool paintRadio(RenderObject* o, const RenderObject::PaintInfo& i, const IntRect& r);
+    virtual void setRadioSize(RenderStyle* style) const;
+
+    virtual void adjustButtonStyle(CSSStyleSelector*, RenderStyle*, Element*) const;
+    virtual bool paintButton(RenderObject*, const RenderObject::PaintInfo&, const IntRect&);
+
+    virtual void adjustTextFieldStyle(CSSStyleSelector*, RenderStyle*, Element*) const;
+    virtual bool paintTextField(RenderObject*, const RenderObject::PaintInfo&, const IntRect&);
+
+    virtual void adjustTextAreaStyle(CSSStyleSelector*, RenderStyle*, Element*) const;
+    virtual bool paintTextArea(RenderObject*, const RenderObject::PaintInfo&, const IntRect&);
+
+    virtual void adjustMenuListStyle(CSSStyleSelector*, RenderStyle*, Element*) const;
+    virtual bool paintMenuList(RenderObject*, const RenderObject::PaintInfo&, const IntRect&);
+
+    virtual void adjustSearchFieldResultsDecorationStyle(CSSStyleSelector*, RenderStyle*, Element*) const;
+    virtual bool paintSearchFieldResultsDecoration(RenderObject*, const RenderObject::PaintInfo&, const IntRect&);
+
+    virtual void adjustSearchFieldStyle(CSSStyleSelector*, RenderStyle*, Element*) const;
+    virtual bool paintSearchField(RenderObject*, const RenderObject::PaintInfo&, const IntRect&);
+
+    virtual void adjustSearchFieldResultsButtonStyle(CSSStyleSelector*, RenderStyle*, Element*) const;
+    virtual bool paintSearchFieldResultsButton(RenderObject*, const RenderObject::PaintInfo&, const IntRect&);
+
+    virtual void adjustSearchFieldCancelButtonStyle(CSSStyleSelector*, RenderStyle*, Element*) const;
+    virtual bool paintSearchFieldCancelButton(RenderObject*, const RenderObject::PaintInfo&, const IntRect&);
+
+
+private:
+    /*
+     * hold the state
+     */
+    BalWidget* balEntry() const;
+    BalWidget* balTreeView() const;
+
+    /*
+     * unmapped GdkWindow having a container. This is holding all
+     * our fake widgets
+     */
+    BalContainer* balContainer() const;
+    void addIntrinsicMargins(RenderStyle* style) const;
+private:
+    mutable BalWidget* m_balWindow;
+    mutable BalContainer* m_balContainer;
+    mutable BalWidget* m_balEntry;
+    mutable BalWidget* m_balTreeView;
+};
+
+}
+
+#endif
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCScrollbarThemeAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCScrollbarThemeAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCScrollbarThemeAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCScrollbarThemeAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,260 @@
+/*
+ * Copyright (C) 2008 Apple Inc. All Rights Reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "ScrollbarThemeAROS.h"
+
+#include "BALBase.h"
+#include "ChromeClient.h"
+#include "Frame.h"
+#include "FrameView.h"
+#include "GraphicsContext.h"
+#include "Logging.h"
+#include "Page.h"
+#include "PlatformMouseEvent.h"
+#include "GraphicsContext.h"
+#include "Scrollbar.h"
+#include "ScrollbarClient.h"
+#include "Settings.h"
+
+namespace WebCore {
+
+// Constants used to figure the drag rect outside which we should snap the
+// scrollbar thumb back to its origin.  These calculations are based on
+// observing the behavior of the MSVC8 main window scrollbar + some
+// guessing/extrapolation.
+static const int kOffEndMultiplier = 3;
+static const int kOffSideMultiplier = 8;
+
+
+ScrollbarTheme* ScrollbarTheme::nativeTheme()
+{
+    static ScrollbarThemeBal theme;
+    return &theme;
+}
+
+ScrollbarThemeBal::~ScrollbarThemeBal()
+{
+}
+
+
+int ScrollbarThemeBal::scrollbarThickness(ScrollbarControlSize controlSize)
+{
+    BalNotImplemented();
+    return 11;
+}
+
+bool ScrollbarThemeBal::hasThumb(Scrollbar* scrollbar)
+{
+    return thumbLength(scrollbar) > 0;
+}
+
+IntRect ScrollbarThemeBal::backButtonRect(Scrollbar* scrollbar, ScrollbarPart part, bool)
+{
+    if (part == BackButtonEndPart)
+        return IntRect();
+
+    // Our desired rect is essentially 17x17.
+
+    // Our actual rect will shrink to half the available space when
+    // we have < 34 pixels left.  This allows the scrollbar
+    // to scale down and function even at tiny sizes.
+    int thickness = scrollbarThickness();
+    if (scrollbar->orientation() == HorizontalScrollbar)
+        return IntRect(scrollbar->x(), scrollbar->y(),
+                       scrollbar->width() < 2 * thickness ? scrollbar->width() / 2 : thickness, thickness);
+    return IntRect(scrollbar->x(), scrollbar->y(),
+                   thickness, scrollbar->height() < 2 * thickness ? scrollbar->height() / 2 : thickness);
+}
+
+IntRect ScrollbarThemeBal::forwardButtonRect(Scrollbar* scrollbar, ScrollbarPart part, bool)
+{
+    if (part == ForwardButtonStartPart)
+        return IntRect();
+
+    // Our desired rect is essentially 17x17.
+
+    // Our actual rect will shrink to half the available space when
+    // we have < 34 pixels left.  This allows the scrollbar
+    // to scale down and function even at tiny sizes.
+    int thickness = scrollbarThickness();
+    if (scrollbar->orientation() == HorizontalScrollbar) {
+        int w = scrollbar->width() < 2 * thickness ? scrollbar->width() / 2 : thickness;
+        return IntRect(scrollbar->x() + scrollbar->width() - w, scrollbar->y(), w, thickness);
+    }
+
+    int h = scrollbar->height() < 2 * thickness ? scrollbar->height() / 2 : thickness;
+    return IntRect(scrollbar->x(), scrollbar->y() + scrollbar->height() - h, thickness, h);
+}
+
+IntRect ScrollbarThemeBal::trackRect(Scrollbar* scrollbar, bool)
+{
+    int thickness = scrollbarThickness();
+    if (scrollbar->orientation() == HorizontalScrollbar) {
+        if (scrollbar->width() < 2 * thickness)
+            return IntRect();
+        return IntRect(scrollbar->x() + thickness, scrollbar->y(), scrollbar->width() - 2 * thickness, thickness);
+    }
+    if (scrollbar->height() < 2 * thickness)
+        return IntRect();
+    return IntRect(scrollbar->x(), scrollbar->y() + thickness, thickness, scrollbar->height() - 2 * thickness);
+}
+
+void ScrollbarThemeBal::paintButton(GraphicsContext* context, Scrollbar* scrollbar, const IntRect& rect, ScrollbarPart part)
+{
+    context->save();
+    bool start = (part == BackButtonStartPart);
+    static RefPtr<WebCore::Image> left = Image::loadPlatformResource("/ScrollbarTheme/left");
+    if (!left->isNull()) {
+        IntPoint startPos(rect.location());
+        if (start) {
+            if (scrollbar->orientation() == HorizontalScrollbar)
+                context->drawImage(left.get(), startPos);
+            else {
+                static RefPtr<WebCore::Image> up = Image::loadPlatformResource("/ScrollbarTheme/up");
+                context->drawImage(up.get(), startPos);
+            }
+        } else {
+            if (scrollbar->orientation() == HorizontalScrollbar) {
+                static RefPtr<WebCore::Image> right = Image::loadPlatformResource("/ScrollbarTheme/right");
+                context->drawImage(right.get(), startPos);
+            } else {
+                static RefPtr<WebCore::Image> down = Image::loadPlatformResource("/ScrollbarTheme/down");
+                context->drawImage(down.get(), startPos);
+            }
+        }
+    } else {
+        context->drawRect(rect);
+        context->fillRect(IntRect(rect.x() + 1, rect.y() + 1, rect.width() - 2, rect.height() - 2), Color::gray);
+
+        if (start) {
+            if (scrollbar->orientation() == HorizontalScrollbar) {
+                context->drawLine(IntPoint(rect.right(), rect.y()), IntPoint(rect.x() - 1, (rect.bottom() + rect.y())/2));
+                context->drawLine(IntPoint(rect.right(), rect.bottom()), IntPoint(rect.x() - 1, (rect.bottom() + rect.y())/2));
+            } else {
+                context->drawLine(IntPoint(rect.x(), rect.bottom()), IntPoint((rect.x() + rect.right())/2, rect.y() + 1));
+                context->drawLine(IntPoint(rect.right() - 1, rect.bottom()), IntPoint((rect.x() + rect.right())/2, rect.y() + 1));
+            }
+        } else {
+            if (scrollbar->orientation() == HorizontalScrollbar) {
+                context->drawLine(IntPoint(rect.x(), rect.y()), IntPoint(rect.right() - 1, (rect.bottom() + rect.y())/2));
+                context->drawLine(IntPoint(rect.x(), rect.bottom()), IntPoint(rect.right() - 1, (rect.bottom() + rect.y())/2));
+            } else {
+                context->drawLine(IntPoint(rect.x(), rect.y()), IntPoint((rect.x() + rect.right())/2, rect.bottom() - 1));
+                context->drawLine(IntPoint(rect.right(), rect.y()), IntPoint((rect.x() + rect.right())/2, rect.bottom() - 1));
+            }
+        }
+    }
+    context->restore();
+}
+
+void ScrollbarThemeBal::paintThumb(GraphicsContext* context, Scrollbar* scrollbar, const IntRect& rect)
+{
+    context->save();
+    if (scrollbar->orientation() == HorizontalScrollbar) {
+        static RefPtr<WebCore::Image> thumbH = Image::loadPlatformResource("/ScrollbarTheme/thumbH");
+        if (!thumbH->isNull()) {
+            static RefPtr<WebCore::Image> thumbHL = Image::loadPlatformResource("/ScrollbarTheme/thumbHL");
+            static RefPtr<WebCore::Image> thumbHR = Image::loadPlatformResource("/ScrollbarTheme/thumbHR");
+            IntPoint startPos(rect.location());
+            IntPoint endPos(rect.right() - thumbHR->width(), rect.y());
+            IntRect destRect(rect.x() + thumbHL->width() - 1, rect.y(), rect.width() - thumbHR->width() - thumbHL->width() + 1, rect.height());
+
+            context->drawImage(thumbHL.get(), startPos);
+            context->drawTiledImage(thumbH.get(), destRect, IntPoint(0, 0), IntSize(thumbH->width(), thumbH->height()));
+            context->drawImage(thumbHR.get(), endPos);
+
+        } else {
+            context->drawRect(rect);
+            context->fillRect(IntRect(rect.x() + 1, rect.y() + 1, rect.width() - 2, rect.height() - 2), Color::gray);
+        }
+    } else {
+        static RefPtr<WebCore::Image> thumbV = Image::loadPlatformResource("/ScrollbarTheme/thumbV");
+        if (!thumbV->isNull()) {
+            static RefPtr<WebCore::Image> thumbVU = Image::loadPlatformResource("/ScrollbarTheme/thumbVU");
+            static RefPtr<WebCore::Image> thumbVD = Image::loadPlatformResource("/ScrollbarTheme/thumbVD");
+            IntPoint startPos(rect.location());
+            IntPoint endPos(rect.x(), rect.bottom() - thumbVD->height());
+            IntRect destRect(rect.x(), rect.y() + thumbVU->height(), rect.width(), rect.height() - thumbVU->height() - thumbVD->height());
+
+            context->drawImage(thumbVU.get(), startPos);
+            context->drawTiledImage(thumbV.get(), destRect, IntPoint(0, 0), IntSize(thumbV->width(), thumbV->height()));
+            context->drawImage(thumbVD.get(), endPos);
+        } else {
+            context->drawRect(rect);
+            context->fillRect(IntRect(rect.x() + 1, rect.y() + 1, rect.width() - 2, rect.height() - 2), Color::gray);
+        }
+    }
+    context->restore();
+}
+
+
+void ScrollbarThemeBal::paintTrackBackground(GraphicsContext* context, Scrollbar* scrollbar, const IntRect& rect)
+{
+    // Just assume a forward track part.  We only paint the track as a single piece when there is no thumb.
+    if (!hasThumb(scrollbar))
+        paintTrackPiece(context, scrollbar, rect, ForwardTrackPart);
+}
+
+bool ScrollbarThemeBal::invalidateOnMouseEnterExit()
+{
+    return false;
+}
+
+void ScrollbarThemeBal::themeChanged()
+{
+}
+
+bool ScrollbarThemeBal::shouldCenterOnThumb(Scrollbar*, const PlatformMouseEvent& evt)
+{
+    return evt.shiftKey() && evt.button() == LeftButton;
+}
+
+void ScrollbarThemeBal::paintTrackPiece(GraphicsContext* context, Scrollbar* scrollbar, const IntRect& rect, ScrollbarPart partType)
+{
+    context->save();
+
+    static RefPtr<WebCore::Image> bg = Image::loadPlatformResource("/ScrollbarTheme/bg");
+    if (!bg->isNull()) {
+        if (scrollbar->orientation() == HorizontalScrollbar) {
+            static RefPtr<WebCore::Image> bgh = Image::loadPlatformResource("/ScrollbarTheme/bgh");
+            IntRect destRect(rect.x() - 1, rect.y(), rect.width() + 2, rect.height());
+            context->drawTiledImage(bgh.get(), destRect, IntPoint(0, 0), IntSize(bgh->width(), bgh->height()));
+        } else {
+            IntRect destRect(rect.x(), rect.y() - 1, rect.width(), rect.height() + 2 );
+            context->drawTiledImage(bg.get(), destRect, IntPoint(0, 0), IntSize(bg->width(), bg->height()));
+        }
+    } else {
+        context->fillRect(rect, Color::white);
+        if (scrollbar->orientation() == HorizontalScrollbar)
+            context->drawLine(IntPoint(rect.x(), (rect.bottom() + rect.y()) / 2), IntPoint(rect.right(), (rect.bottom() + rect.y()) / 2));
+        else
+            context->drawLine(IntPoint((rect.right() + rect.x()) / 2, rect.y()), IntPoint((rect.right() + rect.x()) / 2, rect.bottom()));
+    }
+    context->restore();
+}
+
+
+}
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCScrollbarThemeAROS.h OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCScrollbarThemeAROS.h
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCScrollbarThemeAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCScrollbarThemeAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,61 @@
+/*
+ * Copyright (C) 2008 Apple Inc. All Rights Reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
+ */
+
+#ifndef ScrollbarThemeBal_h
+#define ScrollbarThemeBal_h
+
+#include "ScrollbarThemeComposite.h"
+
+namespace WebCore {
+
+class ScrollbarThemeBal : public ScrollbarThemeComposite {
+public:
+    ScrollbarThemeBal() {};
+    virtual ~ScrollbarThemeBal();
+
+    virtual int scrollbarThickness(ScrollbarControlSize = RegularScrollbar);
+
+    virtual void themeChanged();
+    
+    virtual bool invalidateOnMouseEnterExit();
+    
+protected:
+    virtual bool hasButtons(Scrollbar*) { return true; }
+    virtual bool hasThumb(Scrollbar*);
+
+    virtual IntRect backButtonRect(Scrollbar*, ScrollbarPart, bool painting = false);
+    virtual IntRect forwardButtonRect(Scrollbar*, ScrollbarPart, bool painting = false);
+    virtual IntRect trackRect(Scrollbar*, bool painting = false);
+
+    virtual bool shouldCenterOnThumb(Scrollbar*, const PlatformMouseEvent&);
+
+    virtual void paintTrackBackground(GraphicsContext*, Scrollbar*, const IntRect&);
+    virtual void paintTrackPiece(GraphicsContext*, Scrollbar*, const IntRect&, ScrollbarPart);
+    virtual void paintButton(GraphicsContext*, Scrollbar*, const IntRect&, ScrollbarPart);
+    virtual void paintThumb(GraphicsContext*, Scrollbar*, const IntRect&);
+};
+
+}
+#endif
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCScrollViewAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCScrollViewAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCScrollViewAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCScrollViewAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,47 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#include "config.h"
+#include "ScrollView.h"
+
+#include "FloatRect.h"
+#include "GraphicsContext.h"
+#include "HostWindow.h"
+#include "IntRect.h"
+#include "NotImplemented.h"
+#include "PlatformMouseEvent.h"
+#include "PlatformWheelEvent.h"
+
+namespace WebCore {
+
+void ScrollView::setBalAdjustments(BalAdjustment* hadj, BalAdjustment* vadj)
+{
+}
+
+} // Namespace WebCore
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCScrollViewAROS.h OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCScrollViewAROS.h
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCScrollViewAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCScrollViewAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,300 @@
+/*
+ * Copyright (C) 2004, 2006, 2007, 2008 Apple Inc. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
+ */
+
+#ifndef ScrollView_h
+#define ScrollView_h
+
+#include "IntRect.h"
+#include "Scrollbar.h"
+#include "ScrollbarClient.h"
+#include "ScrollTypes.h"
+#include "Widget.h"
+
+#include <wtf/HashSet.h>
+#include "BALBase.h"
+
+namespace WebCore {
+
+class PlatformWheelEvent;
+class Scrollbar;
+class HostWindow;
+
+class ScrollView : public Widget, public ScrollbarClient {
+public:
+    ~ScrollView();
+
+    // ScrollbarClient method.  FrameView overrides the other two.
+    virtual void valueChanged(Scrollbar*);
+    
+    // The window thats hosts the ScrollView.  The ScrollView will communicate scrolls and repaints to the
+    // host window in the window's coordinate space.
+    virtual HostWindow* hostWindow() const = 0;
+
+    // Returns a clip rect in host window coordinates.  Used to clip the blit on a scroll.
+    virtual IntRect windowClipRect(bool clipToContents = true) const = 0;
+
+    // Methods for child manipulation and inspection.
+    const HashSet<RefPtr<Widget> >* children() const { return &m_children; }
+    void addChild(PassRefPtr<Widget>);
+    void removeChild(Widget*);
+
+    // If the scroll view does not use a native widget, then it will have cross-platform Scrollbars.  These methods
+    // can be used to obtain those scrollbars.
+    Scrollbar* horizontalScrollbar() const { return m_horizontalScrollbar.get(); }
+    Scrollbar* verticalScrollbar() const { return m_verticalScrollbar.get(); }
+    bool isScrollViewScrollbar(const Widget* child) const { return horizontalScrollbar() == child || verticalScrollbar() == child; }
+
+    // Methods for setting and retrieving the scrolling mode in each axis (horizontal/vertical).  The mode has values of
+    // AlwaysOff, AlwaysOn, and Auto.  AlwaysOff means never show a scrollbar, AlwaysOn means always show a scrollbar.
+    // Auto means show a scrollbar only when one is needed.
+    // Note that for platforms with native widgets, these modes are considered advisory.  In other words the underlying native
+    // widget may choose not to honor the requested modes.
+    void setScrollbarModes(ScrollbarMode horizontalMode, ScrollbarMode verticalMode);
+    void setHorizontalScrollbarMode(ScrollbarMode mode) { setScrollbarModes(mode, verticalScrollbarMode()); }
+    void setVerticalScrollbarMode(ScrollbarMode mode) { setScrollbarModes(horizontalScrollbarMode(), mode); }
+    void scrollbarModes(ScrollbarMode& horizontalMode, ScrollbarMode& verticalMode) const;
+    ScrollbarMode horizontalScrollbarMode() const { ScrollbarMode horizontal, vertical; scrollbarModes(horizontal, vertical); return horizontal; }
+    ScrollbarMode verticalScrollbarMode() const { ScrollbarMode horizontal, vertical; scrollbarModes(horizontal, vertical); return vertical; }
+    virtual void setCanHaveScrollbars(bool flag);
+    bool canHaveScrollbars() const { return horizontalScrollbarMode() != ScrollbarAlwaysOff || verticalScrollbarMode() != ScrollbarAlwaysOff; }
+
+    // Overridden by FrameView to create custom CSS scrollbars if applicable.
+    virtual PassRefPtr<Scrollbar> createScrollbar(ScrollbarOrientation);
+
+    // If the prohibits scrolling flag is set, then all scrolling in the view (even programmatic scrolling) is turned off.
+    void setProhibitsScrolling(bool b) { m_prohibitsScrolling = b; }
+    bool prohibitsScrolling() const { return m_prohibitsScrolling; }
+
+    // Whether or not a scroll view will blit visible contents when it is scrolled.  Blitting is disabled in situations
+    // where it would cause rendering glitches (such as with fixed backgrounds or when the view is partially transparent).
+    void setCanBlitOnScroll(bool);
+    bool canBlitOnScroll() const;
+
+    // The visible content rect has a location that is the scrolled offset of the document. The width and height are the viewport width
+    // and height.  By default the scrollbars themselves are excluded from this rectangle, but an optional boolean argument allows them to be
+    // included.
+    IntRect visibleContentRect(bool includeScrollbars = false) const;
+    int visibleWidth() const { return visibleContentRect().width(); }
+    int visibleHeight() const { return visibleContentRect().height(); }
+
+    // Methods for getting/setting the size webkit should use to layout the contents.  By default this is the same as the visible
+    // content size.  Explicitly setting a layout size value will cause webkit to layout the contents using this size instead.
+    int layoutWidth() const;
+    int layoutHeight() const;
+    IntSize fixedLayoutSize() const;
+    void setFixedLayoutSize(const IntSize&);
+    bool useFixedLayout() const;
+    void setUseFixedLayout(bool enable);
+    
+    // Methods for getting/setting the size of the document contained inside the ScrollView (as an IntSize or as individual width and height
+    // values).
+    IntSize contentsSize() const; // Always at least as big as the visibleWidth()/visibleHeight().
+    int contentsWidth() const { return contentsSize().width(); }
+    int contentsHeight() const { return contentsSize().height(); }
+    virtual void setContentsSize(const IntSize&);
+   
+    // Methods for querying the current scrolled position (both as a point, a size, or as individual X and Y values).
+    IntPoint scrollPosition() const { return visibleContentRect().location(); }
+    IntSize scrollOffset() const { return visibleContentRect().location() - IntPoint(); } // Gets the scrolled position as an IntSize. Convenient for adding to other sizes.
+    IntPoint maximumScrollPosition() const; // The maximum position we can be scrolled to.
+    int scrollX() const { return scrollPosition().x(); }
+    int scrollY() const { return scrollPosition().y(); }
+    
+    // Methods for scrolling the view.  setScrollPosition is the only method that really scrolls the view.  The other two methods are helper functions
+    // that ultimately end up calling setScrollPosition.
+    void setScrollPosition(const IntPoint&);
+    void scrollBy(const IntSize& s) { return setScrollPosition(scrollPosition() + s); }
+    void scrollRectIntoViewRecursively(const IntRect&);
+
+    // This method scrolls by lines, pages or pixels.
+    bool scroll(ScrollDirection, ScrollGranularity);
+        
+    // Scroll the actual contents of the view (either blitting or invalidating as needed).
+    void scrollContents(const IntSize& scrollDelta);
+
+    // This gives us a means of blocking painting on our scrollbars until the first layout has occurred.
+    void setScrollbarsSuppressed(bool suppressed, bool repaintOnUnsuppress = false);
+    bool scrollbarsSuppressed() const { return m_scrollbarsSuppressed; }
+
+    // Event coordinates are assumed to be in the coordinate space of a window that contains
+    // the entire widget hierarchy. It is up to the platform to decide what the precise definition
+    // of containing window is. (For example on Mac it is the containing NSWindow.)
+    IntPoint windowToContents(const IntPoint&) const;
+    IntPoint contentsToWindow(const IntPoint&) const;
+    IntRect windowToContents(const IntRect&) const;
+    IntRect contentsToWindow(const IntRect&) const;
+
+    // Methods for converting to and from screen coordinates.
+    IntRect contentsToScreen(const IntRect&) const;
+    IntPoint screenToContents(const IntPoint&) const;
+
+    // The purpose of this method is to answer whether or not the scroll view is currently visible.  Animations and painting updates can be suspended if
+    // we know that we are either not in a window right now or if that window is not visible.
+    bool isOffscreen() const;
+    
+    // These methods are used to enable scrollbars to avoid window resizer controls that overlap the scroll view.  This happens on Mac
+    // for example.
+    virtual IntRect windowResizerRect() const { return IntRect(); }
+    bool containsScrollbarsAvoidingResizer() const;
+    void adjustScrollbarsAvoidingResizerCount(int overlapDelta);
+    virtual void setParent(ScrollView*); // Overridden to update the overlapping scrollbar count.
+
+    // Called when our frame rect changes (or the rect/scroll position of an ancestor changes).
+    virtual void frameRectsChanged();
+    
+    // Widget override to update our scrollbars and notify our contents of the resize.
+    virtual void setFrameRect(const IntRect&);
+
+    // For platforms that need to hit test scrollbars from within the engine's event handlers (like Win32).
+    Scrollbar* scrollbarAtPoint(const IntPoint& windowPoint);
+
+    // This method exists for scrollviews that need to handle wheel events manually.
+    // On Mac the underlying NSScrollView just does the scrolling, but on other platforms
+    // (like Windows), we need this method in order to do the scroll ourselves.
+    void wheelEvent(PlatformWheelEvent&);
+
+    IntPoint convertChildToSelf(const Widget* child, const IntPoint& point) const
+    {
+        IntPoint newPoint = point;
+        if (!isScrollViewScrollbar(child))
+            newPoint = point - scrollOffset();
+        newPoint.move(child->x(), child->y());
+        return newPoint;
+    }
+
+    IntPoint convertSelfToChild(const Widget* child, const IntPoint& point) const
+    {
+        IntPoint newPoint = point;
+        if (!isScrollViewScrollbar(child))
+            newPoint = point + scrollOffset();
+        newPoint.move(-child->x(), -child->y());
+        return newPoint;
+    }
+    
+    // Widget override.  Handles painting of the contents of the view as well as the scrollbars.
+    virtual void paint(GraphicsContext*, const IntRect&);
+
+    // Widget overrides to ensure that our children's visibility status is kept up to date when we get shown and hidden.
+    virtual void show();
+    virtual void hide();
+    virtual void setParentVisible(bool);
+    
+    // Pan scrolling.
+    static const int noPanScrollRadius = 15;
+    void addPanScrollIcon(const IntPoint&);
+    void removePanScrollIcon();
+
+    virtual bool isPointInScrollbarCorner(const IntPoint&);
+    virtual bool scrollbarCornerPresent() const;
+
+    virtual IntRect convertFromScrollbarToContainingView(const Scrollbar*, const IntRect&) const;
+    virtual IntRect convertFromContainingViewToScrollbar(const Scrollbar*, const IntRect&) const;
+    virtual IntPoint convertFromScrollbarToContainingView(const Scrollbar*, const IntPoint&) const;
+    virtual IntPoint convertFromContainingViewToScrollbar(const Scrollbar*, const IntPoint&) const;
+
+protected:
+    ScrollView();
+
+    virtual void repaintContentRectangle(const IntRect&, bool now = false);
+    virtual void paintContents(GraphicsContext*, const IntRect& damageRect) = 0;
+ 
+    virtual void contentsResized() = 0;
+    virtual void visibleContentsResized() = 0;
+
+    // These methods are used to create/destroy scrollbars.
+    void setHasHorizontalScrollbar(bool);
+    void setHasVerticalScrollbar(bool);
+
+    IntRect scrollCornerRect() const;
+    virtual void updateScrollCorner();
+    virtual void paintScrollCorner(GraphicsContext*, const IntRect& cornerRect);
+
+private:
+    RefPtr<Scrollbar> m_horizontalScrollbar;
+    RefPtr<Scrollbar> m_verticalScrollbar;
+    ScrollbarMode m_horizontalScrollbarMode;
+    ScrollbarMode m_verticalScrollbarMode;
+    bool m_prohibitsScrolling;
+
+    HashSet<RefPtr<Widget> > m_children;
+
+    // This bool is unused on Mac OS because we directly ask the platform widget
+    // whether it is safe to blit on scroll.
+    bool m_canBlitOnScroll;
+    IntSize m_scrollOffset; // FIXME: Would rather store this as a position, but we will wait to make this change until more code is shared.
+    IntSize m_fixedLayoutSize;
+    IntSize m_contentsSize;
+
+    int m_scrollbarsAvoidingResizer;
+    bool m_scrollbarsSuppressed;
+    
+    bool m_inUpdateScrollbars;
+    unsigned m_updateScrollbarsPass;
+
+    IntPoint m_panScrollIconPoint;
+    bool m_drawPanScrollIcon;
+    bool m_useFixedLayout;
+
+    void init();
+    void destroy();
+
+    // Called to update the scrollbars to accurately reflect the state of the view.
+    void updateScrollbars(const IntSize& desiredOffset);
+
+    void platformInit();
+    void platformDestroy();
+    void platformAddChild(Widget*);
+    void platformRemoveChild(Widget*);
+    void platformSetScrollbarModes();
+    void platformScrollbarModes(ScrollbarMode& horizontal, ScrollbarMode& vertical) const;
+    void platformSetCanBlitOnScroll(bool);
+    bool platformCanBlitOnScroll() const;
+    IntRect platformVisibleContentRect(bool includeScrollbars) const;
+    IntSize platformContentsSize() const;
+    void platformSetContentsSize();
+    IntRect platformContentsToScreen(const IntRect&) const;
+    IntPoint platformScreenToContents(const IntPoint&) const;
+    void platformSetScrollPosition(const IntPoint&);
+    bool platformScroll(ScrollDirection, ScrollGranularity);
+    void platformSetScrollbarsSuppressed(bool repaintOnUnsuppress);
+    void platformRepaintContentRectangle(const IntRect&, bool now);
+    bool platformIsOffscreen() const;
+    bool platformHandleHorizontalAdjustment(const IntSize&);
+    bool platformHandleVerticalAdjustment(const IntSize&);
+    bool platformHasHorizontalAdjustment() const;
+    bool platformHasVerticalAdjustment() const;
+    bool rootPreventsBlitting() const { return false; }
+
+public:
+    void setBalAdjustments(BalAdjustment* hadj, BalAdjustment* vadj);
+    BalAdjustment* m_horizontalAdjustment;
+    BalAdjustment* m_verticalAdjustment;
+    void setScrollOffset(const IntSize& offset) { m_scrollOffset = offset; }
+
+}; // class ScrollView
+
+} // namespace WebCore
+
+#endif // ScrollView_h
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCSearchPopupMenuAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCSearchPopupMenuAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCSearchPopupMenuAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCSearchPopupMenuAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,60 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#include "config.h"
+#include "Logging.h"
+#include "SearchPopupMenu.h"
+
+#include <cstdio>
+
+namespace WebCore {
+
+SearchPopupMenu::SearchPopupMenu(PopupMenuClient* client)
+    : PopupMenu(client)
+{
+    NotImplemented();
+}
+
+void SearchPopupMenu::saveRecentSearches(const AtomicString&, const Vector<String>&)
+{
+    NotImplemented();
+}
+
+void SearchPopupMenu::loadRecentSearches(const AtomicString&, Vector<String>&)
+{
+    NotImplemented();
+}
+
+bool SearchPopupMenu::enabled()
+{
+    NotImplemented();
+    return true;
+}
+
+}
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCSearchPopupMenuAROS.h OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCSearchPopupMenuAROS.h
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCSearchPopupMenuAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCSearchPopupMenuAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,58 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#ifndef SearchPopupMenu_h
+#define SearchPopupMenu_h
+
+#include "PopupMenu.h"
+#include <wtf/Forward.h>
+#include <wtf/Vector.h>
+#include "BALBase.h"
+
+namespace WebCore {
+
+class AtomicString;
+
+class SearchPopupMenu : public PopupMenu {
+public:
+    static PassRefPtr<SearchPopupMenu> create(PopupMenuClient* client) { return new SearchPopupMenu(client); }
+
+    void saveRecentSearches(const AtomicString& name, const Vector<String>& searchItems);
+    void loadRecentSearches(const AtomicString& name, Vector<String>& searchItems);
+
+    bool enabled();
+    
+protected:
+    SearchPopupMenu(PopupMenuClient* client);
+
+};
+
+}
+
+#endif
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/BCWidgetAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCWidgetAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/BCWidgetAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/BCWidgetAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,129 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#include "config.h"
+#include "Widget.h"
+
+#include "Cursor.h"
+#include "FrameView.h"
+#include "GraphicsContext.h"
+#include "IntRect.h"
+#include "Logging.h"
+#include "RenderObject.h"
+
+
+namespace WebCore {
+
+typedef void BalCursor;
+
+//TODO : redo the WidgetPrivate on AROS
+class WidgetPrivate {
+public:
+	BalCursor* cursor;
+};
+
+Widget::Widget(PlatformWidget widget)
+{
+    init(widget);
+}
+
+Widget::~Widget()
+{
+    ASSERT(!parent());
+}
+
+void Widget::setFocus()
+{
+    NotImplemented();
+}
+
+void Widget::setCursor(const Cursor& cursor)
+{
+    NotImplemented();
+}
+
+void Widget::show()
+{
+    NotImplemented();
+}
+
+void Widget::hide()
+{
+    NotImplemented();
+}
+
+void Widget::paint(GraphicsContext* context, const IntRect &r)
+{
+    if (!platformWidget())
+        return;
+
+    if (!context->balExposeEvent())
+        return;
+    
+/*    printf("Widget::paint(\n");
+    BalWidget* widget = platformWidget();
+    if(widget)
+        DoMethod(widget, MUIM_WebView_Expose); */
+}
+
+void Widget::setIsSelected(bool)
+{
+    NotImplemented();
+}
+
+void Widget::invalidateRect(const IntRect& rect)
+{
+/*    if (!parent()) {
+        if (isFrameView())
+            static_cast<FrameView*>(this)->addToDirtyRegion(rect);
+        return;
+    }
+
+    // Get the root widget.
+    ScrollView* outermostView = parent();
+    while (outermostView && outermostView->parent())
+        outermostView = outermostView->parent();
+    if (!outermostView)
+        return;
+
+    IntRect windowRect = convertToContainingWindow(rect);
+    outermostView->addToDirtyRegion(windowRect);*/
+}
+
+IntRect Widget::frameRect() const
+{
+    return m_frame;
+}
+
+void Widget::setFrameRect(const IntRect& rect)
+{
+	m_frame = rect;
+}
+
+}
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/exceptions.txt OWB-r1097.aros/BAL/Widgets/WebCore/AROS/exceptions.txt
--- OWB-r1097/BAL/Widgets/WebCore/AROS/exceptions.txt	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/exceptions.txt	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,4 @@
+BCClipboardAROS.h ClipboardAROS.h
+BCRenderThemeAROS.h RenderThemeAROS.h
+BCScrollbarThemeAROS.h ScrollbarThemeAROS.h
+PasteboardHelperAROS.h PasteboardHelperAROS.h
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/PasteboardHelperAROS.cpp OWB-r1097.aros/BAL/Widgets/WebCore/AROS/PasteboardHelperAROS.cpp
--- OWB-r1097/BAL/Widgets/WebCore/AROS/PasteboardHelperAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/PasteboardHelperAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,54 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "Frame.h"
+#include "PasteboardHelperAROS.h"
+
+#include <cstdio>
+
+using namespace WebCore;
+
+namespace WebKit{
+
+BalClipboard* PasteboardHelperBal::getClipboard(Frame* frame) const 
+{
+    return 0;
+}
+
+BalTargetList* PasteboardHelperBal::getCopyTargetList(Frame* frame) const 
+{
+    return 0;
+}
+
+BalTargetList* PasteboardHelperBal::getPasteTargetList(Frame* frame) const 
+{
+    return 0;
+}
+
+}
diff -ruN OWB-r1097/BAL/Widgets/WebCore/AROS/PasteboardHelperAROS.h OWB-r1097.aros/BAL/Widgets/WebCore/AROS/PasteboardHelperAROS.h
--- OWB-r1097/BAL/Widgets/WebCore/AROS/PasteboardHelperAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/AROS/PasteboardHelperAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,57 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+#ifndef PasteboardHelperAROS_h
+#define PasteboardHelperAROS_h
+
+/*
+ * FIXME: this is for WebCore support and must be removed once
+ * a better solution is found
+ */
+
+#include "Frame.h"
+#include "PasteboardHelper.h"
+
+#include "BALBase.h"
+
+using namespace WebCore;
+
+namespace WebKit {
+
+class PasteboardHelperBal : public PasteboardHelper {
+public:
+    PasteboardHelperBal() { }
+    virtual BalClipboard* getClipboard(Frame*) const;
+    virtual BalTargetList* getCopyTargetList(Frame*) const;
+    virtual BalTargetList* getPasteTargetList(Frame*) const;
+};
+
+}
+
+#endif // PasteboardHelperAROS_h
diff -ruN OWB-r1097/BAL/Widgets/WebCore/CMakeLists.txt OWB-r1097.aros/BAL/Widgets/WebCore/CMakeLists.txt
--- OWB-r1097/BAL/Widgets/WebCore/CMakeLists.txt	2009-10-06 09:13:04.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -31,4 +31,10 @@
     aux_source_directory(${WIDGETS_DIR}/SDL WEBCORE_SRC)
 endif(USE_GRAPHICS_SDL)
 
+if(USE_GRAPHICS_AROS)
+    create_include_link(${WIDGETS_DIR}/AROS BAL)
+
+    aux_source_directory(${WIDGETS_DIR}/AROS WEBCORE_SRC)
+endif(USE_GRAPHICS_AROS)
+
 aux_source_directory(${WIDGETS_DIR}/WK WEBCORE_SRC)
diff -ruN OWB-r1097/BAL/Widgets/WebCore/WK/BCContextMenuItemWK.h OWB-r1097.aros/BAL/Widgets/WebCore/WK/BCContextMenuItemWK.h
--- OWB-r1097/BAL/Widgets/WebCore/WK/BCContextMenuItemWK.h	2009-09-18 16:34:57.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/WK/BCContextMenuItemWK.h	2017-04-01 14:57:02.745938516 +0100
@@ -59,12 +59,21 @@
     enum ContextMenuAction {
         ContextMenuItemTagNoAction=0, // This item is not actually in WebUIDelegate.h
         ContextMenuItemTagOpenLinkInNewWindow=1,
+#if PLATFORM(AROS)
+        ContextMenuItemTagOpenLinkInNewTab,
+#endif
         ContextMenuItemTagDownloadLinkToDisk,
         ContextMenuItemTagCopyLinkToClipboard,
         ContextMenuItemTagOpenImageInNewWindow,
+#if PLATFORM(AROS)
+        ContextMenuItemTagOpenImageInNewTab,
+#endif
         ContextMenuItemTagDownloadImageToDisk,
         ContextMenuItemTagCopyImageToClipboard,
         ContextMenuItemTagOpenFrameInNewWindow,
+#if PLATFORM(AROS)
+        ContextMenuItemTagOpenFrameInNewTab,
+#endif
         ContextMenuItemTagCopy,
         ContextMenuItemTagGoBack,
         ContextMenuItemTagGoForward,
@@ -208,6 +217,23 @@
     };
 #elif PLATFORM(HAIKU)
     typedef BMenuItem* PlatformMenuItemDescription;
+#elif PLATFORM(AROS)
+    struct PlatformMenuItemDescription {
+        PlatformMenuItemDescription()
+            : type(ActionType)
+            , action(ContextMenuItemTagNoAction)
+            , subMenu(0)
+            , checked(false)
+            , enabled(true)
+        {}
+
+        ContextMenuItemType type;
+        ContextMenuAction action;
+        String title;
+        Object* subMenu;
+        bool checked;
+        bool enabled;
+    };
 #else
     typedef void* PlatformMenuItemDescription;
 #endif
@@ -219,6 +245,8 @@
         ContextMenuItem(ContextMenuItemType type, ContextMenuAction action, const String& title, ContextMenu* subMenu = 0);
 #if PLATFORM(GTK)
         ContextMenuItem(GtkMenuItem*);
+#elif PLATFORM(AROS)
+        ContextMenuItem(Object*);
 #endif
         ~ContextMenuItem();
 
@@ -244,6 +272,8 @@
         // FIXME: Do we need a keyboard accelerator here?
 #if PLATFORM(GTK)
         static GtkMenuItem* createNativeMenuItem(const PlatformMenuItemDescription&);
+#elif PLATFORM(AROS)
+        static Object* createNativeMenuItem(const PlatformMenuItemDescription&);
 #endif
 
     private:
diff -ruN OWB-r1097/BAL/Widgets/WebCore/WK/BCContextMenuWK.cpp OWB-r1097.aros/BAL/Widgets/WebCore/WK/BCContextMenuWK.cpp
--- OWB-r1097/BAL/Widgets/WebCore/WK/BCContextMenuWK.cpp	2009-10-05 11:36:03.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/WK/BCContextMenuWK.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -259,12 +259,20 @@
     ContextMenuItem OpenLinkItem(ActionType, ContextMenuItemTagOpenLink, contextMenuItemTagOpenLink());
     ContextMenuItem OpenLinkInNewWindowItem(ActionType, ContextMenuItemTagOpenLinkInNewWindow, 
         contextMenuItemTagOpenLinkInNewWindow());
+#if PLATFORM(AROS)
+    ContextMenuItem OpenLinkInNewTabItem(ActionType, ContextMenuItemTagOpenLinkInNewTab, 
+        contextMenuItemTagOpenLinkInNewTab());
+#endif
     ContextMenuItem DownloadFileItem(ActionType, ContextMenuItemTagDownloadLinkToDisk, 
         contextMenuItemTagDownloadLinkToDisk());
     ContextMenuItem CopyLinkItem(ActionType, ContextMenuItemTagCopyLinkToClipboard, 
         contextMenuItemTagCopyLinkToClipboard());
     ContextMenuItem OpenImageInNewWindowItem(ActionType, ContextMenuItemTagOpenImageInNewWindow, 
         contextMenuItemTagOpenImageInNewWindow());
+#if PLATFORM(AROS)
+    ContextMenuItem OpenImageInNewTabItem(ActionType, ContextMenuItemTagOpenImageInNewTab, 
+        contextMenuItemTagOpenImageInNewTab());
+#endif
     ContextMenuItem DownloadImageItem(ActionType, ContextMenuItemTagDownloadImageToDisk, 
         contextMenuItemTagDownloadImageToDisk());
     ContextMenuItem CopyImageItem(ActionType, ContextMenuItemTagCopyImageToClipboard, 
@@ -281,8 +289,12 @@
     ContextMenuItem ForwardItem(ActionType, ContextMenuItemTagGoForward,  contextMenuItemTagGoForward());
     ContextMenuItem StopItem(ActionType, ContextMenuItemTagStop, contextMenuItemTagStop());
     ContextMenuItem ReloadItem(ActionType, ContextMenuItemTagReload, contextMenuItemTagReload());
-    ContextMenuItem OpenFrameItem(ActionType, ContextMenuItemTagOpenFrameInNewWindow, 
+    ContextMenuItem OpenFrameInNewWindowItem(ActionType, ContextMenuItemTagOpenFrameInNewWindow, 
         contextMenuItemTagOpenFrameInNewWindow());
+#if PLATFORM(AROS)
+    ContextMenuItem OpenFrameInNewTabItem(ActionType, ContextMenuItemTagOpenFrameInNewTab, 
+        contextMenuItemTagOpenFrameInNewTab());
+#endif
     ContextMenuItem NoGuessesItem(ActionType, ContextMenuItemTagNoGuessesFound, 
         contextMenuItemTagNoGuessesFound());
     ContextMenuItem IgnoreSpellingItem(ActionType, ContextMenuItemTagIgnoreSpelling, 
@@ -318,6 +330,9 @@
             if (loader->canHandleRequest(ResourceRequest(linkURL))) {
                 appendItem(OpenLinkItem);
                 appendItem(OpenLinkInNewWindowItem);
+#if PLATFORM(AROS)
+                appendItem(OpenLinkInNewTabItem);
+#endif
                 appendItem(DownloadFileItem);
             }
             appendItem(CopyLinkItem);
@@ -329,6 +344,9 @@
                 appendItem(*separatorItem());
 
             appendItem(OpenImageInNewWindowItem);
+#if PLATFORM(AROS)
+            appendItem(OpenImageInNewTabItem);
+#endif
             appendItem(DownloadImageItem);
             if (imageURL.isLocalFile() || m_hitTestResult.image())
                 appendItem(CopyImageItem);
@@ -376,7 +394,12 @@
 #endif
 
                 if (frame->page() && frame != frame->page()->mainFrame())
-                    appendItem(OpenFrameItem);
+		{
+                    appendItem(OpenFrameInNewWindowItem);
+#if PLATFORM(AROS)
+                    appendItem(OpenFrameInNewTabItem);
+#endif
+		}
             }
         }
     } else { // Make an editing context menu
@@ -434,6 +457,9 @@
             if (loader->canHandleRequest(ResourceRequest(linkURL))) {
                 appendItem(OpenLinkItem);
                 appendItem(OpenLinkInNewWindowItem);
+#if PLATFORM(AROS)
+                appendItem(OpenLinkInNewTabItem);
+#endif
                 appendItem(DownloadFileItem);
             }
             appendItem(CopyLinkItem);
@@ -746,12 +772,21 @@
 #endif
         case ContextMenuItemTagNoAction:
         case ContextMenuItemTagOpenLinkInNewWindow:
+#if PLATFORM(AROS)
+        case ContextMenuItemTagOpenLinkInNewTab:
+#endif
         case ContextMenuItemTagDownloadLinkToDisk:
         case ContextMenuItemTagCopyLinkToClipboard:
         case ContextMenuItemTagOpenImageInNewWindow:
+#if PLATFORM(AROS)
+        case ContextMenuItemTagOpenImageInNewTab:
+#endif
         case ContextMenuItemTagDownloadImageToDisk:
         case ContextMenuItemTagCopyImageToClipboard:
         case ContextMenuItemTagOpenFrameInNewWindow:
+#if PLATFORM(AROS)
+        case ContextMenuItemTagOpenFrameInNewTab:
+#endif
         case ContextMenuItemTagSpellingGuess:
         case ContextMenuItemTagOther:
         case ContextMenuItemTagSearchInSpotlight:
diff -ruN OWB-r1097/BAL/Widgets/WebCore/WK/BCContextMenuWK.h OWB-r1097.aros/BAL/Widgets/WebCore/WK/BCContextMenuWK.h
--- OWB-r1097/BAL/Widgets/WebCore/WK/BCContextMenuWK.h	2009-07-15 19:00:34.000000000 +0100
+++ OWB-r1097.aros/BAL/Widgets/WebCore/WK/BCContextMenuWK.h	2017-04-01 14:57:02.745938516 +0100
@@ -36,6 +36,10 @@
 #include <wtf/RetainPtr.h>
 #elif PLATFORM(QT)
 #include <QMenu>
+#elif PLATFORM(AROS)
+extern "C" {
+#include <utility/hooks.h>
+}
 #endif
 
 namespace WebCore {
@@ -81,6 +85,9 @@
 #else
         PlatformMenuDescription m_platformDescription;
 #endif
+#if PLATFORM(AROS)
+        struct Hook menuItemActivatedHook;
+#endif
     };
 
 }
diff -ruN OWB-r1097/Base/AROS/BALTypeAROS.h OWB-r1097.aros/Base/AROS/BALTypeAROS.h
--- OWB-r1097/Base/AROS/BALTypeAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/Base/AROS/BALTypeAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,82 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef BALType_h
+#define BALType_h
+
+struct SDL_Surface;
+struct SDL_Color;
+struct FT_FaceRec_;
+struct _FcPattern;
+
+namespace WebCore {
+    class FloatSize;
+}
+
+#include <exec/types.h>
+#ifndef __typedef_Object
+#   define __typedef_Object
+    typedef ULONG  Object;
+#endif
+
+typedef FT_FaceRec_ BalFontFace;
+typedef void BalFont;
+typedef struct _FcPattern BalPattern;
+typedef void BalScaledFont;
+typedef void BalDrawable;
+typedef SDL_Surface BalSurface;
+typedef Object BalMenuItem;
+typedef Object BalMenu;
+typedef void BalClipboard;
+typedef void BalTargetList;
+typedef void BalAdjustment;
+typedef void BalContainer;
+typedef void BalPixbuf;
+typedef SDL_Color BalColor;
+typedef struct _BalMatrix{double m11; double m12; double m13; double m14;
+                          double m21; double m22; double m23; double m24;
+                          double m31; double m32; double m33; double m34;
+                          double m41; double m42; double m43; double m44;} BalMatrix;
+
+
+typedef SDL_Surface PlatformGraphicsContext;
+typedef BalWidget* PlatformWidget;
+typedef void* PlatformPatternPtr;
+
+namespace WebCore {
+    typedef void* PlatformGradient;
+    typedef void* PlatformPath;
+    typedef void* PlatformCursor;
+    typedef void* DragImageRef;
+    typedef void* DragDataRef;
+    typedef unsigned short GlyphBufferGlyph;
+    typedef WebCore::FloatSize GlyphBufferAdvance;
+    typedef void* PlatformCursorHandle;
+}
+
+#endif
diff -ruN OWB-r1097/Base/BALBase.h OWB-r1097.aros/Base/BALBase.h
--- OWB-r1097/Base/BALBase.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/Base/BALBase.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,75 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef BALBase_h
+#define BALBase_h
+
+#include "owb-config.h"
+#include "Platform.h"
+#include "WebKitTypes.h"
+
+#ifdef NDEBUG
+#define supressNotImplementedWarning() true
+#else
+#define supressNotImplementedWarning() false
+#endif
+//#undef NotImplemented()
+#define NotImplemented() do { \
+        static bool havePrinted = false; \
+        if (!havePrinted && !supressNotImplementedWarning()) { \
+            WTFLogVerbose(__FILE__, __LINE__, WTF_PRETTY_FUNCTION, &LogNotYetImplemented, "UNIMPLEMENTED: "); \
+            havePrinted = true; \
+        } \
+    } while (0)
+
+#define BalNotImplemented() NotImplemented();
+
+#if PLATFORM(AMIGAOS4)
+#include "AmigaOS4/BALTypeAmigaOS4.h"
+#endif
+
+#if PLATFORM(SDL)
+#include "SDL/BALTypeSDL.h"
+#endif
+
+#if PLATFORM(AROS)
+#include "AROS/BALTypeAROS.h"
+#endif
+
+#if PLATFORM(GTK)
+#include "Gtk/BALTypeGtk.h"
+#endif
+
+#if PLATFORM()
+#include ""
+#endif
+
+class BALBase {
+};
+
+#endif
diff -ruN OWB-r1097/Base/BALBase.h.in OWB-r1097.aros/Base/BALBase.h.in
--- OWB-r1097/Base/BALBase.h.in	2009-03-24 14:43:00.000000000 +0000
+++ OWB-r1097.aros/Base/BALBase.h.in	2017-04-01 14:57:02.745938516 +0100
@@ -57,6 +57,10 @@
 #include "SDL/BALTypeSDL.h"
 #endif
 
+#if PLATFORM(AROS)
+#include "AROS/BALTypeAROS.h"
+#endif
+
 #if PLATFORM(GTK)
 #include "Gtk/BALTypeGtk.h"
 #endif
diff -ruN OWB-r1097/Base/NotImplemented.h OWB-r1097.aros/Base/NotImplemented.h
--- OWB-r1097/Base/NotImplemented.h	2009-01-16 14:33:31.000000000 +0000
+++ OWB-r1097.aros/Base/NotImplemented.h	2017-04-01 16:16:39.834701669 +0100
@@ -29,7 +29,8 @@
 #include "Logging.h"
 #include <Assertions.h>
 
-#if PLATFORM(GTK)
+#if !defined(supressNotImplementedWarning)
+#if PLATFORM(GTK) || PLATFORM(AROS)
     #define supressNotImplementedWarning() getenv("DISABLE_NI_WARNING")
 #elif PLATFORM(QT)
     #include <QByteArray>
@@ -37,6 +38,7 @@
 #else
     #define supressNotImplementedWarning() false
 #endif
+#endif
 
 #if defined(NDEBUG)
     #define notImplemented() ((void)0)
diff -ruN OWB-r1097/Base/owb-config.h OWB-r1097.aros/Base/owb-config.h
--- OWB-r1097/Base/owb-config.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/Base/owb-config.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,10 @@
+#ifndef OWB_CONFIG_H
+#define OWB_CONFIG_H
+
+#define BOOKMARKLET_INSTALL_PATH "PROGDIR:bookmarklet/"
+#define OWB_DATA "PROGDIR:config/"
+#define INSTALL_PREFIX "PROGDIR:"
+#define RESOURCE_PATH "PROGDIR:resources"
+
+#endif //OWB_CONFIG_H
+
diff -ruN OWB-r1097/Base/owb-config.h.in OWB-r1097.aros/Base/owb-config.h.in
--- OWB-r1097/Base/owb-config.h.in	2008-12-08 20:05:27.000000000 +0000
+++ OWB-r1097.aros/Base/owb-config.h.in	2017-04-01 14:57:02.745938516 +0100
@@ -1,10 +1,10 @@
 #ifndef OWB_CONFIG_H
 #define OWB_CONFIG_H
 
-#define BOOKMARKLET_INSTALL_PATH "${CMAKE_INSTALL_PREFIX}/share/owb/bookmarklet/"
-#define OWB_DATA "${WITH_OWB_CONFIG_DIR}"
-#define INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}"
-#define RESOURCE_PATH "${CMAKE_INSTALL_PREFIX}/share/webkit-owb/resources/"
+#define BOOKMARKLET_INSTALL_PATH "PROGDIR:bookmarklet/"
+#define OWB_DATA "PROGDIR:config/"
+#define INSTALL_PREFIX "PROGDIR:"
+#define RESOURCE_PATH "PROGDIR:resources"
 
 #endif //OWB_CONFIG_H
 
diff -ruN OWB-r1097/Base/WebKitTypes.h OWB-r1097.aros/Base/WebKitTypes.h
--- OWB-r1097/Base/WebKitTypes.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/Base/WebKitTypes.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,210 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef WebKitTypes_h
+#define WebKitTypes_h
+
+#include <WebKitDefines.h>
+
+#if PLATFORM(GTK)
+
+#include <gtk/gtk.h>
+
+typedef GtkWidget BalWidget;
+typedef struct _BalEventExpose{} BalEventExpose;
+typedef struct _BalResizeEvent{} BalResizeEvent;
+typedef struct _BalQuitEvent{} BalQuitEvent;
+typedef struct _BalUserEvent{} BalUserEvent;
+typedef struct _BalEventKey{} BalEventKey;
+typedef struct _BalEventButton{} BalEventButton;
+typedef struct _BalEventMotion{} BalEventMotion;
+typedef struct _BalEventScroll{} BalEventScroll;
+
+typedef GdkPoint BalPoint;
+typedef GdkRectangle BalRectangle;
+
+#elif PLATFORM(AMIGAOS4)
+
+#include <cairo.h>
+
+struct Window;
+struct Gadget;
+struct Hook;
+struct AppIcon;
+struct Node;
+struct List;
+class WebView;
+
+struct AmigaOWBWindow
+{
+    AmigaOWBWindow* next;
+    Window* window;
+    WebView* webView;
+    int offsetx, offsety;
+    int left, top, width, height;
+    int webViewWidth, webViewHeight;
+    _cairo* cr;
+    _cairo_surface* surface;
+    void *img_back, *img_forward, *img_stop,
+         *img_search, *img_home, *img_reload,
+         *img_iconify, *img_bookmark, *img_bookmarkadd;
+    Gadget *gad_toolbar, *gad_vbar, *gad_hbar,
+           *gad_url, *gad_fuelgauge, *gad_stop,
+           *gad_back, *gad_forward, *gad_iconify,
+           *gad_search, *gad_status, *gad_webview,
+           *gad_statuspage, *gad_hlayout, *gad_bookmark,
+           *gad_bookmarkadd, *gad_clicktab, *gad_vlayout;
+    Hook* backfill_hook;
+    char title[256];
+    char url[2000];
+    char search[500];
+    char statusBarText[256];
+    char toolTipText[256];
+    char statusToolTipText[512];
+    AppIcon* appicon;
+    void* curentCursor;
+    unsigned int fuelGaugeArgs[2];
+    const char* arexxPortName;
+    void* bookmark;
+    unsigned long* page;
+    List* clickTabList;
+    Node* clickTabNode;
+    bool expose;
+};
+
+typedef struct AmigaOWBWindow BalWidget;
+
+struct AmigaOWBResizeEvent
+{
+    int w, h;
+};
+
+typedef int BalEventExpose;
+typedef struct AmigaOWBResizeEvent BalResizeEvent;
+typedef int BalQuitEvent;
+typedef int BalUserEvent;
+typedef struct IntuiMessage BalEventKey;
+typedef struct IntuiMessage BalEventButton;
+typedef struct IntuiMessage BalEventMotion;
+typedef struct IntuiMessage BalEventScroll;
+
+typedef struct _BalPoint{
+    int x;
+    int y;
+} BalPoint;
+typedef struct _BalRectangle{
+    int x, y;
+    int w, h;
+} BalRectangle;
+
+#elif PLATFORM(QT)
+
+#include <QWidget>
+#include <QRect>
+#include <QPoint>
+#include <QMouseEvent>
+#include <QWheelEvent>
+#include <QKeyEvent>
+#include <QFocusEvent>
+#include <QEvent>
+
+typedef QWidget BalWidget;
+typedef QPaintEvent* BalEventExpose;
+typedef QResizeEvent* BalResizeEvent;
+typedef QEvent* BalQuitEvent;
+typedef struct _BalUserEvent{} BalUserEvent;
+typedef QKeyEvent* BalEventKey;
+typedef QMouseEvent* BalEventButton;
+typedef QMouseEvent* BalEventMotion;
+typedef QWheelEvent* BalEventScroll;
+
+typedef QPoint BalPoint;
+typedef QRect BalRectangle;
+
+#elif PLATFORM(SDL)
+
+#include <SDL.h>
+
+typedef SDL_Surface BalWidget;
+
+typedef struct SDL_ExposeEvent BalEventExpose;
+typedef struct SDL_ResizeEvent BalResizeEvent;
+typedef struct SDL_QuitEvent BalQuitEvent;
+typedef struct SDL_UserEvent BalUserEvent;
+typedef struct SDL_KeyboardEvent BalEventKey;
+typedef struct SDL_MouseButtonEvent BalEventButton;
+typedef struct SDL_MouseMotionEvent BalEventMotion;
+typedef struct SDL_MouseButtonEvent BalEventScroll;
+
+typedef struct _BalPoint{
+    int x;
+    int y;
+} BalPoint;
+typedef SDL_Rect BalRectangle;
+
+#elif PLATFORM(AROS)
+
+#include <SDL.h>
+
+#include <exec/types.h>
+#ifndef __typedef_Object
+#   define __typedef_Object
+    typedef ULONG  Object;
+#endif
+
+struct IntuiMessage;
+
+typedef Object BalWidget;
+
+typedef struct SDL_ExposeEvent BalEventExpose;
+typedef struct SDL_ResizeEvent BalResizeEvent;
+typedef struct SDL_QuitEvent BalQuitEvent;
+typedef struct SDL_UserEvent BalUserEvent;
+typedef struct IntuiMessage BalEventKey;
+typedef struct IntuiMessage BalEventButton;
+typedef struct IntuiMessage BalEventMotion;
+typedef struct IntuiMessage BalEventScroll;
+
+typedef struct _BalPoint{
+    int x;
+    int y;
+} BalPoint;
+typedef SDL_Rect BalRectangle;
+
+#elif PLATFORM()
+#include ""
+
+#endif
+
+typedef enum WebCacheModel {
+    WebCacheModelDocumentViewer = 0,
+    WebCacheModelDocumentBrowser = 1,
+    WebCacheModelPrimaryWebBrowser = 2
+} WebCacheModel;
+
+#endif
diff -ruN OWB-r1097/Base/WebKitTypes.h.in OWB-r1097.aros/Base/WebKitTypes.h.in
--- OWB-r1097/Base/WebKitTypes.h.in	2009-03-24 14:34:03.000000000 +0000
+++ OWB-r1097.aros/Base/WebKitTypes.h.in	2017-04-01 14:57:02.745938516 +0100
@@ -167,6 +167,35 @@
 } BalPoint;
 typedef SDL_Rect BalRectangle;
 
+#elif PLATFORM(AROS)
+
+#include <SDL.h>
+
+#include <exec/types.h>
+#ifndef __typedef_Object
+#   define __typedef_Object
+    typedef ULONG  Object;
+#endif
+
+struct IntuiMessage;
+
+typedef Object BalWidget;
+
+typedef struct SDL_ExposeEvent BalEventExpose;
+typedef struct SDL_ResizeEvent BalResizeEvent;
+typedef struct SDL_QuitEvent BalQuitEvent;
+typedef struct SDL_UserEvent BalUserEvent;
+typedef struct IntuiMessage BalEventKey;
+typedef struct IntuiMessage BalEventButton;
+typedef struct IntuiMessage BalEventMotion;
+typedef struct IntuiMessage BalEventScroll;
+
+typedef struct _BalPoint{
+    int x;
+    int y;
+} BalPoint;
+typedef SDL_Rect BalRectangle;
+
 #elif PLATFORM(@CUSTOMER@)
 #include "@WEBKIT_TYPES_CUSTOMER_INCLUDE@"
 
diff -ruN OWB-r1097/Base/wtf/Platform.h OWB-r1097.aros/Base/wtf/Platform.h
--- OWB-r1097/Base/wtf/Platform.h	2009-10-16 19:40:05.000000000 +0100
+++ OWB-r1097.aros/Base/wtf/Platform.h	2017-04-01 14:57:02.745938516 +0100
@@ -47,6 +47,15 @@
 #undef  WTF_PLATFORM_MACPORT
 #endif
 
+/* PLATFORM(AROS) */
+/* Operating system level dependencies for AROS that should */
+/* be used regardless of operating environment */
+#if defined(__AROS__)
+#define WTF_PLATFORM_AROS 1
+#define WTF_USE_CURL 1
+#define USE_SYSTEM_MALLOC 1
+#endif
+
 /* PLATFORM(DARWIN) */
 /* Operating system level dependencies for Mac OS X / Darwin that should */
 /* be used regardless of operating environment */
@@ -554,7 +563,7 @@
 #endif
 
 #if !PLATFORM(WIN_OS) && !PLATFORM(SOLARIS) && !PLATFORM(QNX) \
-    && !PLATFORM(SYMBIAN) && !PLATFORM(HAIKU) && !COMPILER(RVCT) && !PLATFORM(AMIGAOS4)
+    && !PLATFORM(SYMBIAN) && !PLATFORM(HAIKU) && !COMPILER(RVCT) && !PLATFORM(AMIGAOS4) && !PLATFORM(AROS)
 #define HAVE_TM_GMTOFF 1
 #define HAVE_TM_ZONE 1
 #define HAVE_TIMEGM 1
@@ -621,6 +630,14 @@
 #define HAVE_SYS_PARAM_H 1                                                                                         
 #define HAVE_SYS_TIME_H 1
 
+#elif PLATFORM(AROS)
+
+#define HAVE_ERRNO_H 1
+#define HAVE_STRINGS_H 1
+#define HAVE_SYS_PARAM_H 1
+#define HAVE_SYS_TIME_H 1
+#define HAVE_POSIX_MEMALIGN 1
+
 #else
 
 /* FIXME: is this actually used or do other platforms generate their own config.h? */
@@ -726,7 +743,7 @@
 #endif
 
 #if !defined(WTF_USE_JSVALUE64) && !defined(WTF_USE_JSVALUE32) && !defined(WTF_USE_JSVALUE32_64)
-#if PLATFORM(X86_64) && (PLATFORM(DARWIN) || PLATFORM(LINUX))
+#if PLATFORM(X86_64) && (PLATFORM(DARWIN) || PLATFORM(LINUX) || PLATFORM(AROS))
 #define WTF_USE_JSVALUE64 1
 #elif PLATFORM(ARM) || PLATFORM(PPC64)
 #define WTF_USE_JSVALUE32 1
diff -ruN OWB-r1097/cmake/AddGlobalCompilerFlags.cmake OWB-r1097.aros/cmake/AddGlobalCompilerFlags.cmake
--- OWB-r1097/cmake/AddGlobalCompilerFlags.cmake	2009-10-14 14:25:22.000000000 +0100
+++ OWB-r1097.aros/cmake/AddGlobalCompilerFlags.cmake	2017-04-01 14:57:02.745938516 +0100
@@ -1,13 +1,15 @@
 if(CMAKE_COMPILER_IS_GNUCXX)
-    set(CMAKE_C_FLAGS "-Wall -W -Wcast-align -Wchar-subscripts -Wreturn-type -Wformat -Wformat-security -Wno-format-y2k -Wundef -Wmissing-format-attribute -Wpointer-arith -Wwrite-strings -Wno-unused-parameter -Wno-parentheses -fPIC")
-    set(CMAKE_CXX_FLAGS "-Wall -W -Wcast-align -Wchar-subscripts -Wreturn-type -Wformat -Wformat-security -Wno-format-y2k -Wundef -Wmissing-format-attribute -Wpointer-arith -Wwrite-strings -Wno-unused-parameter -Wno-parentheses -fvisibility-inlines-hidden -fPIC")
-    if(ENABLE_DEBUG)
-        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g")
-        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
-    else(ENABLE_DEBUG)
-        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fvisibility=hidden")
-        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility=hidden")
-    endif(ENABLE_DEBUG)
+    if(NOT AROS)
+        set(CMAKE_C_FLAGS "--sysroot ${CMAKE_SYSROOT} -Uunix -U__unix -U__unix__ -Wall -W -Wcast-align -Wchar-subscripts -Wreturn-type -Wformat -Wformat-security -Wno-format-y2k -Wmissing-format-attribute -Wpointer-arith -Wwrite-strings -Wno-unused-parameter -Wno-parentheses")
+        set(CMAKE_CXX_FLAGS "--sysroot ${CMAKE_SYSROOT} -Uunix -U__unix -U__unix__ -Wall -W -Wcast-align -Wchar-subscripts -Wreturn-type -Wformat -Wformat-security -Wno-format-y2k -Wmissing-format-attribute -Wpointer-arith -Wwrite-strings -Wno-unused-parameter -Wno-parentheses -fvisibility-inlines-hidden")
+        if(ENABLE_DEBUG)
+            set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g")
+            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
+        else(ENABLE_DEBUG)
+            set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fvisibility=hidden")
+            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility=hidden")
+        endif(ENABLE_DEBUG)
+    endif(NOT AROS)
 else(CMAKE_COMPILER_IS_GNUCXX)
     message(STATUS "Flag for Windows compiler is not implemented")
 endif(CMAKE_COMPILER_IS_GNUCXX)
@@ -28,6 +30,10 @@
     add_definitions(-DWTF_USE_SOUP=1)
 endif(USE_NETWORK_SOUP)
 
+if(ENABLE_3D_RENDERING)
+    add_definitions(-DENABLE_3D_RENDERING)
+endif(ENABLE_3D_RENDERING)
+
 if(ENABLE_DEBUG)
     add_definitions(-DUSE_SYSTEM_MALLOC)
 else (ENABLE_DEBUG)
@@ -120,6 +126,11 @@
     add_definitions(-DWTF_PLATFORM_BAL=1)
 endif(USE_GRAPHICS_AMIGAOS4)
 
+if(USE_GRAPHICS_AROS)
+    add_definitions(-DWTF_PLATFORM_AROS=1)
+    add_definitions(-DWTF_PLATFORM_BAL=1)
+endif(USE_GRAPHICS_AROS)
+
 if(USE_I18N_GENERIC)
     add_definitions(-DWTF_USE_BALI18N=1)
 endif(USE_I18N_GENERIC)
diff -ruN OWB-r1097/cmake/CheckBaseDependencies.cmake OWB-r1097.aros/cmake/CheckBaseDependencies.cmake
--- OWB-r1097/cmake/CheckBaseDependencies.cmake	2009-09-15 09:59:14.000000000 +0100
+++ OWB-r1097.aros/cmake/CheckBaseDependencies.cmake	2017-04-01 14:57:02.745938516 +0100
@@ -17,7 +17,7 @@
 endif(NOT GPERF_EXECUTABLE)
 
 IF(NOT WIN32)
-    pkg_check_modules(OWB_BASE_DEPS REQUIRED libxml-2.0>=2.6)
+#    pkg_check_modules(OWB_BASE_DEPS REQUIRED libxml-2.0>=2.6)
 ELSE(NOT WIN32)
     ## Pkg-config under cygwin gives to cmake .a lib and we need .lib for Visual Studio projects. 
     find_path(LIB_XML2_PATH libxml2.lib ${WINLIB_LIB_PATH})
diff -ruN OWB-r1097/cmake/CheckPlatformFonts.cmake OWB-r1097.aros/cmake/CheckPlatformFonts.cmake
--- OWB-r1097/cmake/CheckPlatformFonts.cmake	2009-10-06 09:13:04.000000000 +0100
+++ OWB-r1097.aros/cmake/CheckPlatformFonts.cmake	2017-04-01 14:57:02.745938516 +0100
@@ -13,8 +13,8 @@
 
 if(USE_FONTS STREQUAL "FREETYPE")
     IF(NOT WIN32)
-        pkg_check_modules(FONTCONFIG REQUIRED fontconfig>=2.4)
-        pkg_check_modules(FREETYPE REQUIRED freetype2>=9.0)
+#        pkg_check_modules(FONTCONFIG REQUIRED fontconfig>=2.4)
+#        pkg_check_modules(FREETYPE REQUIRED freetype2>=9.0)
     ELSE(NOT WIN32)
         ## We haven't got a good pkg-config under Windows so we let cmake search libs
         find_path(FONTCONFIG_INCLUDE_DIRS fontconfig.h ${WINLIB_INC_PATH} ${WINLIB_INC_PATH}/fontconfig)
diff -ruN OWB-r1097/cmake/CheckPlatformGraphics.cmake OWB-r1097.aros/cmake/CheckPlatformGraphics.cmake
--- OWB-r1097/cmake/CheckPlatformGraphics.cmake	2009-10-06 09:13:04.000000000 +0100
+++ OWB-r1097.aros/cmake/CheckPlatformGraphics.cmake	2017-04-01 14:57:02.745938516 +0100
@@ -47,3 +47,15 @@
     
     set(REQUIREMENT "sdl >= 1.2.10")
 endif(USE_GRAPHICS STREQUAL "SDL")
+
+if(${USE_GRAPHICS} STREQUAL "AROS")
+#    pkg_check_modules(SDL REQUIRED sdl>=1.2.10)
+    include(FindSDL_gfx)
+    set(GRAPHICS_INCLUDE_DIRS ${SDL_INCLUDE_DIRS} ${SDLGFX_INCLUDE_DIR})
+    set(GRAPHICS_LIBRARIES ${SDL_LDFLAGS} ${SDLGFX_LIBRARY})
+
+    set(USE_GRAPHICS_AROS TRUE)
+    mark_as_advanced(USE_GRAPHICS_AROS)
+    
+    set(REQUIREMENT "sdl >= 1.2.10")
+endif(${USE_GRAPHICS} STREQUAL "AROS")
diff -ruN OWB-r1097/cmake/CheckPlatformImageDecoder.cmake OWB-r1097.aros/cmake/CheckPlatformImageDecoder.cmake
--- OWB-r1097/cmake/CheckPlatformImageDecoder.cmake	2009-09-15 09:59:14.000000000 +0100
+++ OWB-r1097.aros/cmake/CheckPlatformImageDecoder.cmake	2017-04-01 14:57:02.745938516 +0100
@@ -1,6 +1,6 @@
 if(NOT HAS_CUSTOMER)
     IF(NOT WIN32)
-        pkg_check_modules(PNG12 REQUIRED libpng12)
+#        pkg_check_modules(PNG12 REQUIRED libpng12)
         find_package(JPEG QUIET REQUIRED)
     ELSE(NOT WIN32)
         ## We haven't got a good pkg-config under Windows so we let cmake search libs
diff -ruN OWB-r1097/cmake/CheckPlatformInternationalization.cmake OWB-r1097.aros/cmake/CheckPlatformInternationalization.cmake
--- OWB-r1097/cmake/CheckPlatformInternationalization.cmake	2009-09-15 09:59:14.000000000 +0100
+++ OWB-r1097.aros/cmake/CheckPlatformInternationalization.cmake	2017-04-01 14:57:02.745938516 +0100
@@ -22,10 +22,10 @@
 
 if(USE_I18N STREQUAL "ICU")
     IF(NOT WIN32)
-        find_package(ICU REQUIRED)
-        if(NOT ICU_FOUND)
-            message(FATAL_ERROR "icu package not found. Install it to be able to compile owb.")
-        endif(NOT ICU_FOUND)
+#        find_package(ICU REQUIRED)
+#        if(NOT ICU_FOUND)
+#            message(FATAL_ERROR "icu package not found. Install it to be able to compile owb.")
+#        endif(NOT ICU_FOUND)
     ELSE(NOT WIN32)
         ## We haven't got a good pkg-config under Windows so we let cmake search libs
         find_path(ICU_INC pwin32.h ${WINLIB_INC_PATH} ${WINLIB_INC_PATH}/icu ${WINLIB_INC_PATH}/unicode)
diff -ruN OWB-r1097/cmake/CheckPlatformNetwork.cmake OWB-r1097.aros/cmake/CheckPlatformNetwork.cmake
--- OWB-r1097/cmake/CheckPlatformNetwork.cmake	2009-09-23 14:00:11.000000000 +0100
+++ OWB-r1097.aros/cmake/CheckPlatformNetwork.cmake	2017-04-01 14:57:02.745938516 +0100
@@ -1,6 +1,6 @@
 if(USE_NETWORK STREQUAL "CURL")
     IF(NOT WIN32)
-        pkg_check_modules(CURL REQUIRED libcurl>=7.15)
+#        pkg_check_modules(CURL REQUIRED libcurl>=7.15)
     ELSE(NOT WIN32)
         ## We haven't got a good pkg-config under Windows so we let cmake search libs
         find_path(CURL_INCLUDE_DIRS curl.h ${WINLIB_INC_PATH} ${WINLIB_INC_PATH}/curl)    
diff -ruN OWB-r1097/cmake/CheckPlatformTimer.cmake OWB-r1097.aros/cmake/CheckPlatformTimer.cmake
--- OWB-r1097/cmake/CheckPlatformTimer.cmake	2009-02-11 16:41:27.000000000 +0000
+++ OWB-r1097.aros/cmake/CheckPlatformTimer.cmake	2017-04-01 14:57:02.745938516 +0100
@@ -20,3 +20,8 @@
     set(USE_TIMER_QT TRUE)
     mark_as_advanced(USE_TIMER_QT)
 endif(USE_TIMER STREQUAL "QT")
+
+if(${USE_TIMER} STREQUAL "AROS")
+    set(USE_TIMER_AROS TRUE)
+    mark_as_advanced(USE_TIMER_AROS)
+endif(${USE_TIMER} STREQUAL "AROS")
diff -ruN OWB-r1097/cmake/CheckSqlite3.cmake OWB-r1097.aros/cmake/CheckSqlite3.cmake
--- OWB-r1097/cmake/CheckSqlite3.cmake	2008-10-04 18:41:49.000000000 +0100
+++ OWB-r1097.aros/cmake/CheckSqlite3.cmake	2017-04-01 14:57:02.745938516 +0100
@@ -1,5 +1,5 @@
 if(ENABLE_DATABASE)
-    pkg_check_modules(SQLITE3 REQUIRED sqlite3>=3.0)
+#    pkg_check_modules(SQLITE3 REQUIRED sqlite3>=3.0)
     set(DATABASE_INCLUDE_DIRS ${SQLITE3_INCLUDE_DIRS})
     set(DATABASE_LIBRARIES ${SQLITE3_LIBRARIES})
 endif(ENABLE_DATABASE)
diff -ruN OWB-r1097/cmake/CheckXSLT.cmake OWB-r1097.aros/cmake/CheckXSLT.cmake
--- OWB-r1097/cmake/CheckXSLT.cmake	2009-09-15 09:59:14.000000000 +0100
+++ OWB-r1097.aros/cmake/CheckXSLT.cmake	2017-04-01 14:57:02.745938516 +0100
@@ -1,6 +1,6 @@
 if(ENABLE_XSLT)
     IF(NOT WIN32)
-        pkg_check_modules(LIBXSLT REQUIRED libxslt>=1.1.7)
+#        pkg_check_modules(LIBXSLT REQUIRED libxslt>=1.1.7)
     ELSE(NOT WIN32)
         ## Pkg-config under cygwin gives to cmake .a lib and we need .lib for Visual Studio projects. 
         find_path(LIB_XSLT_PATH libxslt.lib ${WINLIB_LIB_PATH})
diff -ruN OWB-r1097/cmake/ConfigureBuildSDL.cmake OWB-r1097.aros/cmake/ConfigureBuildSDL.cmake
--- OWB-r1097/cmake/ConfigureBuildSDL.cmake	2009-10-16 19:40:05.000000000 +0100
+++ OWB-r1097.aros/cmake/ConfigureBuildSDL.cmake	2017-04-01 14:57:02.745938516 +0100
@@ -7,7 +7,7 @@
     set(ARCH ${PROCESSOR})
 endif(UNIX)
 
-set(ENABLE_DEBUG ON CACHE BOOLEAN "Enable debug support" FORCE)
+set(ENABLE_DEBUG OFF CACHE BOOLEAN "Enable debug support" FORCE)
 set(ENABLE_TESTS ON CACHE BOOLEAN "Enable tests" FORCE)
 
 set(ENABLE_3D_CANVAS ON CACHE BOOLEAN "Enable 3D canvas support" FORCE)
diff -ruN OWB-r1097/cmake/SetCMakeVars.cmake OWB-r1097.aros/cmake/SetCMakeVars.cmake
--- OWB-r1097/cmake/SetCMakeVars.cmake	2009-08-12 21:20:06.000000000 +0100
+++ OWB-r1097.aros/cmake/SetCMakeVars.cmake	2017-04-01 14:57:02.745938516 +0100
@@ -22,6 +22,14 @@
     )
 endif(USE_GRAPHICS_SDL)
 
+if(USE_GRAPHICS_AROS)
+    list(APPEND API_HEADER
+        ${OWB_SOURCE_DIR}/WebKit/OrigynWebBrowser/Api/AROS/WebViewZune.h
+        ${OWB_SOURCE_DIR}/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateZune.h
+        ${OWB_SOURCE_DIR}/WebKit/OrigynWebBrowser/Api/AROS/WebPreferencesZune.h
+    )
+endif(USE_GRAPHICS_AROS)
+
 list(APPEND BASE_INCLUDE_DIRS
     ${OWB_SOURCE_DIR}
     ${OWB_SOURCE_DIR}/Base
@@ -103,6 +111,12 @@
     ${NETWORK_LIBRARIES}
     ${THREADS_LIBRARIES}
     ${TIMER_LIBRARIES}
+    codesets
+    amiga
+    arosc
+    m
+    mui
+    thread
 )
 
 if(ENABLE_DATABASE)
diff -ruN OWB-r1097/CMakeLists.txt OWB-r1097.aros/CMakeLists.txt
--- OWB-r1097/CMakeLists.txt	2009-10-14 14:25:22.000000000 +0100
+++ OWB-r1097.aros/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -72,11 +72,11 @@
 
 set(USE_FILESYSTEM_ACCESS "POSIX" CACHE STRING "Choose the filesystem access method, options are: GLIB POSIX QT")
 set(USE_FONTS "FREETYPE" CACHE STRING "Choose the font engine, options are: AMIGAOS4 EMBEDDED FREETYPE GTK QT")
-set(USE_GRAPHICS "SDL" CACHE STRING "Choose the graphic backend, options are: AMIGAOS4 GTK QT SDL")
+set(USE_GRAPHICS "AROS" CACHE STRING "Choose the graphic backend, options are: AMIGAOS4 GTK SDL QT AROS")
 set(USE_I18N "ICU" CACHE STRING "Choose the internationalization library, options are: GENERIC GLIB ICU QT")
 set(USE_NETWORK "CURL" CACHE STRING "Choose the network backend, options are: CURL QT SOUP")
-set(USE_THREADS "PTHREADS" CACHE STRING "Choose the thread backend, options are: GTHREADS NONE PTHREADS QT")
-set(USE_TIMER "LINUX" CACHE STRING "Choose the timer backend, options are: GLIB LINUX QT")
+set(USE_THREADS "NONE" CACHE STRING "Choose the thread backend, options are: GTHREADS NONE PTHREADS QT")
+set(USE_TIMER "AROS" CACHE STRING "Choose the timer backend, options are: GLIB LINUX QT AROS")
 
 set(WITH_OWB_CONFIG_DIR "$ENV{HOME}/.owb/conf/" CACHE STRING "Set configuration directory for owb")
 
diff -ruN OWB-r1097/JavaScriptCore/CMakeLists.txt OWB-r1097.aros/JavaScriptCore/CMakeLists.txt
--- OWB-r1097/JavaScriptCore/CMakeLists.txt	2009-10-09 15:58:16.000000000 +0100
+++ OWB-r1097.aros/JavaScriptCore/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -71,11 +71,19 @@
 add_library(jsc STATIC ${JSC_SRC})
 add_dependencies(jsc wtf)
 
+IF(AROS)
+    install(TARGETS jsc
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+    )
+ENDIF(AROS)
 
 ##################################################
 # Tests compilation.                             #
 ##################################################
 
+if(ENABLE_TESTS)
+
 link_directories(${THREADS_LIBRARY_DIRS})
 add_executable(jshell EXCLUDE_FROM_ALL jsc.cpp)
 set_target_properties(jshell
@@ -95,3 +103,5 @@
     WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/tests/mozilla
 )
 add_dependencies(jsctests jshell)
+
+endif(ENABLE_TESTS)
diff -ruN OWB-r1097/JavaScriptCore/interpreter/Interpreter.cpp OWB-r1097.aros/JavaScriptCore/interpreter/Interpreter.cpp
--- OWB-r1097/JavaScriptCore/interpreter/Interpreter.cpp	2009-10-12 11:20:21.000000000 +0100
+++ OWB-r1097.aros/JavaScriptCore/interpreter/Interpreter.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -2497,7 +2497,7 @@
                 double dValue = 0;
                 JSValue jsValue = callFrame->r(value).jsValue();
                 if (jsValue.isInt32())
-                    jsByteArray->setIndex(i, jsValue.asInt32());
+                    jsByteArray->setIndex(i, (int)jsValue.asInt32());
                 else if (jsValue.getNumber(dValue))
                     jsByteArray->setIndex(i, dValue);
                 else
@@ -3052,10 +3052,10 @@
 
             // First step is to copy the "expected" parameters from their normal location relative to the callframe
             for (; i < inplaceArgs; i++)
-                argStore[i] = callFrame->registers()[i - RegisterFile::CallFrameHeaderSize - expectedParams];
+                argStore[i] = callFrame->registers()[(int32_t) i - (int32_t) RegisterFile::CallFrameHeaderSize - (int32_t) expectedParams];
             // Then we copy any additional arguments that may be further up the stack ('-1' to account for 'this')
             for (; i < argCount; i++)
-                argStore[i] = callFrame->registers()[i - RegisterFile::CallFrameHeaderSize - expectedParams - argCount - 1];
+                argStore[i] = callFrame->registers()[(int32_t) i - (int32_t) RegisterFile::CallFrameHeaderSize - (int32_t) expectedParams - (int32_t) argCount - 1];
         } else if (!arguments.isUndefinedOrNull()) {
             if (!arguments.isObject()) {
                 exceptionValue = createInvalidParamError(callFrame, "Function.prototype.apply", arguments, vPC - callFrame->codeBlock()->instructions().begin(), callFrame->codeBlock());
diff -ruN OWB-r1097/JavaScriptCore/interpreter/RegisterFile.cpp OWB-r1097.aros/JavaScriptCore/interpreter/RegisterFile.cpp
--- OWB-r1097/JavaScriptCore/interpreter/RegisterFile.cpp	2009-09-23 14:00:11.000000000 +0100
+++ OWB-r1097.aros/JavaScriptCore/interpreter/RegisterFile.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -40,7 +40,7 @@
     VirtualFree(m_buffer, DWORD(m_commitEnd) - DWORD(m_buffer), MEM_DECOMMIT);
 #endif
     VirtualFree(m_buffer, 0, MEM_RELEASE);
-#elif PLATFORM(AMIGAOS4)
+#elif PLATFORM(AMIGAOS4) || PLATFORM(AROS)
     fastFree(m_buffer);
 #else
     fastFree(m_buffer);
diff -ruN OWB-r1097/JavaScriptCore/parser/Grammar.y OWB-r1097.aros/JavaScriptCore/parser/Grammar.y
--- OWB-r1097/JavaScriptCore/parser/Grammar.y	2009-10-09 15:58:16.000000000 +0100
+++ OWB-r1097.aros/JavaScriptCore/parser/Grammar.y	2017-04-01 14:57:02.745938516 +0100
@@ -1,4 +1,6 @@
-%pure_parser
+%pure-parser
+%parse-param { void* globalPtr }
+%lex-param { void* globalPtr }
 
 %{
 
@@ -49,7 +51,7 @@
 #define YYERROR_VERBOSE
 #endif
 
-int jscyyerror(const char*);
+int jscyyerror(void*, void*, const char*);
 
 static inline bool allowAutomaticSemicolon(JSC::Lexer&, int);
 
@@ -86,9 +88,6 @@
 
 #endif
 
-#define YYPARSE_PARAM globalPtr
-#define YYLEX_PARAM globalPtr
-
 template <typename T> inline NodeDeclarationInfo<T> createNodeDeclarationInfo(T node,
     ParserArenaData<DeclarationStacks::VarStack>* varDecls,
     ParserArenaData<DeclarationStacks::FunctionStack>* funcDecls,
@@ -2069,7 +2068,7 @@
 }
 
 // Called by yyparse on error.
-int yyerror(const char*)
+int yyerror(void*, void *, const char*)
 {
     return 1;
 }
diff -ruN OWB-r1097/JavaScriptCore/runtime/Arguments.cpp OWB-r1097.aros/JavaScriptCore/runtime/Arguments.cpp
--- OWB-r1097/JavaScriptCore/runtime/Arguments.cpp	2009-08-28 13:59:49.000000000 +0100
+++ OWB-r1097.aros/JavaScriptCore/runtime/Arguments.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -71,7 +71,7 @@
     }
 
     if (LIKELY(!d->deletedArguments)) {
-        unsigned parametersLength = min(min(d->numParameters, d->numArguments), maxSize);
+        unsigned parametersLength = min((uint32_t)min(d->numParameters, d->numArguments), maxSize);
         unsigned i = 0;
         for (; i < parametersLength; ++i)
             buffer[i] = d->registers[d->firstParameterIndex + i].jsValue();
@@ -80,7 +80,7 @@
         return;
     }
     
-    unsigned parametersLength = min(min(d->numParameters, d->numArguments), maxSize);
+    unsigned parametersLength = min((uint32_t)min(d->numParameters, d->numArguments), maxSize);
     unsigned i = 0;
     for (; i < parametersLength; ++i) {
         if (!d->deletedArguments[i])
diff -ruN OWB-r1097/JavaScriptCore/runtime/CMakeLists.txt OWB-r1097.aros/JavaScriptCore/runtime/CMakeLists.txt
--- OWB-r1097/JavaScriptCore/runtime/CMakeLists.txt	2009-10-09 15:58:16.000000000 +0100
+++ OWB-r1097.aros/JavaScriptCore/runtime/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -62,7 +62,7 @@
     runtime/Lookup.cpp
     runtime/MathObject.cpp
     runtime/MarkStack.cpp
-    runtime/MarkStackPosix.cpp
+    runtime/MarkStackAROS.cpp
     runtime/NativeErrorConstructor.cpp
     runtime/NativeErrorPrototype.cpp
     runtime/NumberConstructor.cpp
diff -ruN OWB-r1097/JavaScriptCore/runtime/Collector.cpp OWB-r1097.aros/JavaScriptCore/runtime/Collector.cpp
--- OWB-r1097/JavaScriptCore/runtime/Collector.cpp	2009-10-09 15:58:16.000000000 +0100
+++ OWB-r1097.aros/JavaScriptCore/runtime/Collector.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -95,6 +95,10 @@
 #include <malloc.h>
 #include <proto/exec.h>
 
+#elif PLATFORM(AROS)
+
+#include <proto/exec.h>
+
 #endif
 
 #define COLLECT_ON_EVERY_ALLOCATION 0
@@ -707,6 +711,8 @@
     thread_info threadInfo;
     get_thread_info(find_thread(NULL), &threadInfo);
     return threadInfo.stack_end;
+#elif PLATFORM(AROS)
+    return (void*)FindTask(NULL)->tc_SPUpper;
 #elif PLATFORM(UNIX)
     static void* stackBase = 0;
     static size_t stackSize = 0;
diff -ruN OWB-r1097/JavaScriptCore/runtime/JSONObject.cpp OWB-r1097.aros/JavaScriptCore/runtime/JSONObject.cpp
--- OWB-r1097/JavaScriptCore/runtime/JSONObject.cpp	2009-08-28 13:59:49.000000000 +0100
+++ OWB-r1097.aros/JavaScriptCore/runtime/JSONObject.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -720,7 +720,7 @@
             }
             case ArrayEndVisitMember: {
                 JSArray* array = arrayStack.last();
-                JSValue filteredValue = callReviver(array, jsString(m_exec, UString::from(indexStack.last())), outValue);
+                JSValue filteredValue = callReviver(array, jsString(m_exec, UString::from((unsigned int)indexStack.last())), outValue);
                 if (filteredValue.isUndefined())
                     array->deleteProperty(m_exec, indexStack.last());
                 else {
diff -ruN OWB-r1097/JavaScriptCore/runtime/JSString.h OWB-r1097.aros/JavaScriptCore/runtime/JSString.h
--- OWB-r1097/JavaScriptCore/runtime/JSString.h	2009-10-16 19:40:05.000000000 +0100
+++ OWB-r1097.aros/JavaScriptCore/runtime/JSString.h	2017-04-01 14:57:02.745938516 +0100
@@ -260,7 +260,7 @@
         if (isString())
             return static_cast<JSString*>(asCell())->value();
         if (isInt32())
-            return exec->globalData().numericStrings.add(asInt32());
+            return exec->globalData().numericStrings.add((int)asInt32());
         if (isDouble())
             return exec->globalData().numericStrings.add(asDouble());
         if (isTrue())
diff -ruN OWB-r1097/JavaScriptCore/runtime/JSValue.h OWB-r1097.aros/JavaScriptCore/runtime/JSValue.h
--- OWB-r1097/JavaScriptCore/runtime/JSValue.h	2009-10-05 11:36:03.000000000 +0100
+++ OWB-r1097.aros/JavaScriptCore/runtime/JSValue.h	2017-04-01 14:57:02.745938516 +0100
@@ -663,7 +663,7 @@
             u.asDouble = d;
             return;
         }
-        *this = JSValue(globalData, static_cast<int32_t>(d));
+        *this = JSValue(globalData, static_cast<int>(d));
     }
     
     inline JSValue::JSValue(JSGlobalData*, int i)
@@ -678,7 +678,7 @@
             *this = JSValue(globalData, static_cast<double>(i));
             return;
         }
-        *this = JSValue(globalData, static_cast<int32_t>(i));
+        *this = JSValue(globalData, static_cast<int>(i));
     }
 
     inline bool JSValue::isNumber() const
diff -ruN OWB-r1097/JavaScriptCore/runtime/MarkStackAROS.cpp OWB-r1097.aros/JavaScriptCore/runtime/MarkStackAROS.cpp
--- OWB-r1097/JavaScriptCore/runtime/MarkStackAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/JavaScriptCore/runtime/MarkStackAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,40 @@
+/*
+    Copyright (C) 2009 Stanislaw Szymczyk
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Library General Public
+    License as published by the Free Software Foundation; either
+    version 2 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Library General Public License for more details.
+
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to
+    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+    Boston, MA 02110-1301, USA.
+*/
+
+#include "config.h"
+#include "MarkStack.h"
+
+namespace JSC {
+
+void MarkStack::initializePagesize()
+{
+    MarkStack::s_pageSize = 4096;
+}
+
+void* MarkStack::allocateStack(size_t size)
+{
+    return fastMalloc(size);
+}
+
+void MarkStack::releaseStack(void* addr, size_t size)
+{
+    return fastFree(addr);
+}
+
+}
diff -ruN OWB-r1097/JavaScriptCore/runtime/MarkStack.h OWB-r1097.aros/JavaScriptCore/runtime/MarkStack.h
--- OWB-r1097/JavaScriptCore/runtime/MarkStack.h	2009-09-28 10:13:12.000000000 +0100
+++ OWB-r1097.aros/JavaScriptCore/runtime/MarkStack.h	2017-04-01 14:57:02.745938516 +0100
@@ -153,7 +153,7 @@
                 ASSERT(0 == (size % MarkStack::pageSize()));
                 if (size == m_allocated)
                     return;
-#if PLATFORM(WIN) || PLATFORM(SYMBIAN)
+#if PLATFORM(WIN) || PLATFORM(SYMBIAN) || PLATFORM(AROS)
                 // We cannot release a part of a region with VirtualFree.  To get around this,
                 // we'll release the entire region and reallocate the size that we want.
                 releaseStack(m_data, m_allocated);
diff -ruN OWB-r1097/JavaScriptCore/runtime/Operations.h OWB-r1097.aros/JavaScriptCore/runtime/Operations.h
--- OWB-r1097/JavaScriptCore/runtime/Operations.h	2009-08-21 14:44:56.000000000 +0100
+++ OWB-r1097.aros/JavaScriptCore/runtime/Operations.h	2017-04-01 14:57:02.745938516 +0100
@@ -212,7 +212,7 @@
 
         if (rightIsNumber & leftIsString) {
             RefPtr<UString::Rep> value = v2.isInt32() ?
-                concatenate(asString(v1)->value().rep(), v2.asInt32()) :
+                concatenate(asString(v1)->value().rep(), (int)v2.asInt32()) :
                 concatenate(asString(v1)->value().rep(), right);
 
             if (!value)
diff -ruN OWB-r1097/JavaScriptCore/wtf/CMakeLists.txt OWB-r1097.aros/JavaScriptCore/wtf/CMakeLists.txt
--- OWB-r1097/JavaScriptCore/wtf/CMakeLists.txt	2009-03-13 15:31:27.000000000 +0000
+++ OWB-r1097.aros/JavaScriptCore/wtf/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -20,3 +20,10 @@
     PROPERTIES COMPILE_FLAGS "-fno-rtti -fno-exceptions"
 )
 add_library(wtf STATIC ${WTF_SRC})
+
+IF(AROS)
+    install(TARGETS wtf
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+    )
+ENDIF(AROS)
\ No newline at end of file
diff -ruN OWB-r1097/JavaScriptCore/wtf/TCSpinLock.h OWB-r1097.aros/JavaScriptCore/wtf/TCSpinLock.h
--- OWB-r1097/JavaScriptCore/wtf/TCSpinLock.h	2009-09-25 16:25:08.000000000 +0100
+++ OWB-r1097.aros/JavaScriptCore/wtf/TCSpinLock.h	2017-04-01 14:57:02.745938516 +0100
@@ -189,6 +189,31 @@
   }
 }
 
+#elif PLATFORM(AROS)
+
+#include <libraries/thread.h>
+#include <proto/thread.h>
+
+// AROS version
+struct TCMalloc_SpinLock {
+  void *private_lock_;
+
+  inline void Init() {
+    if ((private_lock_ = CreateMutex()) == NULL) abort();
+  }
+  inline void Finalize() {
+    DestroyMutex(private_lock_);
+  }
+  inline void Lock() {
+    LockMutex(private_lock_);
+  }
+  inline void Unlock() {
+    UnlockMutex(private_lock_);
+  }
+};
+
+#define SPINLOCK_INITIALIZER { NULL }
+
 #else
 
 #include <pthread.h>
diff -ruN OWB-r1097/WebCore/bindings/js/CMakeLists.txt OWB-r1097.aros/WebCore/bindings/js/CMakeLists.txt
--- OWB-r1097/WebCore/bindings/js/CMakeLists.txt	2009-10-14 14:25:22.000000000 +0100
+++ OWB-r1097.aros/WebCore/bindings/js/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -252,5 +252,11 @@
     )
 endif(ENABLE_EVENTSOURCE)
 
+if(USE_GRAPHICS_AROS)
+    list(APPEND WEBCORE_SRC
+        bindings/js/ScriptControllerBAL.cpp
+    )
+endif(USE_GRAPHICS_AROS)
+
 include(bindings/js/Customer/CMakeLists.txt OPTIONAL)
 
diff -ruN OWB-r1097/WebCore/CMakeLists.txt OWB-r1097.aros/WebCore/CMakeLists.txt
--- OWB-r1097/WebCore/CMakeLists.txt	2009-10-07 16:28:50.000000000 +0100
+++ OWB-r1097.aros/WebCore/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -510,3 +510,17 @@
 )
 add_library(webcore STATIC ${WEBCORE_SRC})
 add_dependencies(webcore jsc)
+
+IF(AROS)
+    install(TARGETS webcore
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+    )
+ENDIF(AROS)
+
+install(DIRECTORY ${OWB_SOURCE_DIR}/WebCore/Resources/
+    DESTINATION share/webkit-owb/resources
+    PATTERN ".svn" EXCLUDE
+    PERMISSIONS OWNER_READ GROUP_READ WORLD_READ
+)
+
diff -ruN OWB-r1097/WebCore/css/CSSGrammar.y OWB-r1097.aros/WebCore/css/CSSGrammar.y
--- OWB-r1097/WebCore/css/CSSGrammar.y	2009-08-07 12:39:58.000000000 +0100
+++ OWB-r1097.aros/WebCore/css/CSSGrammar.y	2017-04-01 14:57:02.745938516 +0100
@@ -51,13 +51,11 @@
 #define YYMAXDEPTH 10000
 #define YYDEBUG 0
 
-// FIXME: Replace with %parse-param { CSSParser* parser } once we can depend on bison 2.x
-#define YYPARSE_PARAM parser
-#define YYLEX_PARAM parser
-
 %}
 
-%pure_parser
+%pure-parser
+%parse-param { CSSParser* parser }
+%lex-param { CSSParser* parser }
 
 %union {
     bool boolean;
@@ -85,7 +83,7 @@
 
 %{
 
-static inline int cssyyerror(const char*)
+static inline int cssyyerror(void*, const char*)
 {
     return 1;
 }
diff -ruN OWB-r1097/WebCore/css/CSSParser.cpp OWB-r1097.aros/WebCore/css/CSSParser.cpp
--- OWB-r1097/WebCore/css/CSSParser.cpp	2009-10-16 19:40:05.000000000 +0100
+++ OWB-r1097.aros/WebCore/css/CSSParser.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -81,7 +81,7 @@
 extern int cssyydebug;
 #endif
 
-extern int cssyyparse(void* parser);
+extern int cssyyparse(WebCore::CSSParser*);
 
 using namespace std;
 using namespace WTF;
@@ -222,7 +222,7 @@
     m_defaultNamespace = starAtom; // Reset the default namespace.
     
     setupParser("", string, "");
-    cssyyparse(this);
+    ::cssyyparse(this);
     m_rule = 0;
 }
 
@@ -230,7 +230,7 @@
 {
     m_styleSheet = sheet;
     setupParser("@-webkit-rule{", string, "} ");
-    cssyyparse(this);
+    ::cssyyparse(this);
     return m_rule.release();
 }
 
@@ -238,7 +238,7 @@
 {
     m_styleSheet = sheet;
     setupParser("@-webkit-keyframe-rule{ ", string, "} ");
-    cssyyparse(this);
+    ::cssyyparse(this);
     return m_keyframe.release();
 }
 
@@ -252,7 +252,7 @@
     m_id = id;
     m_important = important;
     
-    cssyyparse(this);
+    ::cssyyparse(this);
     
     m_rule = 0;
 
@@ -300,7 +300,7 @@
     m_styleSheet = static_cast<CSSStyleSheet*>(declaration->stylesheet());
 
     setupParser("@-webkit-decls{color:", string, "} ");
-    cssyyparse(this);
+    ::cssyyparse(this);
     m_rule = 0;
 
     return (m_numParsedProperties && m_parsedProperties[0]->m_id == CSSPropertyColor);
@@ -315,7 +315,7 @@
 
     setupParser("@-webkit-selector{", string, "}");
 
-    cssyyparse(this);
+    ::cssyyparse(this);
 
     m_selectorListForParseSelector = 0;
 }
@@ -326,7 +326,7 @@
     m_styleSheet = static_cast<CSSStyleSheet*>(declaration->stylesheet());
 
     setupParser("@-webkit-decls{", string, "} ");
-    cssyyparse(this);
+    ::cssyyparse(this);
     m_rule = 0;
 
     bool ok = false;
@@ -350,7 +350,7 @@
     // can't use { because tokenizer state switches from mediaquery to initial state when it sees { token.
     // instead insert one " " (which is WHITESPACE in CSSGrammar.y)
     setupParser("@-webkit-mediaquery ", string, "} ");
-    cssyyparse(this);
+    ::cssyyparse(this);
 
     bool ok = false;
     if (m_mediaQuery) {
@@ -5066,7 +5066,7 @@
     nameValuePair += variableValue;
 
     setupParser("@-webkit-variables-decls{", nameValuePair, "} ");
-    cssyyparse(this);
+    ::cssyyparse(this);
     m_rule = 0;
 
     bool ok = false;
diff -ruN OWB-r1097/WebCore/dom/make_names.pl OWB-r1097.aros/WebCore/dom/make_names.pl
--- OWB-r1097/WebCore/dom/make_names.pl	2009-08-24 12:41:30.000000000 +0100
+++ OWB-r1097.aros/WebCore/dom/make_names.pl	2017-04-01 14:57:02.745938516 +0100
@@ -46,7 +46,7 @@
 my %attrs = ();
 my %parameters = ();
 my $extraDefines = 0;
-my $preprocessor = "/usr/bin/gcc -E -P -x c++";
+my $preprocessor = "/usr/bin/gcc -E -x c++";
 
 GetOptions(
     'tags=s' => \$tagsFile, 
diff -ruN OWB-r1097/WebCore/dom/XMLTokenizerLibxml2.cpp OWB-r1097.aros/WebCore/dom/XMLTokenizerLibxml2.cpp
--- OWB-r1097/WebCore/dom/XMLTokenizerLibxml2.cpp	2009-10-09 15:58:16.000000000 +0100
+++ OWB-r1097.aros/WebCore/dom/XMLTokenizerLibxml2.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -887,7 +887,7 @@
     if (m_parserStopped)
         return;
 
-#if PLATFORM(WIN_OS)
+#if PLATFORM(WIN_OS) || PLATFORM(AROS)
     char m[1024];
     vsnprintf(m, sizeof(m) - 1, message, args);
 #else
@@ -901,7 +901,7 @@
     else
         handleError(type, m, lineNumber(), columnNumber());
 
-#if !PLATFORM(WIN_OS)
+#if !PLATFORM(WIN_OS) && !PLATFORM(AROS)
     free(m);
 #endif
 }
diff -ruN OWB-r1097/WebCore/loader/CachedImage.cpp OWB-r1097.aros/WebCore/loader/CachedImage.cpp
--- OWB-r1097/WebCore/loader/CachedImage.cpp	2009-06-19 16:17:54.000000000 +0100
+++ OWB-r1097.aros/WebCore/loader/CachedImage.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -113,7 +113,7 @@
 
 static Image* brokenImage()
 {
-    DEFINE_STATIC_LOCAL(RefPtr<Image>, brokenImage, (Image::loadPlatformResource("missingImage")));
+    DEFINE_STATIC_LOCAL(RefPtr<Image>, brokenImage, (Image::loadPlatformResource("/missingImage")));
     return brokenImage.get();
 }
 
diff -ruN OWB-r1097/WebCore/loader/FrameLoader.cpp OWB-r1097.aros/WebCore/loader/FrameLoader.cpp
--- OWB-r1097/WebCore/loader/FrameLoader.cpp	2009-10-16 19:40:05.000000000 +0100
+++ OWB-r1097.aros/WebCore/loader/FrameLoader.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -47,6 +47,7 @@
 #include "EditorClient.h"
 #include "Element.h"
 #include "Event.h"
+#include "MouseEvent.h"
 #include "EventNames.h"
 #include "FloatRect.h"
 #include "FormState.h"
@@ -1863,6 +1864,13 @@
         return;
     }
 
+    if (action.event() && action.event()->type() == eventNames().clickEvent && action.event()->isMouseEvent() && static_cast<const MouseEvent*>(action.event())->button() == MiddleButton)
+    {
+        policyChecker()->checkNewWindowPolicy(action, FrameLoader::callContinueLoadAfterNewWindowPolicy,
+            request, formState.release(), String("_blank"), this);
+        return;
+    }
+    
     RefPtr<DocumentLoader> oldDocumentLoader = m_documentLoader;
 
     bool sameURL = shouldTreatURLAsSameAsCurrent(newURL);
diff -ruN OWB-r1097/WebCore/loader/MainResourceLoader.cpp OWB-r1097.aros/WebCore/loader/MainResourceLoader.cpp
--- OWB-r1097/WebCore/loader/MainResourceLoader.cpp	2009-10-16 19:40:05.000000000 +0100
+++ OWB-r1097.aros/WebCore/loader/MainResourceLoader.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -77,7 +77,11 @@
 
     if (!cancelled()) {
         ASSERT(!reachedTerminalState());
-        frameLoader()->notifier()->didFailToLoad(this, error);
+        
+        if(error == interruptionForPolicyChangeError())
+            frameLoader()->notifier()->didFinishLoad(this);
+        else
+            frameLoader()->notifier()->didFailToLoad(this, error);
         
         releaseResources();
     }
diff -ruN OWB-r1097/WebCore/page/ChromeClient.h OWB-r1097.aros/WebCore/page/ChromeClient.h
--- OWB-r1097/WebCore/page/ChromeClient.h	2009-10-07 16:28:50.000000000 +0100
+++ OWB-r1097.aros/WebCore/page/ChromeClient.h	2017-04-01 14:57:02.745938516 +0100
@@ -88,6 +88,7 @@
         // should not be shown to the user until the ChromeClient of the newly
         // created Page has its show method called.
         virtual Page* createWindow(Frame*, const FrameLoadRequest&, const WindowFeatures&) = 0;
+        virtual Page* createTab(Frame*, const FrameLoadRequest&) = 0;
         virtual void show() = 0;
 
         virtual bool canRunModal() = 0;
diff -ruN OWB-r1097/WebCore/page/Chrome.cpp OWB-r1097.aros/WebCore/page/Chrome.cpp
--- OWB-r1097/WebCore/page/Chrome.cpp	2009-09-21 15:00:57.000000000 +0100
+++ OWB-r1097.aros/WebCore/page/Chrome.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -167,6 +167,20 @@
     return newPage;
 }
 
+Page* Chrome::createTab(Frame* frame, const FrameLoadRequest& request) const
+{
+    Page* newPage = m_client->createTab(frame, request);
+
+#if ENABLE(DOM_STORAGE)
+    if (newPage) {
+        if (StorageNamespace* oldSessionStorage = m_page->sessionStorage(false))
+            newPage->setSessionStorage(oldSessionStorage->copy());
+    }
+#endif
+
+    return newPage;
+}
+
 void Chrome::show() const
 {
     m_client->show();
diff -ruN OWB-r1097/WebCore/page/Chrome.h OWB-r1097.aros/WebCore/page/Chrome.h
--- OWB-r1097/WebCore/page/Chrome.h	2009-09-21 15:00:57.000000000 +0100
+++ OWB-r1097.aros/WebCore/page/Chrome.h	2017-04-01 14:57:02.745938516 +0100
@@ -83,6 +83,7 @@
         void takeFocus(FocusDirection) const;
 
         Page* createWindow(Frame*, const FrameLoadRequest&, const WindowFeatures&) const;
+        Page* createTab(Frame*, const FrameLoadRequest&) const;
         void show() const;
 
         bool canRunModal() const;
diff -ruN OWB-r1097/WebCore/page/ContextMenuController.cpp OWB-r1097.aros/WebCore/page/ContextMenuController.cpp
--- OWB-r1097/WebCore/page/ContextMenuController.cpp	2009-10-05 11:36:03.000000000 +0100
+++ OWB-r1097.aros/WebCore/page/ContextMenuController.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -120,6 +120,15 @@
     }
 }
 
+static void openNewTab(const KURL& urlToLoad, Frame* frame)
+{
+    if (Page* oldPage = frame->page()) {
+        WindowFeatures features;
+        if (Page* newPage = oldPage->chrome()->createTab(frame, FrameLoadRequest(ResourceRequest(urlToLoad, frame->loader()->outgoingReferrer()))))
+            newPage->chrome()->show();
+    }
+}
+
 void ContextMenuController::contextMenuItemSelected(ContextMenuItem* item)
 {
     ASSERT(item->type() == ActionType || item->type() == CheckableActionType);
@@ -138,6 +147,9 @@
     case ContextMenuItemTagOpenLinkInNewWindow:
         openNewWindow(result.absoluteLinkURL(), frame);
         break;
+    case ContextMenuItemTagOpenLinkInNewTab:
+        openNewTab(result.absoluteLinkURL(), frame);
+        break;
     case ContextMenuItemTagDownloadLinkToDisk:
         // FIXME: Some day we should be able to do this from within WebCore.
         m_client->downloadURL(result.absoluteLinkURL());
@@ -148,6 +160,9 @@
     case ContextMenuItemTagOpenImageInNewWindow:
         openNewWindow(result.absoluteImageURL(), frame);
         break;
+    case ContextMenuItemTagOpenImageInNewTab:
+        openNewTab(result.absoluteImageURL(), frame);
+        break;
     case ContextMenuItemTagDownloadImageToDisk:
         // FIXME: Some day we should be able to do this from within WebCore.
         m_client->downloadURL(result.absoluteImageURL());
@@ -165,6 +180,14 @@
             openNewWindow(loader->url(), frame);
         break;
     }
+    case ContextMenuItemTagOpenFrameInNewTab: {
+        DocumentLoader* loader = frame->loader()->documentLoader();
+        if (!loader->unreachableURL().isEmpty())
+            openNewTab(loader->unreachableURL(), frame);
+        else
+            openNewTab(loader->url(), frame);
+        break;
+    }
     case ContextMenuItemTagCopy:
         frame->editor()->copy();
         break;
diff -ruN OWB-r1097/WebCore/page/EventHandler.cpp OWB-r1097.aros/WebCore/page/EventHandler.cpp
--- OWB-r1097/WebCore/page/EventHandler.cpp	2009-10-02 14:41:19.000000000 +0100
+++ OWB-r1097.aros/WebCore/page/EventHandler.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -1876,7 +1876,7 @@
     // Context menu events shouldn't select text in GTK+ applications or in Chromium.
     // FIXME: This should probably be configurable by embedders. Consider making it a WebPreferences setting.
     // See: https://bugs.webkit.org/show_bug.cgi?id=15279
-#if !PLATFORM(GTK) && !PLATFORM(CHROMIUM)
+#if !PLATFORM(GTK) && !PLATFORM(CHROMIUM) && !PLATFORM(AROS)
     if (!m_frame->selection()->contains(viewportPos) && 
         // FIXME: In the editable case, word selection sometimes selects content that isn't underneath the mouse.
         // If the selection is non-editable, we do word selection to make it easier to use the contextual menu items
diff -ruN OWB-r1097/WebCore/page/Settings.cpp OWB-r1097.aros/WebCore/page/Settings.cpp
--- OWB-r1097/WebCore/page/Settings.cpp	2009-10-12 11:20:21.000000000 +0100
+++ OWB-r1097.aros/WebCore/page/Settings.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -52,6 +52,13 @@
 bool Settings::gShouldUseHighResolutionTimers = true;
 #endif
 
+#if PLATFORM(AROS)
+bool Settings::gDecodesBMPWithDatatypes = false;
+bool Settings::gDecodesGIFWithDatatypes = false;
+bool Settings::gDecodesPNGWithDatatypes = false;
+bool Settings::gDecodesJPGWithDatatypes = false;
+#endif
+
 Settings::Settings(Page* page)
     : m_page(page)
     , m_editableLinkBehavior(EditableLinkDefaultBehavior)
@@ -475,6 +482,28 @@
 }
 #endif
 
+#if PLATFORM(AROS)
+void Settings::setDecodesBMPWithDatatypes(bool decodesBMPWithDatatypes)
+{
+    gDecodesBMPWithDatatypes = decodesBMPWithDatatypes;
+}
+
+void Settings::setDecodesGIFWithDatatypes(bool decodesGIFWithDatatypes)
+{
+    gDecodesGIFWithDatatypes = decodesGIFWithDatatypes;
+}
+
+void Settings::setDecodesPNGWithDatatypes(bool decodesPNGWithDatatypes)
+{
+    gDecodesPNGWithDatatypes = decodesPNGWithDatatypes;
+}
+
+void Settings::setDecodesJPGWithDatatypes(bool decodesJPGWithDatatypes)
+{
+    gDecodesJPGWithDatatypes = decodesJPGWithDatatypes;
+}
+#endif
+
 void Settings::setUsesEncodingDetector(bool usesEncodingDetector)
 {
     m_usesEncodingDetector = usesEncodingDetector;
diff -ruN OWB-r1097/WebCore/page/Settings.h OWB-r1097.aros/WebCore/page/Settings.h
--- OWB-r1097/WebCore/page/Settings.h	2009-10-12 11:20:21.000000000 +0100
+++ OWB-r1097.aros/WebCore/page/Settings.h	2017-04-01 14:57:02.745938516 +0100
@@ -275,6 +275,19 @@
         bool experimentalWebSocketsEnabled() const { return m_experimentalWebSocketsEnabled; }
 #endif
 
+#if PLATFORM(AROS)
+        static void setDecodesBMPWithDatatypes(bool);
+        static bool decodesBMPWithDatatypes() { return gDecodesBMPWithDatatypes; }
+
+        static void setDecodesGIFWithDatatypes(bool);
+        static bool decodesGIFWithDatatypes() { return gDecodesGIFWithDatatypes; }
+
+        static void setDecodesPNGWithDatatypes(bool);
+        static bool decodesPNGWithDatatypes() { return gDecodesPNGWithDatatypes; }
+
+        static void setDecodesJPGWithDatatypes(bool);
+        static bool decodesJPGWithDatatypes() { return gDecodesJPGWithDatatypes; }
+#endif
     private:
         Page* m_page;
         
@@ -354,6 +367,13 @@
 #if PLATFORM(WIN) || (PLATFORM(WIN_OS) && PLATFORM(WX))
         static bool gShouldUseHighResolutionTimers;
 #endif
+        
+#if PLATFORM(AROS)
+        static bool gDecodesBMPWithDatatypes;
+        static bool gDecodesGIFWithDatatypes;
+        static bool gDecodesPNGWithDatatypes;
+        static bool gDecodesJPGWithDatatypes;
+#endif
     };
 
 } // namespace WebCore
diff -ruN OWB-r1097/WebCore/plugins/CMakeLists.txt OWB-r1097.aros/WebCore/plugins/CMakeLists.txt
--- OWB-r1097/WebCore/plugins/CMakeLists.txt	2009-07-20 16:37:14.000000000 +0100
+++ OWB-r1097.aros/WebCore/plugins/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -48,6 +48,14 @@
             plugins/SDL/PluginViewSDL.cpp
         )
     endif(USE_GRAPHICS_SDL)
+
+    if(USE_GRAPHICS_AROS)
+        list(APPEND WEBCORE_SRC
+            plugins/SDL/PluginPackageSDL.cpp
+            plugins/SDL/PluginDataSDL.cpp
+            plugins/SDL/PluginViewSDL.cpp
+        )
+    endif(USE_GRAPHICS_AROS)
 else(ENABLE_NPAPI)
      list(APPEND WEBCORE_SRC
          plugins/PluginDataNone.cpp
diff -ruN OWB-r1097/WebCore/plugins/PluginView.cpp OWB-r1097.aros/WebCore/plugins/PluginView.cpp
--- OWB-r1097/WebCore/plugins/PluginView.cpp	2009-10-16 19:40:05.000000000 +0100
+++ OWB-r1097.aros/WebCore/plugins/PluginView.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -1185,7 +1185,7 @@
 {
     static RefPtr<Image> nullPluginImage;
     if (!nullPluginImage)
-        nullPluginImage = Image::loadPlatformResource("nullPlugin");
+        nullPluginImage = Image::loadPlatformResource("/nullPlugin");
 
     IntRect imageRect(frameRect().x(), frameRect().y(), nullPluginImage->width(), nullPluginImage->height());
 
@@ -1197,8 +1197,10 @@
     if (!rect.intersects(imageRect))
         return;
 
+    FrameView* frameView = static_cast<FrameView*>(parent());
+
     context->save();
-    context->clip(windowClipRect());
+    context->clip(frameView->windowToContents(windowClipRect()));
     context->drawImage(nullPluginImage.get(), imageRect.location());
     context->restore();
 }
diff -ruN OWB-r1097/WebCore/plugins/PluginViewNone.cpp OWB-r1097.aros/WebCore/plugins/PluginViewNone.cpp
--- OWB-r1097/WebCore/plugins/PluginViewNone.cpp	2009-10-05 11:36:03.000000000 +0100
+++ OWB-r1097.aros/WebCore/plugins/PluginViewNone.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -25,6 +25,7 @@
 
 #include "config.h"
 #include "PluginView.h"
+#include "FrameView.h"
 
 #include "NotImplemented.h"
 #include "PluginPackage.h"
@@ -48,9 +49,9 @@
     notImplemented();
 }
 
-void PluginView::paint(GraphicsContext*, const IntRect&)
+void PluginView::paint(GraphicsContext* context, const IntRect& rect)
 {
-    notImplemented();
+    paintMissingPluginIcon(context, rect);
 }
 
 void PluginView::handleKeyboardEvent(KeyboardEvent*)
@@ -63,9 +64,9 @@
     notImplemented();
 }
 
-void PluginView::setParent(ScrollView*)
+void PluginView::setParent(ScrollView* parent)
 {
-    notImplemented();
+    Widget::setParent(parent);
 }
 
 void PluginView::setNPWindowRect(const IntRect&)
@@ -125,7 +126,13 @@
 
 void PluginView::updatePluginWidget()
 {
-    notImplemented();
+    if (!parent() || !m_isWindowed)
+        return;
+
+    ASSERT(parent()->isFrameView());
+
+    FrameView* frameView = static_cast<FrameView*>(parent());
+    m_windowRect = IntRect(frameView->contentsToWindow(frameRect().location()), frameRect().size());
 }
 
 void PluginView::halt()
diff -ruN OWB-r1097/WebCore/xml/XPathGrammar.y OWB-r1097.aros/WebCore/xml/XPathGrammar.y
--- OWB-r1097/WebCore/xml/XPathGrammar.y	2009-07-17 16:00:45.000000000 +0100
+++ OWB-r1097.aros/WebCore/xml/XPathGrammar.y	2017-04-01 14:57:02.745938516 +0100
@@ -36,6 +36,7 @@
 #include "XPathParser.h"
 #include "XPathPath.h"
 #include "XPathPredicate.h"
+#include "XPathStep.h"
 #include "XPathVariableReference.h"
 #include <wtf/FastMalloc.h>
 
@@ -46,8 +47,6 @@
 #define YYLTYPE_IS_TRIVIAL 1
 #define YYDEBUG 0
 #define YYMAXDEPTH 10000
-#define YYPARSE_PARAM parserParameter
-#define PARSER static_cast<Parser*>(parserParameter)
 
 using namespace WebCore;
 using namespace XPath;
@@ -55,6 +54,7 @@
 %}
 
 %pure_parser
+%parse-param { WebCore::XPath::Parser* parser }
 
 %union
 {
@@ -73,7 +73,7 @@
 %{
 
 static int xpathyylex(YYSTYPE* yylval) { return Parser::current()->lex(yylval); }
-static void xpathyyerror(const char*) { }
+static void xpathyyerror(void*, const char*) { }
     
 %}
 
@@ -120,7 +120,7 @@
 Expr:
     OrExpr
     {
-        PARSER->m_topExpr = $1;
+        parser->m_topExpr = $1;
     }
     ;
 
@@ -140,7 +140,7 @@
     '/'
     {
         $$ = new LocationPath;
-        PARSER->registerParseNode($$);
+        parser->registerParseNode($$);
     }
     |
     '/' RelativeLocationPath
@@ -152,7 +152,7 @@
     {
         $$ = $2;
         $$->insertFirstStep($1);
-        PARSER->unregisterParseNode($1);
+        parser->unregisterParseNode($1);
     }
     ;
 
@@ -161,22 +161,22 @@
     {
         $$ = new LocationPath;
         $$->appendStep($1);
-        PARSER->unregisterParseNode($1);
-        PARSER->registerParseNode($$);
+        parser->unregisterParseNode($1);
+        parser->registerParseNode($$);
     }
     |
     RelativeLocationPath '/' Step
     {
         $$->appendStep($3);
-        PARSER->unregisterParseNode($3);
+        parser->unregisterParseNode($3);
     }
     |
     RelativeLocationPath DescendantOrSelf Step
     {
         $$->appendStep($2);
         $$->appendStep($3);
-        PARSER->unregisterParseNode($2);
-        PARSER->unregisterParseNode($3);
+        parser->unregisterParseNode($2);
+        parser->unregisterParseNode($3);
     }
     ;
 
@@ -185,58 +185,58 @@
     {
         if ($2) {
             $$ = new Step(Step::ChildAxis, *$1, *$2);
-            PARSER->deletePredicateVector($2);
+            parser->deletePredicateVector($2);
         } else
             $$ = new Step(Step::ChildAxis, *$1);
-        PARSER->deleteNodeTest($1);
-        PARSER->registerParseNode($$);
+        parser->deleteNodeTest($1);
+        parser->registerParseNode($$);
     }
     |
     NAMETEST OptionalPredicateList
     {
         String localName;
         String namespaceURI;
-        if (!PARSER->expandQName(*$1, localName, namespaceURI)) {
-            PARSER->m_gotNamespaceError = true;
+        if (!parser->expandQName(*$1, localName, namespaceURI)) {
+            parser->m_gotNamespaceError = true;
             YYABORT;
         }
         
         if ($2) {
             $$ = new Step(Step::ChildAxis, Step::NodeTest(Step::NodeTest::NameTest, localName, namespaceURI), *$2);
-            PARSER->deletePredicateVector($2);
+            parser->deletePredicateVector($2);
         } else
             $$ = new Step(Step::ChildAxis, Step::NodeTest(Step::NodeTest::NameTest, localName, namespaceURI));
-        PARSER->deleteString($1);
-        PARSER->registerParseNode($$);
+        parser->deleteString($1);
+        parser->registerParseNode($$);
     }
     |
     AxisSpecifier NodeTest OptionalPredicateList
     {
         if ($3) {
             $$ = new Step($1, *$2, *$3);
-            PARSER->deletePredicateVector($3);
+            parser->deletePredicateVector($3);
         } else
             $$ = new Step($1, *$2);
-        PARSER->deleteNodeTest($2);
-        PARSER->registerParseNode($$);
+        parser->deleteNodeTest($2);
+        parser->registerParseNode($$);
     }
     |
     AxisSpecifier NAMETEST OptionalPredicateList
     {
         String localName;
         String namespaceURI;
-        if (!PARSER->expandQName(*$2, localName, namespaceURI)) {
-            PARSER->m_gotNamespaceError = true;
+        if (!parser->expandQName(*$2, localName, namespaceURI)) {
+            parser->m_gotNamespaceError = true;
             YYABORT;
         }
 
         if ($3) {
             $$ = new Step($1, Step::NodeTest(Step::NodeTest::NameTest, localName, namespaceURI), *$3);
-            PARSER->deletePredicateVector($3);
+            parser->deletePredicateVector($3);
         } else
             $$ = new Step($1, Step::NodeTest(Step::NodeTest::NameTest, localName, namespaceURI));
-        PARSER->deleteString($2);
-        PARSER->registerParseNode($$);
+        parser->deleteString($2);
+        parser->registerParseNode($$);
     }
     |
     AbbreviatedStep
@@ -261,23 +261,23 @@
         else if (*$1 == "comment")
             $$ = new Step::NodeTest(Step::NodeTest::CommentNodeTest);
 
-        PARSER->deleteString($1);
-        PARSER->registerNodeTest($$);
+        parser->deleteString($1);
+        parser->registerNodeTest($$);
     }
     |
     PI '(' ')'
     {
         $$ = new Step::NodeTest(Step::NodeTest::ProcessingInstructionNodeTest);
-        PARSER->deleteString($1);        
-        PARSER->registerNodeTest($$);
+        parser->deleteString($1);        
+        parser->registerNodeTest($$);
     }
     |
     PI '(' LITERAL ')'
     {
         $$ = new Step::NodeTest(Step::NodeTest::ProcessingInstructionNodeTest, $3->stripWhiteSpace());
-        PARSER->deleteString($1);        
-        PARSER->deleteString($3);
-        PARSER->registerNodeTest($$);
+        parser->deleteString($1);        
+        parser->deleteString($3);
+        parser->registerNodeTest($$);
     }
     ;
 
@@ -295,14 +295,14 @@
     {
         $$ = new Vector<Predicate*>;
         $$->append(new Predicate($1));
-        PARSER->unregisterParseNode($1);
-        PARSER->registerPredicateVector($$);
+        parser->unregisterParseNode($1);
+        parser->registerPredicateVector($$);
     }
     |
     PredicateList Predicate
     {
         $$->append(new Predicate($2));
-        PARSER->unregisterParseNode($2);
+        parser->unregisterParseNode($2);
     }
     ;
 
@@ -317,7 +317,7 @@
     SLASHSLASH
     {
         $$ = new Step(Step::DescendantOrSelfAxis, Step::NodeTest(Step::NodeTest::AnyNodeTest));
-        PARSER->registerParseNode($$);
+        parser->registerParseNode($$);
     }
     ;
 
@@ -325,13 +325,13 @@
     '.'
     {
         $$ = new Step(Step::SelfAxis, Step::NodeTest(Step::NodeTest::AnyNodeTest));
-        PARSER->registerParseNode($$);
+        parser->registerParseNode($$);
     }
     |
     DOTDOT
     {
         $$ = new Step(Step::ParentAxis, Step::NodeTest(Step::NodeTest::AnyNodeTest));
-        PARSER->registerParseNode($$);
+        parser->registerParseNode($$);
     }
     ;
 
@@ -339,8 +339,8 @@
     VARIABLEREFERENCE
     {
         $$ = new VariableReference(*$1);
-        PARSER->deleteString($1);
-        PARSER->registerParseNode($$);
+        parser->deleteString($1);
+        parser->registerParseNode($$);
     }
     |
     '(' Expr ')'
@@ -351,15 +351,15 @@
     LITERAL
     {
         $$ = new StringExpression(*$1);
-        PARSER->deleteString($1);
-        PARSER->registerParseNode($$);
+        parser->deleteString($1);
+        parser->registerParseNode($$);
     }
     |
     NUMBER
     {
         $$ = new Number($1->toDouble());
-        PARSER->deleteString($1);
-        PARSER->registerParseNode($$);
+        parser->deleteString($1);
+        parser->registerParseNode($$);
     }
     |
     FunctionCall
@@ -371,8 +371,8 @@
         $$ = createFunction(*$1);
         if (!$$)
             YYABORT;
-        PARSER->deleteString($1);
-        PARSER->registerParseNode($$);
+        parser->deleteString($1);
+        parser->registerParseNode($$);
     }
     |
     FUNCTIONNAME '(' ArgumentList ')'
@@ -380,9 +380,9 @@
         $$ = createFunction(*$1, *$3);
         if (!$$)
             YYABORT;
-        PARSER->deleteString($1);
-        PARSER->deleteExpressionVector($3);
-        PARSER->registerParseNode($$);
+        parser->deleteString($1);
+        parser->deleteExpressionVector($3);
+        parser->registerParseNode($$);
     }
     ;
 
@@ -391,14 +391,14 @@
     {
         $$ = new Vector<Expression*>;
         $$->append($1);
-        PARSER->unregisterParseNode($1);
-        PARSER->registerExpressionVector($$);
+        parser->unregisterParseNode($1);
+        parser->registerExpressionVector($$);
     }
     |
     ArgumentList ',' Argument
     {
         $$->append($3);
-        PARSER->unregisterParseNode($3);
+        parser->unregisterParseNode($3);
     }
     ;
 
@@ -414,9 +414,9 @@
         $$ = new Union;
         $$->addSubExpression($1);
         $$->addSubExpression($3);
-        PARSER->unregisterParseNode($1);
-        PARSER->unregisterParseNode($3);
-        PARSER->registerParseNode($$);
+        parser->unregisterParseNode($1);
+        parser->unregisterParseNode($3);
+        parser->registerParseNode($$);
     }
     ;
 
@@ -432,9 +432,9 @@
     {
         $3->setAbsolute(true);
         $$ = new Path(static_cast<Filter*>($1), $3);
-        PARSER->unregisterParseNode($1);
-        PARSER->unregisterParseNode($3);
-        PARSER->registerParseNode($$);
+        parser->unregisterParseNode($1);
+        parser->unregisterParseNode($3);
+        parser->registerParseNode($$);
     }
     |
     FilterExpr DescendantOrSelf RelativeLocationPath
@@ -442,10 +442,10 @@
         $3->insertFirstStep($2);
         $3->setAbsolute(true);
         $$ = new Path(static_cast<Filter*>($1), $3);
-        PARSER->unregisterParseNode($1);
-        PARSER->unregisterParseNode($2);
-        PARSER->unregisterParseNode($3);
-        PARSER->registerParseNode($$);
+        parser->unregisterParseNode($1);
+        parser->unregisterParseNode($2);
+        parser->unregisterParseNode($3);
+        parser->registerParseNode($$);
     }
     ;
 
@@ -455,9 +455,9 @@
     PrimaryExpr PredicateList
     {
         $$ = new Filter($1, *$2);
-        PARSER->unregisterParseNode($1);
-        PARSER->deletePredicateVector($2);
-        PARSER->registerParseNode($$);
+        parser->unregisterParseNode($1);
+        parser->deletePredicateVector($2);
+        parser->registerParseNode($$);
     }
     ;
 
@@ -467,9 +467,9 @@
     OrExpr OR AndExpr
     {
         $$ = new LogicalOp(LogicalOp::OP_Or, $1, $3);
-        PARSER->unregisterParseNode($1);
-        PARSER->unregisterParseNode($3);
-        PARSER->registerParseNode($$);
+        parser->unregisterParseNode($1);
+        parser->unregisterParseNode($3);
+        parser->registerParseNode($$);
     }
     ;
 
@@ -479,9 +479,9 @@
     AndExpr AND EqualityExpr
     {
         $$ = new LogicalOp(LogicalOp::OP_And, $1, $3);
-        PARSER->unregisterParseNode($1);
-        PARSER->unregisterParseNode($3);
-        PARSER->registerParseNode($$);
+        parser->unregisterParseNode($1);
+        parser->unregisterParseNode($3);
+        parser->registerParseNode($$);
     }
     ;
 
@@ -491,9 +491,9 @@
     EqualityExpr EQOP RelationalExpr
     {
         $$ = new EqTestOp($2, $1, $3);
-        PARSER->unregisterParseNode($1);
-        PARSER->unregisterParseNode($3);
-        PARSER->registerParseNode($$);
+        parser->unregisterParseNode($1);
+        parser->unregisterParseNode($3);
+        parser->registerParseNode($$);
     }
     ;
 
@@ -503,9 +503,9 @@
     RelationalExpr RELOP AdditiveExpr
     {
         $$ = new EqTestOp($2, $1, $3);
-        PARSER->unregisterParseNode($1);
-        PARSER->unregisterParseNode($3);
-        PARSER->registerParseNode($$);
+        parser->unregisterParseNode($1);
+        parser->unregisterParseNode($3);
+        parser->registerParseNode($$);
     }
     ;
 
@@ -515,17 +515,17 @@
     AdditiveExpr PLUS MultiplicativeExpr
     {
         $$ = new NumericOp(NumericOp::OP_Add, $1, $3);
-        PARSER->unregisterParseNode($1);
-        PARSER->unregisterParseNode($3);
-        PARSER->registerParseNode($$);
+        parser->unregisterParseNode($1);
+        parser->unregisterParseNode($3);
+        parser->registerParseNode($$);
     }
     |
     AdditiveExpr MINUS MultiplicativeExpr
     {
         $$ = new NumericOp(NumericOp::OP_Sub, $1, $3);
-        PARSER->unregisterParseNode($1);
-        PARSER->unregisterParseNode($3);
-        PARSER->registerParseNode($$);
+        parser->unregisterParseNode($1);
+        parser->unregisterParseNode($3);
+        parser->registerParseNode($$);
     }
     ;
 
@@ -535,9 +535,9 @@
     MultiplicativeExpr MULOP UnaryExpr
     {
         $$ = new NumericOp($2, $1, $3);
-        PARSER->unregisterParseNode($1);
-        PARSER->unregisterParseNode($3);
-        PARSER->registerParseNode($$);
+        parser->unregisterParseNode($1);
+        parser->unregisterParseNode($3);
+        parser->registerParseNode($$);
     }
     ;
 
@@ -548,8 +548,8 @@
     {
         $$ = new Negative;
         $$->addSubExpression($2);
-        PARSER->unregisterParseNode($2);
-        PARSER->registerParseNode($$);
+        parser->unregisterParseNode($2);
+        parser->registerParseNode($$);
     }
     ;
 
diff -ruN OWB-r1097/WebCore/xml/XPathParser.cpp OWB-r1097.aros/WebCore/xml/XPathParser.cpp
--- OWB-r1097/WebCore/xml/XPathParser.cpp	2008-12-10 09:32:50.000000000 +0000
+++ OWB-r1097.aros/WebCore/xml/XPathParser.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -35,20 +35,17 @@
 #include "XPathEvaluator.h"
 #include "XPathException.h"
 #include "XPathNSResolver.h"
+#include "XPathPath.h"
 #include "XPathStep.h"
 #include <wtf/StdLibExtras.h>
 
-int xpathyyparse(void*);
-
+using namespace WebCore;
 using namespace WTF;
 using namespace Unicode;
+using namespace XPath;
 
-namespace WebCore {
-namespace XPath {
-
-class LocationPath;
-
-#include "XPathGrammar.h"    
+extern int xpathyyparse(WebCore::XPath::Parser*);
+#include "XPathGrammar.h"
 
 Parser* Parser::currentParser = 0;
     
@@ -476,6 +473,7 @@
     Parser* oldParser = currentParser;
     currentParser = this;
     int parseError = xpathyyparse(this);
+
     currentParser = oldParser;
 
     if (parseError) {
@@ -630,7 +628,4 @@
     delete t;
 }
 
-}
-}
-
 #endif // ENABLE(XPATH)
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateAROS.cpp OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateAROS.cpp
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,106 @@
+#include <wtf/OwnPtr.h>
+#include "WebDownload.h"
+#include "WebURLResponse.h"
+#include "DownloadDelegateAROS.h"
+#include "CString.h"
+
+extern "C" {
+#include <proto/intuition.h>
+#include <proto/alib.h>
+}
+
+#include <aros/debug.h>
+
+DownloadDelegateAROS::DownloadDelegateAROS()
+{
+}
+
+DownloadDelegateAROS::~DownloadDelegateAROS()
+{
+    D(bug("DownloadDelegateAROS::~DownloadDelegateAROS\n"));
+}
+
+void DownloadDelegateAROS::decideDestinationWithSuggestedFilename(WebDownload *download, const char* fileName)
+{
+    D(bug("DownloadDelegateAROS::decideDestinationWithSuggestedFilename(%s)\n", fileName));
+    
+    if(fileName)
+    {
+        if(delegate)
+            DoMethod(delegate, MUIM_DownloadDelegate_DecideDestinationWithSuggestedFilename, download, fileName);
+        else
+        {
+            char destination[1024];
+            snprintf(destination, sizeof(destination), "T:%s", fileName);
+            download->setDestination(destination, true);
+        }
+    }
+}
+
+void DownloadDelegateAROS::didCancelAuthenticationChallenge(WebDownload* download, WebURLAuthenticationChallenge* challenge)
+{
+    D(bug("DownloadDelegateAROS %p - didCancelAuthenticationChallenge %p\n", download, challenge));
+}
+
+void DownloadDelegateAROS::didCreateDestination(WebDownload* download, const char *destination)
+{
+    D(bug("DownloadDelegateAROS %p - didCreateDestination %s\n", download, destination));
+}
+
+void DownloadDelegateAROS::didReceiveAuthenticationChallenge(WebDownload* download, WebURLAuthenticationChallenge* challenge)
+{
+    D(bug("DownloadDelegateAROS %p - didReceiveAuthenticationChallenge %p\n", download, challenge));
+}
+
+void DownloadDelegateAROS::didReceiveDataOfLength(WebDownload* download, unsigned length)
+{
+    D(bug("DownloadDelegateAROS %p - didReceiveDataOfLength %p %d\n", download, length));
+    if(delegate)
+        DoMethod(delegate, MUIM_DownloadDelegate_DidReceiveDataOfLength, download, length);
+}
+
+void DownloadDelegateAROS::didReceiveResponse(WebDownload* download, WebURLResponse* response)
+{
+    D(bug("DownloadDelegateAROS %p - didReceiveResponse %p\n", download, response));
+
+    if(delegate)
+        DoMethod(delegate, MUIM_DownloadDelegate_DidReceiveExpectedContentLength, download, response->expectedContentLength());
+}
+
+void DownloadDelegateAROS::willResumeWithResponse(WebDownload* download, WebURLResponse* response, long long fromByte)
+{
+    D(bug("DownloadDelegateAROS %p - willResumeWithResponse %p, %q\n", download, response, fromByte));
+}
+
+WebMutableURLRequest* DownloadDelegateAROS::willSendRequest(WebDownload* download, WebMutableURLRequest* request, WebURLResponse* redirectResponse)
+{
+    D(bug("DownloadDelegateAROS %p - willSendRequest %p %p\n", download, request, redirectResponse));
+    return request;
+}
+
+bool DownloadDelegateAROS::shouldDecodeSourceDataOfMIMEType(WebDownload*, const char*)
+{
+    return false;
+}
+
+void DownloadDelegateAROS::didBegin(WebDownload* download)
+{
+    D(bug("DownloadDelegateAROS %p - didBegin\n", download));
+    registerDownload(download);
+    if(delegate)
+        DoMethod(delegate, MUIM_DownloadDelegate_DidBeginDownload, download);
+}
+
+void DownloadDelegateAROS::didFinish(WebDownload* download)
+{
+    if(delegate)
+        DoMethod(delegate, MUIM_DownloadDelegate_DidFinishDownload, download);
+    D(bug("DownloadDelegateAROS %p - didFinish\n", download));
+    unregisterDownload(download);
+}
+
+void DownloadDelegateAROS::didFailWithError(WebDownload* download, WebError* error)
+{
+    if(delegate)
+        DoMethod(delegate, MUIM_DownloadDelegate_DidFailWithError, download);
+}
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateAROS.h OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateAROS.h
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,41 @@
+#ifndef _DOWNLOADDELEGATEAROS_H
+#define _DOWNLOADDELEGATEAROS_H
+
+#include "WebDownloadDelegate.h"
+#include "DownloadDelegateZune.h"
+
+class DownloadDelegateAROS : public WebDownloadDelegate
+{
+public:
+    static DownloadDelegateAROS* createInstance()
+    {
+	static DownloadDelegateAROS *instance = NULL;
+	if(!instance)
+	    instance = new DownloadDelegateAROS();
+	return instance;
+    }
+    void setDownloadDelegateZune(Object *delegate)
+    {
+	this->delegate = delegate;
+    }
+    ~DownloadDelegateAROS();
+private:
+    DownloadDelegateAROS();
+    Object *delegate; /* Zune proxy object */
+    void decideDestinationWithSuggestedFilename(WebDownload *download, const char* filename);
+    void didCancelAuthenticationChallenge(WebDownload* download, WebURLAuthenticationChallenge* challenge);
+    void didCreateDestination(WebDownload* download, const char* destination);
+    void didReceiveAuthenticationChallenge(WebDownload* download, WebURLAuthenticationChallenge* challenge);
+    void didReceiveDataOfLength(WebDownload* download, unsigned length);
+    void didReceiveResponse(WebDownload* download, WebURLResponse* response);
+    void didReceiveExpectedContentLength(WebDownload* download, long long contentLength);
+    void willResumeWithResponse(WebDownload* download, WebURLResponse* response, long long fromByte);
+    WebMutableURLRequest* willSendRequest(WebDownload* download, WebMutableURLRequest* request, WebURLResponse* redirectResponse);
+    bool shouldDecodeSourceDataOfMIMEType(WebDownload*, const char*);
+    void didBegin(WebDownload* download);
+    void didFinish(WebDownload* download);
+    void didFailWithError(WebDownload* download, WebError* error);
+    void didCreateDownload(WebDownload* download);
+};
+
+#endif
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateZune.cpp OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateZune.cpp
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateZune.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateZune.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,75 @@
+#include "WebDownload.h"
+
+#include "DownloadDelegateAROS.h"
+#include "DownloadDelegateZune.h"
+#include "DownloadDelegateZune_private.h"
+
+extern "C" {
+#include <proto/muimaster.h>
+#include <libraries/mui.h>
+#include <proto/intuition.h>
+#include <proto/alib.h>
+#include <aros/debug.h>
+#include <aros/symbolsets.h>
+#include <zune/customclasses.h>
+}
+
+#include <cstring>
+
+/*** Methods ****************************************************************/
+Object *DownloadDelegate__OM_NEW
+(
+    Class *CLASS, Object *self, struct opSet *message 
+)
+{
+    D(bug("DownloadDelegate__OM_NEW\n"));
+    
+    self = (Object *) DoSuperNewTags
+    (
+        CLASS, self, NULL,
+        TAG_MORE, (IPTR) message->ops_AttrList
+    );
+    
+    if (self == NULL)
+	return NULL;
+
+    DownloadDelegateAROS *delegate = DownloadDelegateAROS::createInstance();
+    delegate->setDownloadDelegateZune(self);
+    
+    return self;
+}
+
+IPTR DownloadDelegate__OM_DISPOSE(struct IClass *cl, Object *obj, Msg msg)
+{
+    D(bug("DownloadDelegate__OM_DISPOSE\n"));
+    DownloadDelegateAROS *delegate = DownloadDelegateAROS::createInstance();
+    delegate->setDownloadDelegateZune(NULL);
+    delete delegate;
+    
+    return DoSuperMethodA(cl,obj,msg);
+}
+
+IPTR DownloadDelegate__MUIM_DownloadDelegate_CancelDownload(Class *CLASS, Object *obj, struct MUIP_DownloadDelegate_CancelDownload *msg)
+{
+    WebDownload *download = (WebDownload*) msg->download;
+    download->cancel();
+    return 0;
+}
+
+IPTR DownloadDelegate__MUIM_DownloadDelegate_SetDestination(Class *CLASS, Object *obj, struct MUIP_DownloadDelegate_SetDestination *msg)
+{
+    WebDownload *download = (WebDownload*) msg->download;
+    D(bug("MUIM_DownloadDelegate_SetDestination(%s)\n", msg->destination));
+    download->setDestination(msg->destination, true);
+    return 0;
+}
+
+/*** Setup ******************************************************************/
+ZUNE_CUSTOMCLASS_4
+(
+    DownloadDelegate, NULL, MUIC_Window, NULL,
+    OM_NEW, struct opSet*,
+    OM_DISPOSE, Msg,
+    MUIM_DownloadDelegate_CancelDownload, struct MUIP_DownloadDelegate_CancelDownload*,
+    MUIM_DownloadDelegate_SetDestination, struct MUIP_DownloadDelegate_SetDestination*
+);
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateZune.h OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateZune.h
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateZune.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateZune.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,37 @@
+#ifndef _DOWNLOADDELEGATEZUNE_H
+#define _DOWNLOADDELEGATEZUNE_H
+
+#include <libraries/mui.h>
+
+/*** Identifier base ********************************************************/
+#define MUIB_DownloadDelegate              	(TAG_USER | 0x10000000)
+
+/*** Public Methods *********************************************************/
+#define MUIM_DownloadDelegate_DidCreateDownload				(MUIB_DownloadDelegate|0x00000000)
+struct  MUIP_DownloadDelegate_DidCreateDownload				{STACKED ULONG MethodID; STACKED void *download;};
+#define MUIM_DownloadDelegate_DidDestroyDownload			(MUIB_DownloadDelegate|0x00000001)
+struct  MUIP_DownloadDelegate_DidDestroyDownload			{STACKED ULONG MethodID; STACKED void *download;};
+#define MUIM_DownloadDelegate_DidBeginDownload				(MUIB_DownloadDelegate|0x00000002)
+struct  MUIP_DownloadDelegate_DidBeginDownload				{STACKED ULONG MethodID; STACKED void *download;};
+#define MUIM_DownloadDelegate_DidFinishDownload				(MUIB_DownloadDelegate|0x00000003)
+struct  MUIP_DownloadDelegate_DidFinishDownload				{STACKED ULONG MethodID; STACKED void *download;};
+#define MUIM_DownloadDelegate_DidReceiveExpectedContentLength   	(MUIB_DownloadDelegate|0x00000004)
+struct  MUIP_DownloadDelegate_DidReceiveExpectedContentLength   	{STACKED ULONG MethodID; STACKED void *download; STACKED long long length;};
+#define MUIM_DownloadDelegate_DidReceiveDataOfLength			(MUIB_DownloadDelegate|0x00000005)
+struct  MUIP_DownloadDelegate_DidReceiveDataOfLength			{STACKED ULONG MethodID; STACKED void *download; ; STACKED unsigned length;};
+#define MUIM_DownloadDelegate_DecideDestinationWithSuggestedFilename	(MUIB_DownloadDelegate|0x00000006)
+struct  MUIP_DownloadDelegate_DecideDestinationWithSuggestedFilename	{STACKED ULONG MethodID; STACKED void *download; STACKED char *filename;};
+#define MUIM_DownloadDelegate_CancelDownload				(MUIB_DownloadDelegate|0x00000007)
+struct  MUIP_DownloadDelegate_CancelDownload				{STACKED ULONG MethodID; STACKED void *download;};
+#define MUIM_DownloadDelegate_SetDestination				(MUIB_DownloadDelegate|0x00000008)
+struct  MUIP_DownloadDelegate_SetDestination				{STACKED ULONG MethodID; STACKED void *download; STACKED char *destination;};
+#define MUIM_DownloadDelegate_DidFailWithError				(MUIB_DownloadDelegate|0x00000009)
+struct  MUIP_DownloadDelegate_DidFailWithError				{STACKED ULONG MethodID; STACKED void *download;};
+
+/*** Variables **************************************************************/
+extern struct MUI_CustomClass *DownloadDelegate_CLASS;
+
+/*** Macros *****************************************************************/
+#define DownloadDelegateObject BOOPSIOBJMACRO_START(DownloadDelegate_CLASS->mcc_Class)
+
+#endif
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateZune_private.h OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateZune_private.h
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateZune_private.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/DownloadDelegateZune_private.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,6 @@
+#ifndef _DOWNLOADDELEGATEZUNE_PRIVATE_H
+#define _DOWNLOADDELEGATEZUNE_PRIVATE_H
+
+struct DownloadDelegate_DATA {};
+
+#endif
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/PolicyDelegateAROS.cpp OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/PolicyDelegateAROS.cpp
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/PolicyDelegateAROS.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/PolicyDelegateAROS.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,139 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ * Copyright (C) 2009 Stanislaw Szymczyk
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "PolicyDelegateAROS.h"
+#include "WebActionPropertyBag.h"
+#include "WebFramePolicyListener.h"
+#include "WebError.h"
+#include "WebFrame.h"
+#include "WebView.h"
+#include "WebMutableURLRequest.h"
+
+#include <PlatformString.h>
+#include "CString.h"
+#include <sys/types.h> 
+#include <sys/stat.h> 
+#include <unistd.h> 
+
+#if PLATFORM(AROS)
+extern "C" {
+#include <proto/intuition.h>
+#include <proto/alib.h>
+#include "WebViewZune.h"
+#include <aros/debug.h>
+}
+#endif
+
+using namespace WebCore;
+
+PolicyDelegateAROS* PolicyDelegateAROS::sharedInstance()
+{
+    static PolicyDelegateAROS shared = *PolicyDelegateAROS::createInstance();
+    return &shared;
+}
+
+PolicyDelegateAROS* PolicyDelegateAROS::createInstance()
+{
+    PolicyDelegateAROS* instance = new PolicyDelegateAROS();
+    return instance;
+}
+
+void PolicyDelegateAROS::decidePolicyForMIMEType(
+    /*[in]*/ WebView* webView, 
+    /*[in]*/ const char* type, 
+    /*[in]*/ WebMutableURLRequest* request, 
+    /*[in]*/ WebFrame* /*frame*/, 
+    /*[in]*/ WebFramePolicyListener* listener)
+{
+    bool canShowMIMEType = webView->canShowMIMEType(type);
+
+    if (!canShowMIMEType && type && 0 == strlen(type))
+        canShowMIMEType = true;
+
+    String url = request->URL();
+
+    if (url.startsWith("file:")) {
+        bool isDirectory = false;
+        struct stat st;
+        String path = request->resourceRequest().url().path();
+        if (path.startsWith("/"))
+            path = path.substring(1);
+        if (stat(path.utf8().data(), &st))
+            isDirectory = S_ISDIR(st.st_mode);
+
+        if (isDirectory)
+            listener->ignore();
+        else if(canShowMIMEType)
+            listener->use();
+        else
+        {
+            BalWidget* viewWindow = webView->viewWindow();
+            if(viewWindow)
+            {
+        	String fileName = request->URL().substring(request->resourceRequest().url().pathAfterLastSlash());
+                switch(DoMethod(viewWindow, MUIM_WebView_RequestPolicy, fileName.utf8().data(), type))
+                {
+                default:
+                case MUIV_WebView_Policy_Ignore:
+                    listener->ignore();
+                    break;
+                case MUIV_WebView_Policy_Use:
+                    listener->use();
+                    break;
+                case MUIV_WebView_Policy_Download:
+                    listener->download();
+                    break;
+                }
+            }
+        }
+    } else if (canShowMIMEType)
+        listener->use();
+    else
+    {
+	BalWidget* viewWindow = webView->viewWindow();
+	if(viewWindow)
+	{
+	    String fileName = request->URL().substring(request->resourceRequest().url().pathAfterLastSlash());
+	    switch(DoMethod(viewWindow, MUIM_WebView_RequestPolicy, fileName.utf8().data(), type))
+	    {
+	    default:
+	    case MUIV_WebView_Policy_Ignore:
+		listener->ignore();
+		break;
+	    case MUIV_WebView_Policy_Use:
+		listener->use();
+		break;
+	    case MUIV_WebView_Policy_Download:
+		listener->download();
+		break;
+	    }
+	}
+    }
+}
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/PolicyDelegateAROS.h OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/PolicyDelegateAROS.h
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/PolicyDelegateAROS.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/PolicyDelegateAROS.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,87 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ * Copyright (C) 2009 Stanislaw Szymczyk
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef PolicyDelegateAROS_h
+#define PolicyDelegateAROS_h
+
+#include "DefaultPolicyDelegate.h"
+
+class PolicyDelegateAROS : public DefaultPolicyDelegate {
+public:
+
+    /**
+     * get shared instance
+     * @param[out]: PolicyDelegateAROS
+     * @code
+     * PolicyDelegateAROS *d = PolicyDelegateAROS::sharedInstance();
+     * @endcode
+     */
+    static PolicyDelegateAROS* sharedInstance();
+
+    /**
+     * create new instance of PolicyDelegateAROS
+     * @param[out]: PolicyDelegateAROS
+     * @code
+     * PolicyDelegateAROS *d = PolicyDelegateAROS::createInstance();
+     * @endcode
+     */
+    static PolicyDelegateAROS* createInstance();
+private:
+
+    /**
+     * PolicyDelegateAROS default constructor
+     */
+    PolicyDelegateAROS() { };
+public:
+
+    /**
+     * PolicyDelegateAROS destructor
+     */
+    virtual ~PolicyDelegateAROS() { };
+  
+    /**
+     * decide policy for MIMEType
+     * @param[in]: WebView
+     * @param[in]: type
+     * @param[in]: WebMutableURLRequest
+     * @param[in]: WebFrame
+     * @param[in]: WebFramePolicyListener
+     * @code
+     * d->decidePolicyForMIMEType(webView, type, request, frame, listener);
+     * @endcode
+     */
+    virtual void decidePolicyForMIMEType( 
+        /* [in] */ WebView *webView,
+        /* [in] */ const char* type,
+        /* [in] */ WebMutableURLRequest *request,
+        /* [in] */ WebFrame *frame,
+        /* [in] */ WebFramePolicyListener *listener);
+};
+
+#endif // PolicyDelegateAROS_h
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebPreferencesZune.cpp OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebPreferencesZune.cpp
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebPreferencesZune.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebPreferencesZune.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,363 @@
+#include "config.h"
+#include "Settings.h"
+#include "WebPreferences.h"
+#include "ResourceHandleManager.h"
+
+#include "WebPreferencesZune.h"
+#include "WebPreferencesZune_private.h"
+
+#include "PlatformString.h"
+#include "CString.h"
+
+extern "C" {
+#include <proto/muimaster.h>
+#include <libraries/mui.h>
+#include <proto/intuition.h>
+#include <proto/alib.h>
+#include <proto/utility.h>
+#include <aros/debug.h>
+#include <aros/symbolsets.h>
+#include <zune/customclasses.h>
+}
+
+#include <cstring>
+
+/*** Methods ****************************************************************/
+Object *WebPreferences__OM_NEW(Class *CLASS, Object *self, struct opSet *message)
+{
+    struct WebPreferences_DATA *data;
+    D(bug("WebPreferences__OM_NEW\n"));
+    
+    self = (Object *) DoSuperNewTags
+    (
+        CLASS, self, NULL,
+        TAG_MORE, (IPTR) message->ops_AttrList	
+    );
+    
+    if (self == NULL)
+	return NULL;
+
+    data = (struct WebPreferences_DATA *) INST_DATA(CLASS, self);
+    data->preferences = WebPreferences::sharedStandardPreferences();
+    data->cookieJarFileName = NULL;
+    
+    /* Click Close window with close gadget */
+    DoMethod(self, MUIM_Notify, MUIA_Window_CloseRequest, (IPTR) TRUE,
+        (IPTR) self,  (IPTR) 3,
+        MUIM_Set, MUIA_Window_Open, (IPTR) FALSE);
+
+    return self;
+}
+
+IPTR WebPreferences__OM_DISPOSE(struct IClass *cl, Object *obj, Msg msg)
+{
+    struct WebPreferences_DATA *data = (struct WebPreferences_DATA *) INST_DATA(cl, obj);
+    if(data->cookieJarFileName)
+	FreeVec((APTR) data->cookieJarFileName);
+    return DoSuperMethodA(cl,obj,msg);
+}
+
+IPTR WebPreferences__OM_SET(Class *cl, Object *obj, struct opSet *msg)
+{
+    struct WebPreferences_DATA *data = (struct WebPreferences_DATA *) INST_DATA(cl, obj);
+    struct TagItem *tags  = msg->ops_AttrList;
+    struct TagItem *tag;
+
+    while ((tag = NextTagItem(&tags)) != NULL)
+    {
+    	switch(tag->ti_Tag)
+	{
+            case MUIA_WebPreferences_StandardFontFamily:
+        	data->preferences->setStandardFontFamily((const char *)tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_FixedFontFamily:
+        	data->preferences->setFixedFontFamily((const char *)tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_SerifFontFamily:
+        	data->preferences->setSerifFontFamily((const char *)tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_SansSerifFontFamily:
+        	data->preferences->setSansSerifFontFamily((const char *)tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_CursiveFontFamily:
+        	data->preferences->setCursiveFontFamily((const char *)tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_FantasyFontFamily:
+        	data->preferences->setFantasyFontFamily((const char *)tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_DefaultFontSize:
+        	data->preferences->setDefaultFontSize((int) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_DefaultFixedFontSize:
+        	data->preferences->setDefaultFixedFontSize((int) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_MinimumFontSize:
+        	data->preferences->setMinimumFontSize((int) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_MinimumLogicalFontSize:
+        	data->preferences->setMinimumLogicalFontSize((int) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_DefaultTextEncodingName:
+        	data->preferences->setDefaultTextEncodingName((const char *)tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_UserStyleSheetEnabled:
+        	data->preferences->setUserStyleSheetEnabled((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_UserStyleSheetLocation:
+        	data->preferences->setUserStyleSheetLocation((const char *)tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_JavaEnabled:
+        	data->preferences->setJavaEnabled((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_JavaScriptEnabled:
+        	data->preferences->setJavaScriptEnabled((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_JavaScriptCanOpenWindowsAutomatically:
+        	data->preferences->setJavaScriptCanOpenWindowsAutomatically((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_PlugInsEnabled:
+        	data->preferences->setPlugInsEnabled((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_AllowsAnimatedImages:
+        	data->preferences->setAllowsAnimatedImages((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_AllowAnimatedImageLooping:
+        	data->preferences->setAllowAnimatedImageLooping((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_LoadsImagesAutomatically:
+        	data->preferences->setLoadsImagesAutomatically((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_Autosaves:
+        	data->preferences->setAutosaves((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_ShouldPrintBackgrounds:
+        	data->preferences->setShouldPrintBackgrounds((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_PrivateBrowsingEnabled:
+        	data->preferences->setPrivateBrowsingEnabled((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_TabsToLinks:
+        	data->preferences->setTabsToLinks((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_UsesPageCache:
+        	data->preferences->setUsesPageCache((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_TextAreasAreResizable:
+        	data->preferences->setTextAreasAreResizable((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_HistoryItemLimit:
+        	data->preferences->setHistoryItemLimit((int) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_HistoryAgeInDaysLimit:
+        	data->preferences->setHistoryAgeInDaysLimit((int) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_IconDatabaseLocation:
+        	data->preferences->setIconDatabaseLocation((const char *)tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_IconDatabaseEnabled:
+        	data->preferences->setIconDatabaseEnabled((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_FontSmoothing:
+                switch(tag->ti_Data)
+                {
+                    case MUIV_WebPreferences_FontSmoothingTypeStandard:
+                        data->preferences->setFontSmoothing(FontSmoothingTypeStandard);
+                        break;
+                    case MUIV_WebPreferences_FontSmoothingTypeLight:
+                        data->preferences->setFontSmoothing(FontSmoothingTypeLight);
+                        break;
+                    case MUIV_WebPreferences_FontSmoothingTypeMedium:
+                        data->preferences->setFontSmoothing(FontSmoothingTypeMedium);
+                        break;
+                    case MUIV_WebPreferences_FontSmoothingTypeStrong:
+                        data->preferences->setFontSmoothing(FontSmoothingTypeStrong);
+                        break;
+                    case MUIV_WebPreferences_FontSmoothingTypeWindows:
+                        data->preferences->setFontSmoothing(FontSmoothingTypeWindows);
+                        break;
+                }
+                break;
+            case MUIA_WebPreferences_DecodesBMPWithDatatypes:
+        	WebCore::Settings::setDecodesBMPWithDatatypes((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_DecodesPNGWithDatatypes:
+        	WebCore::Settings::setDecodesPNGWithDatatypes((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_DecodesGIFWithDatatypes:
+        	WebCore::Settings::setDecodesGIFWithDatatypes((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_DecodesJPGWithDatatypes:
+        	WebCore::Settings::setDecodesJPGWithDatatypes((bool) tag->ti_Data);
+                break;
+            case MUIA_WebPreferences_CookieJarFileName:
+        	WebCore::ResourceHandleManager::sharedInstance()->setCookieJarFileName((const char *)tag->ti_Data);
+        	if(data->cookieJarFileName)
+        	    FreeVec((APTR) data->cookieJarFileName);
+        	data->cookieJarFileName = StrDup((CONST_STRPTR)tag->ti_Data);
+        	break;
+	} /* switch(tag->ti_Tag) */
+	
+    } /* while ((tag = NextTagItem(&tags)) != NULL) */
+    
+    return DoSuperMethodA(cl, obj, (Msg)msg);
+}
+
+IPTR WebPreferences__OM_GET(Class *cl, Object *obj, struct opGet *msg)
+{
+    struct WebPreferences_DATA *data = (struct WebPreferences_DATA *) INST_DATA(cl, obj);
+    IPTR retval = TRUE;
+    static WebCore::CString tmpString; /* Ugly static buffer */
+    
+    switch(msg->opg_AttrID)
+    {
+        case MUIA_WebPreferences_StandardFontFamily:
+            tmpString = data->preferences->standardFontFamily().latin1();
+            *(const char **)msg->opg_Storage = tmpString.data();
+            break;
+        case MUIA_WebPreferences_FixedFontFamily:
+            tmpString = data->preferences->fixedFontFamily().latin1();
+            *(const char **)msg->opg_Storage = tmpString.data();
+            break;
+        case MUIA_WebPreferences_SerifFontFamily:
+            tmpString = data->preferences->serifFontFamily().latin1();
+            *(const char **)msg->opg_Storage = tmpString.data();
+            break;
+        case MUIA_WebPreferences_SansSerifFontFamily:
+            tmpString = data->preferences->sansSerifFontFamily().latin1();
+            *(const char **)msg->opg_Storage = tmpString.data();
+            break;
+        case MUIA_WebPreferences_CursiveFontFamily:
+            tmpString = data->preferences->cursiveFontFamily().latin1();
+            *(const char **)msg->opg_Storage = tmpString.data();
+            break;
+        case MUIA_WebPreferences_FantasyFontFamily:
+            tmpString = data->preferences->fantasyFontFamily().latin1();
+            *(const char **)msg->opg_Storage = tmpString.data();
+            break;
+        case MUIA_WebPreferences_DefaultFontSize:
+            *(int *)msg->opg_Storage = (int) data->preferences->defaultFontSize();
+            break;
+        case MUIA_WebPreferences_DefaultFixedFontSize:
+            *(int *)msg->opg_Storage = (int) data->preferences->defaultFixedFontSize();
+            break;
+        case MUIA_WebPreferences_MinimumFontSize:
+            *(int *)msg->opg_Storage = (int) data->preferences->minimumFontSize();
+            break;
+        case MUIA_WebPreferences_MinimumLogicalFontSize:
+            *(int *)msg->opg_Storage = (int) data->preferences->minimumLogicalFontSize();
+            break;
+        case MUIA_WebPreferences_DefaultTextEncodingName:
+            tmpString = data->preferences->defaultTextEncodingName().latin1();
+            *(const char **)msg->opg_Storage = tmpString.data();
+            break;
+        case MUIA_WebPreferences_UserStyleSheetEnabled:
+            *(int *)msg->opg_Storage = (int) data->preferences->userStyleSheetEnabled();
+            break;
+        case MUIA_WebPreferences_UserStyleSheetLocation:
+            tmpString = data->preferences->userStyleSheetLocation().latin1();
+            *(const char **)msg->opg_Storage = tmpString.data();
+            break;
+        case MUIA_WebPreferences_JavaEnabled:
+            *(int *)msg->opg_Storage = (int) data->preferences->isJavaEnabled();
+            break;
+        case MUIA_WebPreferences_JavaScriptEnabled:
+            *(int *)msg->opg_Storage = (int) data->preferences->isJavaScriptEnabled();
+            break;
+        case MUIA_WebPreferences_JavaScriptCanOpenWindowsAutomatically:
+            *(int *)msg->opg_Storage = (int) data->preferences->javaScriptCanOpenWindowsAutomatically();
+            break;
+        case MUIA_WebPreferences_PlugInsEnabled:
+            *(int *)msg->opg_Storage = (int) data->preferences->arePlugInsEnabled();
+            break;
+        case MUIA_WebPreferences_AllowsAnimatedImages:
+            *(int *)msg->opg_Storage = (int) data->preferences->allowsAnimatedImages();
+            break;
+        case MUIA_WebPreferences_AllowAnimatedImageLooping:
+            *(int *)msg->opg_Storage = (int) data->preferences->allowAnimatedImageLooping();
+            break;
+        case MUIA_WebPreferences_LoadsImagesAutomatically:
+            *(int *)msg->opg_Storage = (int) data->preferences->loadsImagesAutomatically();
+            break;
+        case MUIA_WebPreferences_Autosaves:
+            *(int *)msg->opg_Storage = (int) data->preferences->autosaves();
+            break;
+        case MUIA_WebPreferences_ShouldPrintBackgrounds:
+            *(int *)msg->opg_Storage = (int) data->preferences->shouldPrintBackgrounds();
+            break;
+        case MUIA_WebPreferences_PrivateBrowsingEnabled:
+            *(int *)msg->opg_Storage = (int) data->preferences->privateBrowsingEnabled();
+            break;
+        case MUIA_WebPreferences_TabsToLinks:
+            *(int *)msg->opg_Storage = (int) data->preferences->tabsToLinks();
+            break;
+        case MUIA_WebPreferences_UsesPageCache:
+            *(int *)msg->opg_Storage = (int) data->preferences->usesPageCache();
+            break;
+        case MUIA_WebPreferences_TextAreasAreResizable:
+            *(int *)msg->opg_Storage = (int) data->preferences->textAreasAreResizable();
+            break;
+        case MUIA_WebPreferences_HistoryItemLimit:
+            *(int *)msg->opg_Storage = (int) data->preferences->historyItemLimit();
+            break;
+        case MUIA_WebPreferences_HistoryAgeInDaysLimit:
+            *(int *)msg->opg_Storage = (int) data->preferences->historyAgeInDaysLimit();
+            break;
+        case MUIA_WebPreferences_IconDatabaseLocation:
+            tmpString = data->preferences->iconDatabaseLocation().latin1();
+            *(const char **)msg->opg_Storage = tmpString.data();
+            break;
+        case MUIA_WebPreferences_IconDatabaseEnabled:
+            *(int *)msg->opg_Storage = (int) data->preferences->iconDatabaseEnabled();
+            break;
+        case MUIA_WebPreferences_FontSmoothing:
+            switch(data->preferences->fontSmoothing())
+            {
+                case FontSmoothingTypeStandard:
+                    *(int *)msg->opg_Storage = MUIV_WebPreferences_FontSmoothingTypeStandard;
+                    break;
+                case FontSmoothingTypeLight:
+                    *(int *)msg->opg_Storage = MUIV_WebPreferences_FontSmoothingTypeLight;
+                    break;
+                case FontSmoothingTypeMedium:
+                    *(int *)msg->opg_Storage = MUIV_WebPreferences_FontSmoothingTypeMedium;
+                    break;
+                case FontSmoothingTypeStrong:
+                    *(int *)msg->opg_Storage = MUIV_WebPreferences_FontSmoothingTypeStrong;
+                    break;
+                case FontSmoothingTypeWindows:
+                    *(int *)msg->opg_Storage = MUIV_WebPreferences_FontSmoothingTypeWindows;
+                    break;
+            }
+            break;
+        case MUIA_WebPreferences_DecodesBMPWithDatatypes:
+            *(int *)msg->opg_Storage = (int) WebCore::Settings::decodesBMPWithDatatypes();
+            break;
+        case MUIA_WebPreferences_DecodesPNGWithDatatypes:
+            *(int *)msg->opg_Storage = (int) WebCore::Settings::decodesPNGWithDatatypes();
+            break;
+        case MUIA_WebPreferences_DecodesGIFWithDatatypes:
+            *(int *)msg->opg_Storage = (int) WebCore::Settings::decodesGIFWithDatatypes();
+            break;
+        case MUIA_WebPreferences_DecodesJPGWithDatatypes:
+            *(int *)msg->opg_Storage = (int) WebCore::Settings::decodesJPGWithDatatypes();
+            break;
+        case MUIA_WebPreferences_CookieJarFileName:
+            *(const char **)msg->opg_Storage = data->cookieJarFileName;
+            break;
+    	default:
+	    retval = DoSuperMethodA(cl, obj, (Msg)msg);
+	    break;
+    }
+    
+    return retval;
+}
+
+/*** Setup ******************************************************************/
+ZUNE_CUSTOMCLASS_4
+(
+    WebPreferences, NULL, MUIC_Window, NULL,
+    OM_NEW, struct opSet*,
+    OM_DISPOSE, Msg,
+    OM_GET, struct opGet*,
+    OM_SET, struct opSet*
+)
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebPreferencesZune.h OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebPreferencesZune.h
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebPreferencesZune.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebPreferencesZune.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,60 @@
+#ifndef _WEBPREFERENCESZUNE_H
+#define _WEBPREFERENCESZUNE_H
+
+#include <libraries/mui.h>
+
+/*** Identifier base ********************************************************/
+#define MUIB_WebPreferences              	(TAG_USER | 0x10000000)
+
+/*** Attributes *************************************************************/
+#define MUIA_WebPreferences_StandardFontFamily				(MUIB_WebPreferences|0x00000000)
+#define MUIA_WebPreferences_FixedFontFamily				(MUIB_WebPreferences|0x00000001)
+#define MUIA_WebPreferences_SerifFontFamily				(MUIB_WebPreferences|0x00000002)
+#define MUIA_WebPreferences_SansSerifFontFamily				(MUIB_WebPreferences|0x00000003)
+#define MUIA_WebPreferences_CursiveFontFamily				(MUIB_WebPreferences|0x00000004)
+#define MUIA_WebPreferences_FantasyFontFamily				(MUIB_WebPreferences|0x00000005)
+#define MUIA_WebPreferences_DefaultFontSize				(MUIB_WebPreferences|0x00000006)
+#define MUIA_WebPreferences_DefaultFixedFontSize			(MUIB_WebPreferences|0x00000007)
+#define MUIA_WebPreferences_MinimumFontSize				(MUIB_WebPreferences|0x00000008)
+#define MUIA_WebPreferences_MinimumLogicalFontSize			(MUIB_WebPreferences|0x00000009)
+#define MUIA_WebPreferences_DefaultTextEncodingName			(MUIB_WebPreferences|0x0000000a)
+#define MUIA_WebPreferences_UserStyleSheetEnabled			(MUIB_WebPreferences|0x0000000b)
+#define MUIA_WebPreferences_UserStyleSheetLocation			(MUIB_WebPreferences|0x0000000c)
+#define MUIA_WebPreferences_JavaEnabled					(MUIB_WebPreferences|0x0000000d)
+#define MUIA_WebPreferences_JavaScriptEnabled				(MUIB_WebPreferences|0x0000000e)
+#define MUIA_WebPreferences_JavaScriptCanOpenWindowsAutomatically	(MUIB_WebPreferences|0x0000000f)
+#define MUIA_WebPreferences_PlugInsEnabled				(MUIB_WebPreferences|0x00000010)
+#define MUIA_WebPreferences_AllowsAnimatedImages			(MUIB_WebPreferences|0x00000011)
+#define MUIA_WebPreferences_AllowAnimatedImageLooping			(MUIB_WebPreferences|0x00000012)
+#define MUIA_WebPreferences_LoadsImagesAutomatically			(MUIB_WebPreferences|0x00000013)
+#define MUIA_WebPreferences_Autosaves					(MUIB_WebPreferences|0x00000014)
+#define MUIA_WebPreferences_ShouldPrintBackgrounds			(MUIB_WebPreferences|0x00000015)
+#define MUIA_WebPreferences_PrivateBrowsingEnabled			(MUIB_WebPreferences|0x00000016)
+#define MUIA_WebPreferences_TabsToLinks					(MUIB_WebPreferences|0x00000017)
+#define MUIA_WebPreferences_UsesPageCache				(MUIB_WebPreferences|0x00000018)
+#define MUIA_WebPreferences_TextAreasAreResizable			(MUIB_WebPreferences|0x00000019)
+#define MUIA_WebPreferences_HistoryItemLimit				(MUIB_WebPreferences|0x0000001a)
+#define MUIA_WebPreferences_HistoryAgeInDaysLimit			(MUIB_WebPreferences|0x0000001b)
+#define MUIA_WebPreferences_IconDatabaseLocation			(MUIB_WebPreferences|0x0000001c)
+#define MUIA_WebPreferences_IconDatabaseEnabled				(MUIB_WebPreferences|0x0000001d)
+#define MUIA_WebPreferences_FontSmoothing				(MUIB_WebPreferences|0x0000001e)
+#define MUIA_WebPreferences_DecodesBMPWithDatatypes			(MUIB_WebPreferences|0x0000001f)
+#define MUIA_WebPreferences_DecodesPNGWithDatatypes			(MUIB_WebPreferences|0x00000020)
+#define MUIA_WebPreferences_DecodesGIFWithDatatypes			(MUIB_WebPreferences|0x00000021)
+#define MUIA_WebPreferences_DecodesJPGWithDatatypes			(MUIB_WebPreferences|0x00000022)
+#define MUIA_WebPreferences_CookieJarFileName				(MUIB_WebPreferences|0x00000023)
+
+/*** Variables **************************************************************/
+extern struct MUI_CustomClass *WebPreferences_CLASS;
+
+/*** Constants **************************************************************/
+#define MUIV_WebPreferences_FontSmoothingTypeStandard                    (MUIB_WebPreferences|0x00000000)
+#define MUIV_WebPreferences_FontSmoothingTypeLight                       (MUIB_WebPreferences|0x00000001)
+#define MUIV_WebPreferences_FontSmoothingTypeMedium                      (MUIB_WebPreferences|0x00000002)
+#define MUIV_WebPreferences_FontSmoothingTypeStrong                      (MUIB_WebPreferences|0x00000003)
+#define MUIV_WebPreferences_FontSmoothingTypeWindows                     (MUIB_WebPreferences|0x00000004)
+
+/*** Macros *****************************************************************/
+#define WebPreferencesObject BOOPSIOBJMACRO_START(WebPreferences_CLASS->mcc_Class)
+
+#endif
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebPreferencesZune_private.h OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebPreferencesZune_private.h
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebPreferencesZune_private.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebPreferencesZune_private.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,11 @@
+#ifndef _WEBPREFERENCESZUNEZUNE_PRIVATE_H
+#define _WEBPREFERENCESZUNEZUNE_PRIVATE_H
+
+class WebPreferences;
+
+struct WebPreferences_DATA {
+    WebPreferences *preferences;
+    const char *cookieJarFileName;
+};
+
+#endif
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebViewPrivate.cpp OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebViewPrivate.cpp
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebViewPrivate.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebViewPrivate.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,482 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "config.h"
+#include "WebViewPrivate.h"
+#include "IntRect.h"
+#include "FrameView.h"
+#include "Frame.h"
+#include "SDL.h"
+#include "GraphicsContext.h"
+#include "Page.h"
+#include "EventHandler.h"
+#include "FocusController.h"
+#include "HitTestResult.h"
+#include "HitTestRequest.h"
+#include <MainThread.h>
+#include <PlatformKeyboardEvent.h>
+#include <PlatformMouseEvent.h>
+#include <PlatformWheelEvent.h>
+#include "SelectionController.h"
+#include <SharedTimer.h>
+#include "Editor.h"
+#include "owb-config.h"
+#include "PopupMenu.h"
+#include "CString.h"
+#include "FileIO.h"
+#include "WebFrame.h"
+#include "WebView.h"
+
+#include "CurrentTime.h"
+#include "ContextMenu.h"
+
+extern "C"
+{
+#include <unistd.h>
+#include <intuition/intuition.h>
+#include <devices/rawkeycodes.h>
+#include <libraries/mui.h>
+#include <proto/muimaster.h>
+#include <proto/intuition.h>
+#include <clib/alib_protos.h>
+#include <aros/debug.h>
+}
+
+#include "WebViewZune.h"
+
+using namespace WebCore;
+
+WebViewPrivate::WebViewPrivate(WebView *webView)
+    : m_webView(webView)
+    , isInitialized(false)
+    , ignoreExposeRequests(false)
+{
+}
+
+void WebViewPrivate::fireWebKitEvents()
+{
+    WTF::dispatchFunctionsFromMainThread();
+    fireTimerIfNeeded();
+}
+
+void WebViewPrivate::onExpose(BalEventExpose event)
+{
+    D(bug("onExpose started\n"));
+    Frame* frame = core(m_webView->mainFrame());
+    if (!frame)
+        return;
+
+    if(!isInitialized) {
+        isInitialized = true;
+        frame->view()->resize(m_rect.width(), m_rect.height());
+        frame->view()->forceLayout();
+        frame->view()->adjustViewSize();
+    }
+
+    BalWidget *window = m_webView->viewWindow();
+    SDL_Surface *surf;
+    GetAttr(MUIA_WebView_Surface, window, (IPTR*) &surf);
+
+    GraphicsContext ctx(surf);
+    ctx.setBalExposeEvent(&event);
+    std::vector<BalRectangle> dirtyRects(m_webView->dirtyRegion());
+    if (frame->contentRenderer() && frame->view() && dirtyRects.size() > 0) {
+	ignoreExposeRequests = true;
+        frame->view()->layoutIfNeededRecursive();
+	ignoreExposeRequests = false;
+
+        for (std::vector<BalRectangle>::iterator it = dirtyRects.begin(); it < dirtyRects.end(); it++) {
+            frame->view()->paint(&ctx, *it);
+
+            updateView(m_webView->viewWindow(), *it);
+	}
+        m_webView->clearDirtyRegion();
+    }
+    D(bug("onExpose finished\n"));
+}
+
+void WebViewPrivate::onKeyDown(BalEventKey event)
+{
+    Frame* frame = m_webView->page()->focusController()->focusedOrMainFrame();
+    if (!frame)
+        return;
+    PlatformKeyboardEvent keyboardEvent(&event);
+
+    if (frame->eventHandler()->keyEvent(keyboardEvent))
+        return;
+
+    if (IDCMP_RAWKEY == event.Class) {
+
+        FrameView* view = frame->view();
+        SelectionController::EAlteration alteration;
+        if (event.Qualifier & (IEQUALIFIER_LSHIFT | IEQUALIFIER_RSHIFT))
+            alteration = SelectionController::EXTEND;
+        else
+            alteration = SelectionController::MOVE;
+    
+        switch (event.Code) {
+        case RAWKEY_DOWN:
+            view->scrollBy(IntSize(0, (int)cScrollbarPixelsPerLineStep));
+            return;
+        case RAWKEY_UP:
+            view->scrollBy(IntSize(0, (int)-cScrollbarPixelsPerLineStep));
+            return;
+        case RAWKEY_RIGHT:
+            view->scrollBy(IntSize((int)cScrollbarPixelsPerLineStep, 0));
+            return;
+        case RAWKEY_LEFT:
+            view->scrollBy(IntSize((int)-cScrollbarPixelsPerLineStep, 0));
+            return;
+        case RAWKEY_PAGEDOWN:
+            view->scrollBy(IntSize(0, m_rect.height()));
+            return;
+        case RAWKEY_PAGEUP:
+            view->scrollBy(IntSize(0, -m_rect.height()));
+            return;
+        case RAWKEY_HOME:
+            frame->selection()->modify(alteration, SelectionController::BACKWARD, DocumentBoundary, true);
+            return;
+        case RAWKEY_END:
+            frame->selection()->modify(alteration, SelectionController::FORWARD, DocumentBoundary, true);
+            return;
+        case RAWKEY_ESCAPE:
+            SDL_Event ev;
+            ev.type = SDL_QUIT;
+            SDL_PushEvent(&ev);
+            return;
+        case RAWKEY_F1:
+        {
+            m_webView->goBack();
+
+	    BalWidget *window = m_webView->viewWindow();
+	    SDL_Surface *surf;
+	    GetAttr(MUIA_WebView_Surface, window, (IPTR*) &surf);
+
+            GraphicsContext ctx(surf);
+            if (frame->contentRenderer() && frame->view()) {
+                frame->view()->layoutIfNeededRecursive();
+                IntRect dirty(0, 0, m_rect.width(), m_rect.height());
+                frame->view()->paint(&ctx, dirty);
+    	}
+            return;
+        }
+        case RAWKEY_F2:
+        {
+            m_webView->goForward();
+
+	    BalWidget *window = m_webView->viewWindow();
+	    SDL_Surface *surf;
+	    GetAttr(MUIA_WebView_Surface, window, (IPTR*) &surf);
+
+            GraphicsContext ctx(surf);
+            if (frame->contentRenderer() && frame->view()) {
+                frame->view()->layoutIfNeededRecursive();
+                IntRect dirty(0, 0, m_rect.width(), m_rect.height());
+                frame->view()->paint(&ctx, dirty);
+    	}
+            return;
+        }
+        case RAWKEY_F3:
+            m_webView->zoomPageIn();
+            return;
+        case RAWKEY_F4:
+            m_webView->zoomPageOut();
+            return;
+        default:
+            break;
+        }
+    }
+}
+
+void WebViewPrivate::onKeyUp(BalEventKey event)
+{
+    Frame* frame = m_webView->page()->focusController()->focusedOrMainFrame();
+    if (!frame)
+        return;
+    PlatformKeyboardEvent keyboardEvent(&event);
+
+    if (frame->eventHandler()->keyEvent(keyboardEvent))
+        return ;
+}
+
+void WebViewPrivate::onMouseMotion(BalEventMotion event)
+{
+    Frame* frame = core(m_webView->mainFrame());
+    if (!frame)
+        return;
+    frame->eventHandler()->mouseMoved(PlatformMouseEvent(&event));
+}
+
+void WebViewPrivate::onMouseButtonDown(BalEventButton event)
+{
+    Frame* frame = core(m_webView->mainFrame());
+    if (!frame)
+        return;
+
+    if (event.Code == IECODE_RBUTTON) {
+	onContextMenu(event);
+    }
+    
+    frame->eventHandler()->handleMousePressEvent(PlatformMouseEvent(&event));
+}
+
+void WebViewPrivate::onContextMenu(BalEventButton event)
+{
+    Page* page = core(m_webView);
+    page->contextMenuController()->clearContextMenu();
+    Frame* focusedFrame = page->focusController()->focusedOrMainFrame();
+
+    if (!focusedFrame->view())
+        return;
+
+    BalWidget* viewWindow = m_webView->viewWindow();
+    
+    /* Remove previous context menu */
+    Object *contextMenu = NULL;
+    GetAttr(MUIA_ContextMenu, viewWindow, (IPTR*) &contextMenu);
+    SetAttrs(viewWindow, MUIA_ContextMenu, MenustripObject, End, TAG_DONE);
+    if(contextMenu)
+	MUI_DisposeObject(contextMenu);
+    
+    bool handledEvent = focusedFrame->eventHandler()->sendContextMenuEvent(PlatformMouseEvent(&event));
+    if (!handledEvent)
+        return;
+
+    ContextMenu* coreMenu = page->contextMenuController()->contextMenu();
+    if (!coreMenu)
+        return;
+
+    Object* menu = coreMenu->platformDescription();
+    if (!menu)
+        return;
+
+    Object *menuStrip = MenustripObject, MUIA_Family_Child, menu, End;
+    
+    /* Set new context menu */
+    GetAttr(MUIA_ContextMenu, viewWindow, (IPTR*) &contextMenu);
+    SetAttrs(viewWindow, MUIA_ContextMenu, menuStrip, TAG_DONE);
+    if(contextMenu)
+	MUI_DisposeObject(contextMenu);
+}
+
+void WebViewPrivate::onMouseButtonUp(BalEventButton event)
+{
+    Frame* frame = core(m_webView->mainFrame());
+    if (!frame)
+        return;
+
+    frame->eventHandler()->handleMouseReleaseEvent(PlatformMouseEvent(&event));
+}
+
+void WebViewPrivate::onScroll(BalEventScroll event)
+{
+    Frame* frame = core(m_webView->mainFrame());
+    if (!frame)
+        return;
+    PlatformWheelEvent wheelEvent(&event);
+    frame->eventHandler()->handleWheelEvent(wheelEvent);
+}
+
+void WebViewPrivate::onResize(BalResizeEvent event)
+{
+    Frame* frame = core(m_webView->mainFrame());
+    if (!frame)
+        return;
+    m_rect.setWidth(event.w);
+    m_rect.setHeight(event.h);
+    frame->view()->resize(event.w, event.h);
+    frame->view()->forceLayout();
+    frame->view()->adjustViewSize();
+}
+
+void WebViewPrivate::onQuit(BalQuitEvent)
+{
+}
+
+void WebViewPrivate::onUserEvent(BalUserEvent)
+{
+}
+
+void WebViewPrivate::popupMenuHide()
+{
+    //BOOKMARKLET_INSTALL_PATH
+}
+
+
+void WebViewPrivate::popupMenuShow(void *popupInfo)
+{
+#if 0
+    PopupMenu *pop = static_cast<PopupMenu *>(popupInfo);
+    if (!pop)
+        return;
+    //printf("pop %d %d %d %d\n", pop->windowRect().x(), pop->windowRect().y(), pop->windowRect().width(), pop->windowRect().height());
+    int itemCount = pop->client()->listSize();
+
+    String tabIndex = "var myTabId1 = new Array(";
+    String tabName = "var myTabName1 = new Array(";
+    for (int i = 0; i < itemCount; ++i) {
+        String text = pop->client()->itemText(i);
+        if (text.isEmpty())
+            continue;
+        if (i == 0) {
+            tabName += "\"";
+            tabIndex += "\"";
+        } else {
+            tabName += ", \"";
+            tabIndex += ", \"";
+        }
+
+        tabName += text;
+        tabName += "\"";
+        tabIndex += String::number(i+1);
+        tabIndex += "\"";
+    }
+    tabIndex += ");";
+    tabName += ");";
+    String path = BOOKMARKLET_INSTALL_PATH;
+    path +=  "popup.js";
+
+    File *f = new File(path);
+    if (!f)
+        return;
+    if (f->open('r') == -1)
+        return ;
+    String buffer(f->read(f->getSize()));
+    f->close();
+    delete f;
+
+    String callCreateTab = "createTabs(myTabId1 ,myTabName1 ,";
+    callCreateTab += String::number(pop->windowRect().x());
+    callCreateTab += ", ";
+    callCreateTab += String::number(pop->windowRect().y());
+    callCreateTab += ", ";
+    callCreateTab += String::number(pop->windowRect().width());
+    callCreateTab += ");";
+
+    buffer = buffer.replace("@TabIndexDefinition", tabIndex);
+    buffer = buffer.replace("@TabNameDefinition", tabName);
+    buffer = buffer.replace("@callCreateTab", callCreateTab);
+    
+//    printf("popup = %s \n", buffer.utf8().data());
+
+    m_webView->stringByEvaluatingJavaScriptFromString(buffer);
+#endif
+}
+
+void WebViewPrivate::updateView(BalWidget *surf, IntRect rect)
+{
+    if (!surf || rect.isEmpty())
+        return;
+    rect.intersect(m_rect);
+    /* use SDL_Flip only if double buffering is available */
+    SDL_Rect sdlRect = {rect.x(), rect.y(), rect.width(), rect.height()};
+    //printf("updateView x=%d y=%d w=%d h=%d\n", sdlRect.x, sdlRect.y, sdlRect.w, sdlRect.h);
+    sdlRect.x = max(sdlRect.x, (Sint16)0);
+    sdlRect.y = max(sdlRect.y, (Sint16)0);
+    DoMethod(surf, MUIM_WebView_UpdateRect, (IPTR) sdlRect.x, (IPTR) sdlRect.y, (IPTR) sdlRect.w, (IPTR) sdlRect.h);
+}
+
+void WebViewPrivate::sendExposeEvent(IntRect)
+{
+    D(bug("WebViewPrivate::sendExposeEvent()\n"));
+    if(ignoreExposeRequests)
+        return;
+    BalWidget *window = m_webView->viewWindow();
+    if(window)
+        DoMethod(window, MUIM_WebView_Expose);
+}
+
+void WebViewPrivate::repaint(const WebCore::IntRect& windowRect, bool contentChanged, bool immediate, bool repaintContentOnly)
+{
+    D(bug("repaint(%d, %d, %d\n", contentChanged, immediate, repaintContentOnly));
+    if (windowRect.isEmpty())
+        return;
+    IntRect rect = windowRect;
+    rect.intersect(m_rect);
+    
+    if (rect.isEmpty())
+        return;
+
+    if (contentChanged) {
+        m_webView->addToDirtyRegion(rect);
+        /*Frame* focusedFrame = m_webView->page()->focusController()->focusedFrame();
+        if (focusedFrame) {
+            Scrollbar* hBar = focusedFrame->view()->horizontalScrollbar();
+            Scrollbar* vBar = focusedFrame->view()->verticalScrollbar();
+            
+            // TODO : caculate the scroll delta and test this.
+            //if (dx && hBar)
+            if (hBar)
+                m_webView->addToDirtyRegion(IntRect(focusedFrame->view()->windowClipRect().x() + hBar->x(), focusedFrame->view()->windowClipRect().y() + hBar->y(), hBar->width(), hBar->height()));
+            //if (dy && vBar)
+            if (vBar)
+                m_webView->addToDirtyRegion(IntRect(focusedFrame->view()->windowClipRect().x() + vBar->x(), focusedFrame->view()->windowClipRect().y() + vBar->y(), vBar->width(), vBar->height()));
+        }*/
+    }
+    if (!repaintContentOnly)
+        sendExposeEvent(rect);
+    if (immediate) {
+        if (repaintContentOnly)
+            m_webView->updateBackingStore(core(m_webView->topLevelFrame())->view());
+        else
+            sendExposeEvent(rect);
+    }
+}
+
+void WebViewPrivate::scrollBackingStore(WebCore::FrameView* view, int dx, int dy, const WebCore::IntRect& scrollViewRect, const WebCore::IntRect& clipRect)
+{
+    IntRect updateRect = clipRect;
+    BalWidget *window = m_webView->viewWindow();
+
+    if((dx != 0 && dy != 0) 
+            || abs(dx) >= scrollViewRect.width() 
+            || abs(dy) >= scrollViewRect.height()) {
+        updateRect.intersect(scrollViewRect);
+        m_webView->addToDirtyRegion(updateRect);
+        DoMethod(window, MUIM_WebView_Expose);
+    }
+    else if(dx != 0) {
+        int revealedRectX = (dx > 0 ? scrollViewRect.x() : scrollViewRect.x() + scrollViewRect.width() + dx);
+        IntRect revealedRect(revealedRectX, scrollViewRect.y(), abs(dx), scrollViewRect.height());
+	IntRect scrollRect = scrollViewRect;
+	scrollRect.intersect(clipRect);
+        updateRect.intersect(revealedRect);
+        m_webView->addToDirtyRegion(updateRect);
+        DoMethod(window, MUIM_WebView_Scroll, scrollRect.x(), scrollRect.y(), scrollRect.width(), scrollRect.height(), -dx, -dy);
+    }
+    else if(dy != 0) {
+        int revealedRectY = (dy > 0 ? scrollViewRect.y() : scrollViewRect.y() + scrollViewRect.height() + dy);
+        IntRect revealedRect(scrollViewRect.x(), revealedRectY, scrollViewRect.width(), abs(dy));
+	IntRect scrollRect = scrollViewRect;
+	scrollRect.intersect(clipRect);
+        updateRect.intersect(revealedRect);
+        m_webView->addToDirtyRegion(updateRect);
+        DoMethod(window, MUIM_WebView_Scroll, scrollRect.x(), scrollRect.y(), scrollRect.width(), scrollRect.height(), -dx, -dy);
+    }
+}
+
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebViewPrivate.h OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebViewPrivate.h
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebViewPrivate.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebViewPrivate.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,146 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+#ifndef WebViewPrivate_H
+#define WebViewPrivate_H
+
+#include "WebView.h"
+#include "IntRect.h"
+#include "FrameView.h"
+#include "Frame.h"
+#include "BALBase.h"
+#include "SDL.h"
+#include "PlatformMouseEvent.h"
+
+class WebViewPrivate {
+public:
+    WebViewPrivate(WebView *webView);
+    ~WebViewPrivate() 
+    {
+    }
+
+    void show()
+    {
+    }
+    
+    void hide()
+    {
+    }
+
+    void setFrameRect(WebCore::IntRect r)
+    {
+        m_rect = r;
+    }
+
+    BalRectangle frameRect()
+    {
+        SDL_Rect r = {m_rect.x(), m_rect.y(), m_rect.width(), m_rect.height()};
+        return r; 
+    }
+    
+    BalWidget *createWindow(BalRectangle r)
+    {
+        WebCore::IntRect rect(r);
+        if(rect != m_rect)
+            m_rect = rect;
+    
+
+        return 0;
+    }
+
+    void initWithFrameView(WebCore::FrameView *frameView)
+    {
+    }
+
+    void clearDirtyRegion()
+    {
+        m_backingStoreDirtyRegion.clear();
+    }
+
+    std::vector<BalRectangle> dirtyRegion()
+    {
+        return m_backingStoreDirtyRegion;
+    }
+
+    void addToDirtyRegion(const BalRectangle& dirtyRect)
+    {
+        BalRectangle unitedDirtyRect = dirtyRect;
+        for(std::vector<BalRectangle>::iterator it = m_backingStoreDirtyRegion.begin(); it != m_backingStoreDirtyRegion.end();)
+	{
+	    if(it->x < (unitedDirtyRect.x + unitedDirtyRect.w) && unitedDirtyRect.x < (it->x + it->w) && it->y < (unitedDirtyRect.y + unitedDirtyRect.h) && unitedDirtyRect.y < (it->y + it->h))
+	    {
+	        int l = min(it->x, unitedDirtyRect.x);
+	        int t = min(it->y, unitedDirtyRect.y);
+	        int r = max(it->x + it->w, unitedDirtyRect.x + unitedDirtyRect.w);
+	        int b = max(it->y + it->h, unitedDirtyRect.y + unitedDirtyRect.h);
+                unitedDirtyRect.x = l;
+                unitedDirtyRect.y = t;
+                unitedDirtyRect.w = r - l;
+                unitedDirtyRect.h = b - t;
+	        it = m_backingStoreDirtyRegion.erase(it); 
+            }
+            else
+                it++;
+	} 
+        m_backingStoreDirtyRegion.push_back(unitedDirtyRect);
+    }
+
+    void onExpose(BalEventExpose event);
+    void onKeyDown(BalEventKey event);
+    void onKeyUp(BalEventKey event);
+    void onMouseMotion(BalEventMotion event);
+    void onMouseButtonDown(BalEventButton event);
+    void onMouseButtonUp(BalEventButton event);
+    void onScroll(BalEventScroll event);
+    void onResize(BalResizeEvent event);
+    void onQuit(BalQuitEvent);
+    void onUserEvent(BalUserEvent);
+    void onContextMenu(BalEventButton event);
+    void popupMenuHide();
+    void popupMenuShow(void *popupInfo);
+
+    void sendExposeEvent(WebCore::IntRect);
+    
+    void repaint(const WebCore::IntRect&, bool contentChanged, bool immediate = false, bool repaintContentOnly = false);
+    
+    void scrollBackingStore(WebCore::FrameView*, int dx, int dy, const WebCore::IntRect& scrollViewRect, const WebCore::IntRect& clipRect);
+
+    void fireWebKitEvents();
+    
+private:
+    void updateView(BalWidget* widget, WebCore::IntRect rect);
+    WebCore::IntRect m_rect;
+    WebView* m_webView;
+    bool isInitialized;
+    bool ignoreExposeRequests;
+
+    WebCore::IntPoint m_backingStoreSize;
+    std::vector<BalRectangle> m_backingStoreDirtyRegion;
+};
+
+
+#endif
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebViewZune.cpp OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebViewZune.cpp
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebViewZune.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebViewZune.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,1089 @@
+#define MUIMASTER_YES_INLINE_STDARG
+
+#include "WebView.h"
+#include "Page.h"
+#include "WebFrame.h"
+#include "WebNotificationDelegate.h"
+#include "JSActionDelegate.h"
+#include "WebFrameLoadDelegate.h"
+#include "DownloadDelegateZune.h"
+#include "DownloadDelegateAROS.h"
+#include "PolicyDelegateAROS.h"
+#include "WebDataSource.h"
+#include "SharedBuffer.h"
+#include "IntRect.h"
+
+extern "C" {
+#include <exec/memory.h>
+#include <intuition/intuition.h>
+#include <clib/alib_protos.h>
+#include <proto/exec.h>
+#include <proto/intuition.h>
+#include <proto/utility.h>
+#include <proto/muimaster.h>
+#include <proto/alib.h>
+#include <libraries/mui.h>
+#include <aros/debug.h>
+#include <proto/graphics.h>
+#include <proto/cybergraphics.h>
+#include <proto/codesets.h>
+#include <proto/layers.h>
+#include <libraries/codesets.h>
+#include <libraries/cybergraphics.h>
+#include <aros/symbolsets.h>
+#include <devices/rawkeycodes.h>
+#include <SDL.h>
+#include <SDL_gfxPrimitives.h>
+#include <zune/customclasses.h>
+#include "strings.h"
+}
+
+/*  #define MYDEBUG 1 */
+#include "WebViewZune.h"
+#include "WebViewZune_private.h"
+
+class MyWebNotificationDelegate : public WebNotificationDelegate, public JSActionDelegate, public WebFrameLoadDelegate
+{
+public:
+    MyWebNotificationDelegate(Object *webView)
+    {
+	this->webView = webView;
+    }
+
+    ~MyWebNotificationDelegate()
+    {
+    }
+
+    void didStartProvisionalLoad(WebFrame* frame)
+    {
+	if(frame == frame->webView()->mainFrame())
+	{
+            D(bug("didStartLoad %s\n", frame->url()));
+	    SetAttrs(webView, MUIA_WebView_State, MUIV_WebView_State_Connecting, TAG_END);
+	    updateTitle(strdup(""));
+            updateURL((char*) frame->url());
+	    updateBackForward();
+	}
+    }
+    
+    void didReceiveServerRedirectForProvisionalLoadForFrame(WebFrame*)
+    {
+    }
+    
+    void didCancelClientRedirectForFrame(WebFrame*)
+    {
+    }
+    
+    void willPerformClientRedirectToURL(WebFrame*, const char*, double, double)
+    {
+    }
+    
+    void didCommitLoad(WebFrame* frame)
+    {
+	if(frame == frame->webView()->mainFrame())
+	{
+	    D(bug("didCommitLoad %s\n", frame->url()));
+	    SetAttrs(webView, MUIA_WebView_State, MUIV_WebView_State_Loading, TAG_END);
+            updateURL((char*) frame->url());
+	    updateBackForward();
+	}
+    }
+    
+    void didFinishLoad(WebFrame* frame)
+    {
+	if(frame == frame->webView()->mainFrame())
+	{
+	    D(bug("didFinishLoad %s\n", frame->url()));
+	    SetAttrs(webView, MUIA_WebView_State, MUIV_WebView_State_Ready, TAG_END);
+	    updateBackForward();
+	}
+    }
+    
+    void didFailLoad(WebFrame* frame)
+    {
+	if(frame == frame->webView()->mainFrame())
+	{
+	    D(bug("didFailLoad %s\n", frame->url()));
+	    SetAttrs(webView, MUIA_WebView_State, MUIV_WebView_State_Error, TAG_END);
+	    updateBackForward();
+	}
+    }
+    
+    virtual void startLoadNotification(WebFrame* frame)
+    {
+    }
+
+    virtual void titleChange(WebFrame* frame, const char *title)
+    {
+	if(frame == frame->webView()->mainFrame())
+	{
+            D(bug("titleChange %s\n", frame->name()));
+            updateTitle((char*) frame->name());
+	}
+    }
+
+    virtual void progressNotification(WebFrame* frame)
+    {
+	if(frame == frame->webView()->mainFrame())
+	{
+	    double progress = frame->webView()->estimatedProgress();
+	    SetAttrs(webView, MUIA_WebView_EstimatedProgress, (int) 100*progress, TAG_END);
+	}
+    }
+
+    virtual void finishedLoadNotification(WebFrame* frame)
+    {
+    }
+    
+    virtual bool jsConfirm(WebFrame* frame, const char* message)
+    {
+        BalWidget* viewWindow = frame->webView()->viewWindow();
+        if (viewWindow) {
+            return (bool) DoMethod(viewWindow, MUIM_WebView_Confirm, message);
+        }
+        
+        return false;
+    }
+    
+    virtual bool jsAlert(WebFrame* frame, const char* message)
+    {
+        BalWidget* viewWindow = frame->webView()->viewWindow();
+        if (viewWindow) {
+            DoMethod(viewWindow, MUIM_WebView_Alert, message);
+        }
+        
+        return true;
+    }
+    
+    virtual bool jsPrompt(WebFrame* frame, const char* message, const char* defaultAnswer, char** z)
+    {
+        BalWidget* viewWindow = frame->webView()->viewWindow();
+        STRPTR result = NULL;
+        bool res = false;
+        if(viewWindow)
+        {
+            result = (STRPTR) DoMethod(viewWindow, MUIM_WebView_Prompt, message, defaultAnswer);
+            if(result)
+            {
+                struct codeset *utfCodeset = CodesetsFindA("UTF-8", NULL);
+                if(utfCodeset)
+                {
+                    char *resultConverted = CodesetsConvertStr(CSA_Source, (IPTR) result, CSA_DestCodeset, (IPTR) utfCodeset, TAG_END);
+                    if(resultConverted)
+                    {
+                        *z = strdup(resultConverted);
+                        CodesetsFreeA(resultConverted, NULL);
+                        res = true;
+                    }
+                }
+                FreeVec(result);
+            }
+        }
+        return res;
+    }
+    
+    virtual void windowObjectClearNotification(WebFrame* frame, void* x, void* y)
+    {
+    }
+    
+    virtual void consoleMessage(WebFrame* frame, int x, const char* message)
+    {
+    }
+    
+private:
+    Object *webView;
+    void updateURL(char *url)
+    {
+	updateBackForward();
+	SetAttrs(webView, MUIA_WebView_URL, url, TAG_END);
+        free((void*) url);
+    }
+
+    void updateTitle(char *title)
+    {
+        char *titleConverted = CodesetsUTF8ToStr(CSA_Source, (IPTR) title, TAG_END);
+        if(titleConverted)
+        {
+            SetAttrs(webView, MUIA_WebView_Title, titleConverted, TAG_END);
+            CodesetsFreeA(titleConverted, NULL);
+        }
+        else if(title == NULL || *title == '\0')
+        {
+            SetAttrs(webView, MUIA_WebView_Title, "", TAG_END);
+        }
+        
+        free((void*) title);
+    }
+
+    void updateBackForward()
+    {
+        WebView *webViewPtr;
+        GetAttr(MUIA_WebView_WebView, webView, (IPTR*) &webViewPtr);
+        if(webView)
+        {
+            int canGoBack = core(webViewPtr)->backForwardList()->backItem() != NULL;
+            SetAttrs(webView, MUIA_WebView_CanGoBack, (IPTR) canGoBack, TAG_END);
+            int canGoForward = core(webViewPtr)->backForwardList()->forwardItem() != NULL;
+            SetAttrs(webView, MUIA_WebView_CanGoForward, (IPTR) canGoForward, TAG_END);
+        }
+    }
+};
+
+IPTR WebView__OM_NEW(struct IClass *cl, Object *obj, struct opSet *msg)
+{
+    struct WebView_DATA *data;
+    WebView *webView;
+    SDL_Surface *surface;
+    int width = 640;
+    int height = 480;
+    struct Hook *createNewHook = NULL;
+    struct Hook *alertHook = NULL;
+    struct Hook *confirmHook = NULL;
+    struct Hook *promptHook = NULL;
+    struct Hook *policyHook = NULL;
+    struct Hook *credentialsHook = NULL;
+    struct Hook *closeHook = NULL;
+    struct TagItem *tag = NULL, *tstate = msg->ops_AttrList;
+    
+    /* Parse initial attributes --------------------------------------------*/
+    while ((tag = NextTagItem(&tstate)) != NULL)
+    {
+        switch (tag->ti_Tag)
+        {
+            case MUIA_WebView_CreateNewHook:
+        	createNewHook = (struct Hook*) tag->ti_Data;
+        	break;
+            case MUIA_WebView_AlertHook:
+        	alertHook = (struct Hook*) tag->ti_Data;
+        	break;
+            case MUIA_WebView_ConfirmHook:
+        	confirmHook = (struct Hook*) tag->ti_Data;
+        	break;
+            case MUIA_WebView_PromptHook:
+        	promptHook = (struct Hook*) tag->ti_Data;
+        	break;
+            case MUIA_WebView_PolicyHook:
+        	policyHook = (struct Hook*) tag->ti_Data;
+        	break;
+            case MUIA_WebView_CredentialsHook:
+        	credentialsHook = (struct Hook*) tag->ti_Data;
+        	break;
+            case MUIA_WebView_CloseHook:
+        	closeHook = (struct Hook*) tag->ti_Data;
+        	break;
+            default:
+                continue; /* Don't supress non-processed tags */
+        }
+        
+        tag->ti_Tag = TAG_IGNORE;
+    }
+
+    surface = SDL_CreateRGBSurface(SDL_SWSURFACE, width, height, 32, 0x00ff0000, 0x0000ff00, 0x000000ff, 0xff000000);
+    if(!surface)
+    {
+	return 0;
+    }
+    
+
+    webView = WebView::createInstance();
+    webView->setDownloadDelegate(DownloadDelegateAROS::createInstance());
+    webView->setPolicyDelegate(PolicyDelegateAROS::sharedInstance());
+
+    if(!webView)
+    {
+	SDL_FreeSurface(surface);
+	return 0;
+    }
+    
+    obj = (Object *) DoSuperNewTags
+    (
+        cl, obj, NULL,
+    
+        MUIA_InnerLeft,   0,
+	MUIA_InnerTop,    0,
+	MUIA_InnerRight,  0,
+	MUIA_InnerBottom, 0,
+	MUIA_ContextMenu, MenustripObject, End,
+	MUIA_CycleChain,  1,
+	
+        TAG_MORE, (IPTR) msg->ops_AttrList	
+    );
+
+    if(!obj)
+    {
+	delete webView;
+	SDL_FreeSurface(surface);
+	return 0;
+    }
+
+    webView->parseConfigFile(NULL);
+    
+    MyWebNotificationDelegate* myWebDelegate = new MyWebNotificationDelegate(obj);
+    webView->setWebNotificationDelegate(myWebDelegate);
+    webView->setJSActionDelegate(myWebDelegate);
+    webView->setWebFrameLoadDelegate(myWebDelegate);
+
+    data = (struct WebView_DATA *) INST_DATA(cl, obj);
+
+    data->webView = webView;
+    data->surface = surface;
+    data->needsRedrawing = 0;
+    data->isActive = 0;
+    data->toolTip = StrDup("");
+    data->url = StrDup("");
+    data->title = StrDup("");
+    data->ehn.ehn_Events = IDCMP_MOUSEBUTTONS | IDCMP_MOUSEMOVE | IDCMP_RAWKEY;
+    data->ehn.ehn_Priority = 0;
+    data->ehn.ehn_Flags = 0;
+    data->ehn.ehn_Object = obj;
+    data->ehn.ehn_Class = cl;
+    data->createNewHook = createNewHook;
+    data->alertHook = alertHook;
+    data->confirmHook = confirmHook;
+    data->promptHook = promptHook;
+    data->policyHook = policyHook;
+    data->credentialsHook = credentialsHook;
+    data->closeHook = closeHook;
+    data->state = MUIV_WebView_State_Ready;
+    data->ignoreUpdateRequests = FALSE;
+    data->nesting = 0;
+
+    InitRastPort(&data->bufferRastPort);
+    
+    D(bug("WebView_New(%lx)\n", obj));
+    return (IPTR)obj;
+}
+
+IPTR WebView__OM_DISPOSE(struct IClass *cl, Object *obj, Msg msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    Object *contextMenu;
+    GetAttr(MUIA_ContextMenu, obj, (IPTR*) &contextMenu);
+    SetAttrs(obj, MUIA_ContextMenu, NULL, TAG_END);
+    MUI_DisposeObject(contextMenu);
+    
+    delete data->webView;
+    FreeVec(data->toolTip);
+    FreeVec(data->url);
+    FreeVec(data->title);
+    SDL_FreeSurface(data->surface);
+    FreeBitMap(data->bufferRastPort.BitMap);
+    return DoSuperMethodA(cl,obj,msg);
+}
+
+IPTR WebView__OM_SET(Class *cl, Object *obj, struct opSet *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    struct TagItem *tags  = msg->ops_AttrList;
+    struct TagItem *tag;
+
+    while ((tag = NextTagItem(&tags)) != NULL)
+    {
+    	switch(tag->ti_Tag)
+	{
+    	    case MUIA_WebView_Surface:
+		data->surface = (SDL_Surface *)tag->ti_Data;
+		break;
+    	    case MUIA_WebView_ToolTip:
+    		if(data->toolTip)
+    		    FreeVec(data->toolTip);
+    		data->toolTip = StrDup((char*) tag->ti_Data);
+    		break;
+    	    case MUIA_WebView_State:
+    		data->state = (int) tag->ti_Data;
+    		break;
+    	    case MUIA_WebView_EstimatedProgress:
+    		data->estimatedProgress = (int) tag->ti_Data;
+    		break;
+    	    case MUIA_WebView_Title:
+    		if(data->title)
+    		    FreeVec(data->title);
+    		data->title = StrDup((char*) tag->ti_Data);
+    		break;
+    	    case MUIA_WebView_URL:
+    		if(data->url)
+    		    FreeVec(data->url);
+    		data->url = StrDup((char*) tag->ti_Data);
+    		break;
+    	    case MUIA_WebView_CreateNewHook:
+    		data->createNewHook = (struct Hook*) tag->ti_Data;
+    		break;
+    	    case MUIA_WebView_Active:
+    		data->isActive = (int) tag->ti_Data;
+		if(data->isActive)
+		{
+			Object *active;
+			GetAttr(MUIA_Window_ActiveObject, _win(obj), (IPTR*) &active);
+			if(active != obj && active != MUIV_Window_ActiveObject_None)
+			{
+				SetAttrs(_win(obj), MUIA_Window_ActiveObject, obj, TAG_END);
+				SetAttrs(_win(obj), MUIA_Window_ActiveObject, MUIV_Window_ActiveObject_None, TAG_END);
+			}
+		}
+		else
+		{
+       	    		Object *active;
+                        GetAttr(MUIA_Window_ActiveObject, _win(obj), (IPTR*) &active);
+       	    		if(active == obj)
+           	            SetAttrs(_win(obj), MUIA_Window_ActiveObject, MUIV_Window_ActiveObject_None, TAG_END);
+		}
+		data->webView->updateFocusedAndActiveState();
+    		break;
+    	    case MUIA_WebView_CanGoBack:
+    		data->canGoBack = (int) tag->ti_Data;
+    		break;
+    	    case MUIA_WebView_CanGoForward:
+    		data->canGoForward = (int) tag->ti_Data;
+    		break;
+    	    case MUIA_WebView_SourceMode:
+    		data->webView->setInViewSourceMode((bool) tag->ti_Data);
+    		break;
+	} /* switch(tag->ti_Tag) */
+	
+    } /* while ((tag = NextTagItem(&tags)) != NULL) */
+    
+    return DoSuperMethodA(cl, obj, (Msg)msg);
+}
+
+
+IPTR WebView__OM_GET(Class *cl, Object *obj, struct opGet *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    IPTR retval = TRUE;
+    
+    switch(msg->opg_AttrID)
+    {
+    	case MUIA_WebView_Surface:
+	    *(SDL_Surface **)msg->opg_Storage = data->surface;
+	    break;
+    	case MUIA_WebView_ToolTip:
+    	    *(char **)msg->opg_Storage = data->toolTip;
+	    break;
+    	case MUIA_WebView_State:
+    	    *(int *)msg->opg_Storage = data->state;
+	    break;
+    	case MUIA_WebView_EstimatedProgress:
+    	    *(int *)msg->opg_Storage = data->estimatedProgress;
+	    break;
+    	case MUIA_WebView_Title:
+    	    *(char **)msg->opg_Storage = data->title;
+	    break;
+    	case MUIA_WebView_URL:
+    	    *(char **)msg->opg_Storage = data->url;
+	    break;
+    	case MUIA_WebView_WebView:
+    	    *(WebView**)msg->opg_Storage = data->webView;
+	    break;
+    	case MUIA_WebView_CanGoBack:
+    	    *(int *)msg->opg_Storage = data->canGoBack;
+	    break;
+    	case MUIA_WebView_CanGoForward:
+    	    *(int *)msg->opg_Storage = data->canGoForward;
+	    break;
+    	case MUIA_WebView_Active:
+    	    *(int *)msg->opg_Storage = data->isActive;
+    	    break;
+    	case MUIA_WebView_Data:
+    	{
+    	    if(data->webView->mainFrame()->canProvideDocumentSource())
+    	    {
+                WTF::RefPtr<WebCore::SharedBuffer> sourceDataBuffer = data->webView->mainFrame()->dataSource()->data();
+                if(sourceDataBuffer != NULL)
+                {
+                    ULONG sourceDataLength = sourceDataBuffer->size();
+                    STRPTR sourceData = (STRPTR) AllocVec(sourceDataLength + 1, MEMF_ANY);
+                    sourceData[sourceDataLength] = 0;
+                    CopyMem(sourceDataBuffer->data(), sourceData, sourceDataLength);
+                    *(STRPTR*)msg->opg_Storage = sourceData;
+                }
+                else
+                {
+                    *(STRPTR*)msg->opg_Storage = StrDup("");
+                }
+    	    }
+    	    else
+    	    {
+    		*(STRPTR*)msg->opg_Storage = StrDup("");
+    	    }
+    	    break;
+    	}
+    	default:
+	    retval = DoSuperMethodA(cl, obj, (Msg)msg);
+	    break;
+    }
+    
+    return retval;
+}
+
+IPTR WebView__MUIM_Setup(struct IClass *cl, Object *obj, struct MUIP_Setup *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    SDL_Rect clientRect = {0, 0, 640, 480};
+
+    if (0 == DoSuperMethodA(cl, obj, (Msg) msg))
+        return FALSE;
+
+    data->webView->initWithFrame(clientRect, NULL, NULL);
+    data->webView->setViewWindow(obj);
+//    WebView_loadHTMLString(data->webView, "hello, world", "http://janus");
+//    data->webView->mainFrame()->loadURL("http://janus/~phm/test.html");
+
+    DoMethod(_win(obj), MUIM_Window_AddEventHandler, (IPTR)&data->ehn);
+    
+    data->timer.ihn_Flags = MUIIHNF_TIMER;
+    data->timer.ihn_Method = MUIM_WebView_FireWebKitEvents;
+    data->timer.ihn_Object = obj;
+    data->timer.ihn_Millis = 1;
+    
+    DoMethod(_app(obj), MUIM_Application_AddInputHandler, (IPTR)&data->timer);
+    
+    return TRUE;
+}
+
+IPTR WebView__MUIM_Cleanup(struct IClass *cl, Object *obj, struct MUIP_Cleanup *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    
+    DoMethod(_app(obj), MUIM_Application_RemInputHandler, (IPTR)&data->timer);
+    DoMethod(_win(obj), MUIM_Window_RemEventHandler, (IPTR)&data->ehn);
+
+    return (DoSuperMethodA(cl, obj, (Msg) msg));
+}
+
+IPTR WebView__MUIM_AskMinMax(Class *cl, Object *obj, struct MUIP_AskMinMax *msg)
+{
+    DoSuperMethodA(cl, obj, (Msg)msg);
+
+    msg->MinMaxInfo->DefWidth   = 640;
+    msg->MinMaxInfo->DefHeight  = 480;
+    msg->MinMaxInfo->MaxWidth   = MUI_MAXMAX;
+    msg->MinMaxInfo->MaxHeight  = MUI_MAXMAX;
+
+    return TRUE;
+}
+
+IPTR WebView__MUIM_Draw(struct IClass *cl, Object *obj, struct MUIP_Draw *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    struct List *children;
+    APTR cstate;
+    Object *child;
+    int width = _mwidth(obj);
+    int height = _mheight(obj);
+    int top = _mtop(obj);
+    int left = _mleft(obj);
+
+    DoSuperMethodA(cl, obj, (Msg)msg);
+
+    if (_mwidth(obj) < 1 || _mheight(obj) < 1)
+	return TRUE;
+
+    D(bug("WebView__MUIM_Draw start\n"));
+
+    if (!data->bufferRastPort.BitMap)
+    {
+        data->bufferRastPort.BitMap = AllocBitMap(data->surface->w, data->surface->h, 32, BMF_DISPLAYABLE | BMF_CLEAR, _rp(obj)->BitMap);
+        // no point in drawing if we don't have enough memory to show it
+        if (!data->bufferRastPort.BitMap)
+            return TRUE;
+    }
+
+    if(data->surface->w != width || data->surface->h != height)
+    {
+	D(bug("Resize!\n"));
+        struct BitMap *bufferBitMap = AllocBitMap(width, height, 32, BMF_DISPLAYABLE | BMF_CLEAR, _rp(obj)->BitMap);
+        SDL_Surface *surface = SDL_CreateRGBSurface(SDL_SWSURFACE, width, height, 32, 0x00ff0000, 0x0000ff00, 0x000000ff, 0xff000000);
+        if(surface != NULL && bufferBitMap != NULL)
+        {
+            SDL_FreeSurface(data->surface);
+            data->surface = surface;
+            data->webView->setViewWindow(obj);
+                
+            FreeBitMap(data->bufferRastPort.BitMap);
+            data->bufferRastPort.BitMap = bufferBitMap;
+
+            SDL_ResizeEvent ev = { SDL_VIDEORESIZE, width, height };
+            data->webView->onResize(ev);
+        }
+        else
+        {
+            if(surface)
+                SDL_FreeSurface(surface);
+            if(bufferBitMap)
+                FreeBitMap(bufferBitMap);
+            return 0;
+        }
+    }
+
+    if (msg->flags & MADF_DRAWOBJECT)
+    {
+	std::vector<BalRectangle> dirtyRegion = data->webView->dirtyRegion();
+	if(dirtyRegion.size() > 0)
+	{
+	    SDL_ExposeEvent ev;
+	    data->ignoreUpdateRequests = TRUE;
+	    data->webView->onExpose(ev);
+	    data->ignoreUpdateRequests = FALSE;
+	} 
+
+        BltBitMapRastPort(data->bufferRastPort.BitMap, 0, 0, _rp(obj), _mleft(obj), _mtop(obj), data->surface->w, data->surface->h, 0xC0);
+    }
+    else
+    {
+        if(data->scrollData)
+	{
+            Layer *Layer = _rp(obj)->Layer;
+
+	    ScrollRaster(&data->bufferRastPort, data->scrollData->dx, data->scrollData->dy,
+                    data->scrollData->x,
+                    data->scrollData->y,
+                    data->scrollData->width + data->scrollData->x - 1,
+                    data->scrollData->height + data->scrollData->y - 1);
+
+	    std::vector<BalRectangle> dirtyRegion = data->webView->dirtyRegion();
+	    if(dirtyRegion.size() > 0)
+	    {
+	        SDL_ExposeEvent ev;
+	        data->ignoreUpdateRequests = TRUE;
+	        data->webView->onExpose(ev);
+	        data->ignoreUpdateRequests = FALSE;
+	    } 
+
+            BltBitMapRastPort(data->bufferRastPort.BitMap, 0, 0, _rp(obj), _mleft(obj), _mtop(obj), data->surface->w, data->surface->h, 0xC0);
+	}
+	else
+	{
+	    SDL_ExposeEvent ev;
+	    data->webView->onExpose(ev);	
+	}
+    }
+
+/*
+    get(obj, MUIA_Group_ChildList, &children);
+    cstate = children->lh_Head;
+    while(child && (child = NextObject(&cstate)))
+    {
+	MUI_Redraw(child, MADF_DRAWOBJECT);
+    }
+*/
+    D(bug("WebView__MUIM_Draw end\n"));
+    return TRUE;
+}
+
+#define _between(a,x,b) ((x)>=(a) && (x)<=(b))
+#define _isinobject(x,y) (_between(_mleft(obj),(x),_mright (obj)) && _between(_mtop(obj) ,(y),_mbottom(obj)))
+
+IPTR WebView__MUIM_HandleEvent(struct IClass *cl, Object *obj, struct MUIP_HandleEvent *msg)
+{
+    ULONG retval = 0;
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+            
+    if (msg->imsg)
+    {
+	struct IntuiMessage im = *msg->imsg;
+	im.MouseX -= _mleft(obj);
+	im.MouseY -= _mtop(obj);
+	switch (im.Class)
+        {
+            case IDCMP_MOUSEBUTTONS:
+            {
+       	    	if (_isinobject(msg->imsg->MouseX,msg->imsg->MouseY))
+                {
+                    switch (im.Code & ~IECODE_UP_PREFIX) 
+                    {
+                    	case IECODE_LBUTTON:
+                    	    if (im.Code & ~IECODE_UP_PREFIX)
+                    	    {
+			        SetAttrs(obj, MUIA_WebView_Active, TRUE, TAG_END);
+                    		/* Fake mouse move event when taking focus is necessary to fill some EventHandler fields */
+                                data->webView->onMouseMotion(im);
+                    	    }
+                    	case IECODE_MBUTTON:
+                    	    if (im.Code & IECODE_UP_PREFIX)
+                    		data->webView->onMouseButtonUp(im);
+                    	    else
+                    		data->webView->onMouseButtonDown(im);
+                    	    break;
+                    }
+                }
+       	    	else
+       	    	{
+       	    	    if(data->isActive)
+       	    	    {
+       	    	        if(im.Code & IECODE_UP_PREFIX)
+       	    	        {
+       	    		    data->webView->onMouseButtonUp(im);
+       	    	        }
+		        SetAttrs(obj, MUIA_WebView_Active, FALSE, TAG_END);
+       	    	    }
+       	    	}
+            }
+            break;
+            case IDCMP_MOUSEMOVE:
+            {
+        	if (_isinobject(msg->imsg->MouseX,msg->imsg->MouseY) || data->isActive)
+        	{
+                    data->webView->onMouseMotion(im);
+        	}
+                data->mouseX = msg->imsg->MouseX;
+                data->mouseY = msg->imsg->MouseY;
+            }
+            break;
+            case IDCMP_RAWKEY:
+            {
+        	if(im.Code == RAWKEY_TAB)
+        	{
+        	    Object *active;
+        	    GetAttr(MUIA_Window_ActiveObject, _win(obj), (IPTR*) &active);
+        	    if(active == obj && data->isActive == 0)
+        	    {
+        		/* WebView Object got activated in the event chain */
+        		data->webView->clearFocusNode();
+        		retval = MUI_EventHandlerRC_Eat;
+        		data->isActive = 1;
+			data->webView->updateFocusedAndActiveState();
+        		break;
+        	    }
+        	    else if(active != obj && data->isActive == 0)
+        	    {
+        		/* Ignore tab events if object is not active */
+        		break;
+        	    }
+        	}
+        	
+        	if(data->isActive)
+        	    retval = MUI_EventHandlerRC_Eat;
+
+                if(
+                    _isinobject(msg->imsg->MouseX,msg->imsg->MouseY) &&
+                    (im.Code == RAWKEY_NM_WHEEL_UP   ||
+                    im.Code == RAWKEY_NM_WHEEL_DOWN ||
+                    im.Code == RAWKEY_NM_WHEEL_LEFT ||
+                    im.Code == RAWKEY_NM_WHEEL_DOWN)
+                )
+                {
+                    data->webView->onScroll(im);                    
+                }
+                else
+                {
+                    if (im.Code & IECODE_UP_PREFIX)
+                        data->webView->onKeyUp(im);
+                    else
+                        data->webView->onKeyDown(im);
+                }
+                
+                /* Override active object if needed, so toggling between page 
+                 * elements won't interfere with Zune object cycle */
+                if(im.Code == RAWKEY_TAB && data->isActive)
+                {
+                    SetAttrs(_win(obj), MUIA_Window_ActiveObject, MUIV_Window_ActiveObject_None, TAG_END);
+                }
+            }
+            break;
+        }
+    }
+    
+    return retval;
+}
+
+IPTR WebView__MUIM_ContextMenuBuild(struct IClass *cl, Object *obj, struct MUIP_ContextMenuBuild *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+
+    /* Create fake mouse event */
+    struct IntuiMessage im;
+    im.MouseX = data->mouseX - _mleft(obj);
+    im.MouseY = data->mouseY - _mtop(obj);
+    im.Class = IDCMP_MOUSEBUTTONS;
+    im.Code = IECODE_RBUTTON;
+    im.Qualifier = 0;
+    
+    data->webView->onMouseButtonDown(im);
+    
+    return DoSuperMethodA(cl, obj, (Msg) msg);
+}
+
+IPTR WebView__MUIM_ContextMenuChoice(struct IClass *cl, Object *obj, struct MUIP_ContextMenuChoice *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    
+    /* Create fake mouse event */
+    struct IntuiMessage im;
+    im.MouseX = data->mouseX - _mleft(obj);
+    im.MouseY = data->mouseY - _mtop(obj);
+    im.Class = IDCMP_MOUSEBUTTONS;
+    im.Code = IECODE_RBUTTON | IECODE_UP_PREFIX;
+    im.Qualifier = 0;
+
+    data->webView->onMouseButtonUp(im);
+    
+    return DoSuperMethodA(cl, obj, (Msg) msg);
+}
+
+IPTR WebView__MUIM_WebView_UpdateRect(struct IClass *cl, Object *obj, struct MUIP_WebView_UpdateRect *msg)
+{
+    D(bug("WebView__MUIM_WebView_UpdateRect start\n"));
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+
+    // source format depends on the endianess
+    UBYTE srcformat;
+#if SDL_BYTEORDER == SDL_BIG_ENDIAN
+    srcformat = RECTFMT_ARGB32;
+#else
+    srcformat = RECTFMT_BGRA32;
+#endif
+
+    if( SDL_MUSTLOCK(data->surface) )
+        { SDL_LockSurface(data->surface); } 
+
+    WritePixelArray(data->surface->pixels, msg->x, msg->y, data->surface->pitch, &data->bufferRastPort, msg->x, msg->y, msg->width, msg->height, srcformat);
+
+    if(!data->ignoreUpdateRequests)
+    {
+        BltBitMapRastPort(data->bufferRastPort.BitMap, msg->x, msg->y, _rp(obj), _mleft(obj) + msg->x, _mtop(obj) + msg->y, msg->width, msg->height, 0xC0);
+    }
+    
+    if( SDL_MUSTLOCK(data->surface) )
+        { SDL_UnlockSurface(data->surface); } 
+
+    D(bug("WebView__MUIM_WebView_UpdateRect end\n"));
+    return TRUE;
+}
+
+IPTR WebView__MUIM_WebView_Expose(struct IClass *cl, Object *obj, Msg msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    D(bug("WebView__MUIM_WebView_Expose start nesting %d\n", data->nesting++));
+    data->expose = TRUE;
+    D(bug("WebView__MUIM_WebView_Expose end %d\n", data->nesting--));
+    return TRUE;
+}
+
+IPTR WebView__MUIM_WebView_LoadURL(struct IClass *cl, Object *obj, struct MUIP_WebView_LoadURL *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    data->webView->clearMainFrameName();
+    data->webView->mainFrame()->loadURL(msg->url);
+    return TRUE;
+}
+
+IPTR WebView__MUIM_WebView_GoBack(struct IClass *cl, Object *obj, Msg msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    data->webView->clearMainFrameName();
+    data->webView->goBack();
+    return TRUE;
+}
+
+IPTR WebView__MUIM_WebView_GoForward(struct IClass *cl, Object *obj, Msg msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    data->webView->clearMainFrameName();
+    data->webView->goForward();
+    return TRUE;
+}
+
+IPTR WebView__MUIM_WebView_StopLoading(struct IClass *cl, Object *obj, Msg msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    data->webView->mainFrame()->stopLoading();
+    return TRUE;
+}
+
+IPTR WebView__MUIM_WebView_Reload(struct IClass *cl, Object *obj, Msg msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    data->webView->clearMainFrameName();
+    data->webView->mainFrame()->reload();
+    return TRUE;
+}
+
+IPTR WebView__MUIM_WebView_CreateNew(struct IClass *cl, Object *obj, MUIP_WebView_CreateNew *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    if(data->createNewHook)
+    {
+	return DoMethod(obj, MUIM_CallHook, data->createNewHook, msg->specification);
+    }
+    else
+	return NULL;
+}
+
+IPTR WebView__MUIM_WebView_Alert(struct IClass *cl, Object *obj, struct MUIP_WebView_Alert *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    if(data->alertHook)
+    {
+	return DoMethod(obj, MUIM_CallHook, data->alertHook, msg->message);
+    }
+    else
+	return NULL;
+}
+
+IPTR WebView__MUIM_WebView_Confirm(struct IClass *cl, Object *obj, struct MUIP_WebView_Confirm *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    if(data->confirmHook)
+    {
+	return DoMethod(obj, MUIM_CallHook, data->confirmHook, msg->message);
+    }
+    else
+	return NULL;
+}
+
+IPTR WebView__MUIM_WebView_Prompt(struct IClass *cl, Object *obj, struct MUIP_WebView_Prompt *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    if(data->promptHook)
+    {
+	STRPTR args[] = { msg->message, msg->defaultAnswer };
+	return DoMethod(obj, MUIM_CallHook, data->promptHook, args);
+    }
+    else
+	return NULL;
+}
+
+IPTR WebView__MUIM_WebView_RequestPolicy(struct IClass *cl, Object *obj, struct MUIP_WebView_RequestPolicy *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    if(data->policyHook)
+    {
+	CONST_STRPTR args[] = { msg->fileName, msg->mimeType };
+	return DoMethod(obj, MUIM_CallHook, data->policyHook, args);
+    }
+    else
+	return NULL;
+}
+
+IPTR WebView__MUIM_WebView_RequestCredentials(struct IClass *cl, Object *obj, struct MUIP_WebView_RequestCredentials *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    if(data->credentialsHook)
+    {
+	IPTR args[] = { (IPTR) msg->host, (IPTR) msg->realm, (IPTR) msg->username, (IPTR) msg->password };
+	return DoMethod(obj, MUIM_CallHook, data->credentialsHook, args);
+    }
+    else
+	return (IPTR) FALSE;
+}
+
+IPTR WebView__MUIM_WebView_ReturnFocus(struct IClass *cl, Object *obj, Msg msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    DoMethod(_win(obj), MUIA_Window_ActiveObject, MUIV_Window_ActiveObject_Next);
+    data->isActive = 0;
+    data->webView->updateFocusedAndActiveState();
+    return TRUE;
+}
+
+IPTR WebView__MUIM_WebView_FireWebKitEvents(struct IClass *cl, Object *obj, Msg msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    if(data->expose)
+    {
+        data->expose = FALSE;
+	MUI_Redraw(obj, MADF_DRAWUPDATE);
+    }
+    data->webView->fireWebKitEvents();
+    return TRUE;
+}
+
+IPTR WebView__MUIM_WebView_SearchFor(struct IClass *cl, Object *obj, struct MUIP_WebView_SearchFor *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    data->webView->searchFor(msg->criteria, msg->forward, msg->caseSensitive, true);
+    return TRUE;
+}
+
+IPTR WebView__MUIM_WebView_Close(struct IClass *cl, Object *obj, Msg msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    return DoMethod(obj, MUIM_CallHook, data->closeHook, NULL);
+}
+
+IPTR WebView__MUIM_WebView_Zoom(struct IClass *cl, Object *obj, struct MUIP_WebView_Zoom *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    switch(msg->mode)
+    {
+	case MUIV_WebView_ZoomIn:
+	    return data->webView->zoomPageIn();
+	    break;
+	case MUIV_WebView_ZoomOut:
+	    return data->webView->zoomPageOut();
+	    break;
+	case MUIV_WebView_ZoomReset:
+	    if(!data->webView->canResetPageZoom())
+		return FALSE;
+	    else
+		data->webView->resetPageZoom();
+	    break;
+    }
+}
+
+IPTR WebView__MUIM_WebView_LoadHTMLString(struct IClass *cl, Object *obj, struct MUIP_WebView_LoadHTMLString *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    data->webView->mainFrame()->loadHTMLString(msg->data, msg->url);
+    return TRUE;
+}
+
+IPTR WebView__MUIM_WebView_Scroll(struct IClass *cl, Object *obj, struct MUIP_WebView_Scroll *msg)
+{
+    struct WebView_DATA *data = (struct WebView_DATA *) INST_DATA(cl, obj);
+    data->scrollData = msg;
+    MUI_Redraw(obj, MADF_DRAWUPDATE);
+    data->scrollData = NULL;
+}
+
+/*** Class startup and shutdown *******************************************/
+int SDL_Startup()
+{
+    if (SDL_InitSubSystem(SDL_INIT_VIDEO) < 0)
+	return FALSE;
+
+    return TRUE;
+}
+
+void SDL_Shutdown()
+{
+    SDL_QuitSubSystem(SDL_INIT_VIDEO);
+    SDL_Quit();
+}
+
+__ZUNE_CUSTOMCLASS_START(WebView)
+__ZUNE_CUSTOMCLASS_METHOD(WebView__OM_DISPOSE, OM_DISPOSE, Msg);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__OM_NEW, OM_NEW, struct opSet*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__OM_GET, OM_GET, struct opGet*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__OM_SET, OM_SET, struct opSet*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_Setup, MUIM_Setup, struct MUIP_Setup*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_Cleanup, MUIM_Cleanup, struct MUIP_Cleanup*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_Draw, MUIM_Draw, struct MUIP_Draw*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_AskMinMax, MUIM_AskMinMax, struct MUIP_AskMinMax*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_HandleEvent, MUIM_HandleEvent, struct MUIP_HandleEvent*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_ContextMenuBuild, MUIM_ContextMenuBuild, struct MUIP_ContextMenuBuild*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_ContextMenuChoice, MUIM_ContextMenuChoice, struct MUIP_ContextMenuChoice*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_UpdateRect, MUIM_WebView_UpdateRect, struct MUIP_WebView_UpdateRect*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_Expose, MUIM_WebView_Expose, Msg);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_LoadURL, MUIM_WebView_LoadURL, struct MUIP_WebView_LoadURL*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_GoBack, MUIM_WebView_GoBack, Msg);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_GoForward, MUIM_WebView_GoForward, Msg);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_StopLoading, MUIM_WebView_StopLoading, Msg);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_Reload, MUIM_WebView_Reload, Msg);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_CreateNew, MUIM_WebView_CreateNew, struct MUIP_WebView_CreateNew*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_ReturnFocus, MUIM_WebView_ReturnFocus, Msg);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_FireWebKitEvents, MUIM_WebView_FireWebKitEvents, Msg);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_SearchFor, MUIM_WebView_SearchFor, struct MUIP_WebView_SearchFor*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_Alert, MUIM_WebView_Alert, struct MUIP_WebView_Alert*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_Confirm, MUIM_WebView_Confirm, struct MUIP_WebView_Confirm*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_Prompt, MUIM_WebView_Prompt, struct MUIP_WebView_Prompt*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_RequestPolicy, MUIM_WebView_RequestPolicy, struct MUIP_WebView_RequestPolicy*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_RequestCredentials, MUIM_WebView_RequestCredentials, struct MUIP_WebView_RequestCredentials*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_Close, MUIM_WebView_Close, Msg);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_Zoom, MUIM_WebView_Zoom, struct MUIP_WebView_Zoom*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_LoadHTMLString, MUIM_WebView_LoadHTMLString, struct MUIP_WebView_LoadHTMLString*);
+__ZUNE_CUSTOMCLASS_METHOD(WebView__MUIM_WebView_Scroll, MUIM_WebView_Scroll, struct MUIP_WebView_Scroll*);
+__ZUNE_CUSTOMCLASS_END(WebView, NULL, MUIC_Area, NULL)
+
+ADD2INIT(SDL_Startup, -1);
+ADD2EXIT(SDL_Shutdown, -1);
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebViewZune.h OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebViewZune.h
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebViewZune.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebViewZune.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,106 @@
+#ifndef _BROWSER_H
+#define _BROWSER_H
+
+/*
+    Copyright � 2008, The AROS Development Team. All rights reserved.
+    $Id$
+*/
+
+#include <exec/types.h>
+#include <libraries/mui.h>
+
+/*** Identifier base ********************************************************/
+#define MUIB_WebView              	(TAG_USER | 0x10000000)
+
+/*** Public Methods *********************************************************/
+#define MUIM_WebView_UpdateRect   	(MUIB_WebView|0x00000000)
+struct  MUIP_WebView_UpdateRect   	{STACKED ULONG MethodID; STACKED int x, y, width, height;};
+#define MUIM_WebView_Expose       	(MUIB_WebView|0x00000001)
+#define MUIM_WebView_LoadURL       	(MUIB_WebView|0x00000002)
+struct  MUIP_WebView_LoadURL       	{STACKED ULONG MethodID; STACKED char *url;};
+#define MUIM_WebView_GoBack       	(MUIB_WebView|0x00000003)
+#define MUIM_WebView_GoForward    	(MUIB_WebView|0x00000004)
+#define MUIM_WebView_StopLoading  	(MUIB_WebView|0x00000005)
+#define MUIM_WebView_Reload       	(MUIB_WebView|0x00000006)
+#define MUIM_WebView_CanGoBack    	(MUIB_WebView|0x00000007)
+#define MUIM_WebView_CanGoForward 	(MUIB_WebView|0x00000008)
+#define MUIM_WebView_CreateNew		(MUIB_WebView|0x00000009)
+struct WindowSpecification
+{
+    LONG left;
+    LONG top; 
+    LONG width; 
+    LONG height; 
+    BOOL menubar; 
+    BOOL statusbar; 
+    BOOL toolbar; 
+    BOOL locationbar; 
+    BOOL scrollbars;
+    BOOL resizable; 
+    BOOL fullscreen; 
+};
+struct  MUIP_WebView_CreateNew          {STACKED ULONG MethodID; STACKED struct WindowSpecification* specification; };
+#define MUIM_WebView_ReturnFocus	(MUIB_WebView|0x0000000a)
+#define MUIM_WebView_FireWebKitEvents	(MUIB_WebView|0x0000000b)
+#define MUIM_WebView_SearchFor          (MUIB_WebView|0x0000000c)
+struct  MUIP_WebView_SearchFor   	{STACKED ULONG MethodID; STACKED char *criteria; STACKED BYTE forward; STACKED BYTE caseSensitive;};
+#define MUIM_WebView_Alert              (MUIB_WebView|0x0000000d)
+struct  MUIP_WebView_Alert              {STACKED ULONG MethodID; STACKED char *message;};
+#define MUIM_WebView_Confirm            (MUIB_WebView|0x0000000e)
+struct  MUIP_WebView_Confirm            {STACKED ULONG MethodID; STACKED char *message;};
+#define MUIM_WebView_Prompt             (MUIB_WebView|0x0000000f)
+struct  MUIP_WebView_Prompt             {STACKED ULONG MethodID; STACKED char *message; STACKED char *defaultAnswer;};
+#define MUIM_WebView_RequestPolicy      (MUIB_WebView|0x00000010)
+struct  MUIP_WebView_RequestPolicy      {STACKED ULONG MethodID; STACKED const char *fileName; STACKED const char *mimeType;}; 
+#define MUIM_WebView_RequestCredentials (MUIB_WebView|0x00000011)
+struct  MUIP_WebView_RequestCredentials {STACKED ULONG MethodID; STACKED const char *host; STACKED const char *realm; STACKED char **username; STACKED char **password; }; 
+#define MUIM_WebView_Close		(MUIB_WebView|0x00000012)
+#define MUIM_WebView_Zoom		(MUIB_WebView|0x00000013)
+struct  MUIP_WebView_Zoom		{STACKED ULONG MethodID; STACKED ULONG mode;};
+#define MUIM_WebView_LoadHTMLString	(MUIB_WebView|0x00000014)
+struct  MUIP_WebView_LoadHTMLString     {STACKED ULONG MethodID; STACKED char *url; STACKED char *data; STACKED ULONG length; STACKED char *mime; STACKED char* encoding;};
+#define MUIM_WebView_Scroll             (MUIB_WebView|0x00000015)
+struct  MUIP_WebView_Scroll             {STACKED ULONG MethodID; STACKED int x, y, width, height, dx, dy;};
+
+/*** Attributes *************************************************************/
+#define MUIA_WebView_UseWinBorder 	(MUIB_WebView|0x00000000)
+#define MUIA_WebView_Surface      	(MUIB_WebView|0x00000001)
+#define MUIA_WebView_ToolTip      	(MUIB_WebView|0x00000002)
+#define MUIA_WebView_State    		(MUIB_WebView|0x00000003)
+#define MUIA_WebView_EstimatedProgress  (MUIB_WebView|0x00000004)
+#define MUIA_WebView_URL		(MUIB_WebView|0x00000005)
+#define MUIA_WebView_Title		(MUIB_WebView|0x00000006)
+#define MUIA_WebView_CreateNewHook      (MUIB_WebView|0x00000007)
+#define MUIA_WebView_WebView            (MUIB_WebView|0x00000008)
+#define MUIA_WebView_Active             (MUIB_WebView|0x00000009)
+#define MUIA_WebView_CanGoBack          (MUIB_WebView|0x0000000a)
+#define MUIA_WebView_CanGoForward       (MUIB_WebView|0x0000000b)
+#define MUIA_WebView_AlertHook          (MUIB_WebView|0x0000000c)
+#define MUIA_WebView_ConfirmHook        (MUIB_WebView|0x0000000d)
+#define MUIA_WebView_PromptHook         (MUIB_WebView|0x0000000e)
+#define MUIA_WebView_PolicyHook         (MUIB_WebView|0x0000000f)
+#define MUIA_WebView_CredentialsHook    (MUIB_WebView|0x00000010)
+#define MUIA_WebView_CloseHook          (MUIB_WebView|0x00000011)
+#define MUIA_WebView_Data               (MUIB_WebView|0x00000012)
+#define MUIA_WebView_SourceMode         (MUIB_WebView|0x00000013)
+#define MUIA_WebView_Expose             (MUIB_WebView|0x00000014)
+
+/*** Constants **************************************************************/
+#define MUIV_WebView_State_Ready      	(MUIB_WebView|0x00000000)
+#define MUIV_WebView_State_Connecting   (MUIB_WebView|0x00000001)
+#define MUIV_WebView_State_Loading      (MUIB_WebView|0x00000002)
+#define MUIV_WebView_State_Error      	(MUIB_WebView|0x00000003)
+#define MUIV_WebView_Policy_Ignore      (MUIB_WebView|0x00000004)
+#define MUIV_WebView_Policy_Use         (MUIB_WebView|0x00000005)
+#define MUIV_WebView_Policy_Download    (MUIB_WebView|0x00000006)
+#define MUIV_WebView_ZoomIn		(MUIB_WebView|0x00000007)
+#define MUIV_WebView_ZoomOut		(MUIB_WebView|0x00000008)
+#define MUIV_WebView_ZoomReset		(MUIB_WebView|0x00000009)
+
+/*** Variables **************************************************************/
+extern struct MUI_CustomClass *WebView_CLASS;
+
+/*** Macros *****************************************************************/
+#define WebViewObject BOOPSIOBJMACRO_START(WebView_CLASS->mcc_Class)
+
+#endif /* _BROWSER_H */
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebViewZune_private.h OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebViewZune_private.h
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/AROS/WebViewZune_private.h	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/AROS/WebViewZune_private.h	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,41 @@
+#ifndef _WEBVIEW_PRIVATE_H_
+#define _WEBVIEW_PRIVATE_H_
+
+/*
+    Copyright � 2008, The AROS Development Team. All rights reserved.
+    $Id$
+*/
+
+/*** Instance data **********************************************************/
+struct WebView_DATA
+{
+    struct MUI_EventHandlerNode ehn;
+    SDL_Surface *surface;
+    WebView *webView;
+    int needsRedrawing;
+    char *toolTip;
+    int state;
+    int estimatedProgress;
+    char *title;
+    char *url;
+    struct Hook *createNewHook;
+    int isActive;
+    Object *oldActive;
+    int canGoBack;
+    int canGoForward;
+    struct MUI_InputHandlerNode timer;
+    int mouseX, mouseY;
+    struct Hook *alertHook;
+    struct Hook *confirmHook;
+    struct Hook *promptHook;
+    struct Hook *policyHook;
+    struct Hook *credentialsHook;
+    struct Hook *closeHook;
+    BOOL ignoreUpdateRequests;
+    int nesting;
+    struct MUIP_WebView_Scroll *scrollData;
+    BOOL expose;
+    struct RastPort bufferRastPort;
+};
+
+#endif /* _WEBVIEW_PRIVATE_H_ */
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/DefaultPolicyDelegate.h OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/DefaultPolicyDelegate.h
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/DefaultPolicyDelegate.h	2008-12-12 09:10:48.000000000 +0000
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/DefaultPolicyDelegate.h	2017-04-01 14:57:02.745938516 +0100
@@ -78,7 +78,7 @@
      * @endcode
      */
     static DefaultPolicyDelegate* createInstance();
-private:
+protected:
 
     /**
      * DefaultPolicyDelegate default constructor
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/WebDownload.cpp OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/WebDownload.cpp
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/WebDownload.cpp	2009-08-10 16:04:47.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/WebDownload.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -100,7 +100,7 @@
     WebCore::String suggestedFilename = webResponse->suggestedFilename();
     if(suggestedFilename.length() == 0)
     {
-        suggestedFilename = response.url().string().substring(response.url().pathAfterLastSlash());
+        suggestedFilename = response.url().string().substring(response.url().pathAfterLastSlash(), response.url().pathEnd() - response.url().pathAfterLastSlash());
     }
 
     m_download->downloadDelegate()->decideDestinationWithSuggestedFilename(m_download, suggestedFilename.utf8().data());
@@ -211,6 +211,7 @@
     m_delegate = delegate;
 
     m_request = WebMutableURLRequest::createInstance(ResourceRequest(url));
+    m_response = NULL;
 
     m_priv->downloadClient = new DownloadClient(this);
     m_priv->currentSize = 0;
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/WebFrame.cpp OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/WebFrame.cpp
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/WebFrame.cpp	2009-10-07 16:28:50.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/WebFrame.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -31,6 +31,7 @@
 
 #include "DefaultPolicyDelegate.h"
 #include "DOMCoreClasses.h"
+#include "DOMImplementation.h"
 #include "FormValuesPropertyBag.h"
 #include "WebActionPropertyBag.h"
 #include "WebChromeClient.h"
@@ -227,8 +228,8 @@
         delete (*it);
 
     delete d;
-    if (m_loadClient)
-        delete m_loadClient;
+    /*if (m_loadClient)
+        delete m_loadClient;*/
 }
 
 WebFrame* WebFrame::createInstance()
@@ -427,7 +428,22 @@
     if (!coreFrame)
         return strdup("");
 
-    return strdup(coreFrame->loader()->url().string().utf8().data());
+    String url("");
+    switch(coreFrame->loader()->state())
+    {
+        case FrameStateProvisional:
+            if(coreFrame->loader()->provisionalDocumentLoader())
+        	url = coreFrame->loader()->provisionalDocumentLoader()->originalRequest().url().string();
+            break;
+        case FrameStateCommittedPage:
+            if(coreFrame->loader()->documentLoader())
+        	url = coreFrame->loader()->documentLoader()->request().url().string();
+            break;
+        case FrameStateComplete:
+            url = coreFrame->loader()->url().string();
+            break;
+    }
+    return strdup(url.utf8().data());
 }
 
 void WebFrame::stopLoading()
@@ -789,30 +805,20 @@
     if (label.length() && !*result)
         return E_OUTOFMEMORY;
     return S_OK;
-}
+} */
 
-HRESULT WebFrame::canProvideDocumentSource(bool* result)
+bool WebFrame::canProvideDocumentSource()
 {
-    HRESULT hr = S_OK;
-    *result = false;
+    WebDataSource* source = dataSource();
+    if (!source)
+        return false;
 
-    COMPtr<IWebDataSource> dataSource;
-    hr = WebFrame::dataSource(&dataSource);
-    if (FAILED(hr))
-        return hr;
-
-    COMPtr<IWebURLResponse> urlResponse;
-    hr = dataSource->response(&urlResponse);
-    if (SUCCEEDED(hr) && urlResponse) {
-        BSTR mimeTypeBStr;
-        if (SUCCEEDED(urlResponse->MIMEType(&mimeTypeBStr))) {
-            String mimeType(mimeTypeBStr, SysStringLen(mimeTypeBStr));
-            *result = mimeType == "text/html" || WebCore::DOMImplementation::isXMLMIMEType(mimeType);
-            SysFreeString(mimeTypeBStr);
-        }
-    }
-    return hr;
-}*/
+    WebURLResponse* response = source->response();
+    if (!response)
+	return false;
+
+    return response->MIMEType() == "text/html" || WebCore::DOMImplementation::isXMLMIMEType(response->MIMEType());
+}
 
 /*static IntRect printerRect(HDC printDC)
 {
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/WebFrame.h OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/WebFrame.h
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/WebFrame.h	2009-10-02 14:41:19.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/WebFrame.h	2017-04-01 14:57:02.745938516 +0100
@@ -494,10 +494,8 @@
 
     /**
      *  canProvideDocumentSource
-     * Not Implemented
      */
-    //HRESULT canProvideDocumentSource(bool* result);
-
+    bool canProvideDocumentSource();
 
     /**
      * Get the frame url
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/WebURLAuthenticationChallenge.cpp OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/WebURLAuthenticationChallenge.cpp
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/WebURLAuthenticationChallenge.cpp	2009-02-27 17:11:08.000000000 +0000
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/WebURLAuthenticationChallenge.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -65,12 +65,7 @@
 
 void WebURLAuthenticationChallenge::initWithProtectionSpace(WebURLProtectionSpace* space, WebURLCredential* proposedCredential, int previousFailureCount, WebURLResponse* failureResponse, WebError* error, WebURLAuthenticationChallengeSender* sender)
 {
-    //LOG_ERROR("Calling the ala carte init for WebURLAuthenticationChallenge - is this really what you want to do?");
-
-    // FIXME: After we change AuthenticationChallenge to use "ResourceHandle" as the abstract "Sender" or "Source of this Auth Challenge", then we'll
-    // construct the AuthenticationChallenge with that as obtained from the webSender
-
-    m_authenticationChallenge = AuthenticationChallenge(space->protectionSpace(), proposedCredential->credential(), previousFailureCount, failureResponse->resourceResponse(), error->resourceError());
+    m_authenticationChallenge = AuthenticationChallenge(space->protectionSpace(), proposedCredential->credential(), previousFailureCount, failureResponse->resourceResponse(), error->resourceError(), sender->resourceHandle());
 }
 
 void WebURLAuthenticationChallenge::initWithAuthenticationChallenge(WebURLAuthenticationChallenge* challenge, WebURLAuthenticationChallengeSender* sender)
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/WebView.cpp OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/WebView.cpp
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/WebView.cpp	2009-10-16 19:40:05.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/WebView.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -128,6 +128,18 @@
 #include <proto/intuition.h>
 #include <proto/layout.h>
 #include <intuition/gadgetclass.h>
+#elif PLATFORM(AROS)
+extern "C" {
+#include <proto/exec.h>
+#include <intuition/intuition.h>
+#include <proto/intuition.h>
+#include <proto/muimaster.h>
+#include <libraries/mui.h>
+#include <WebViewZune.h>
+#include <aros/debug.h>
+#include <proto/alib.h>
+#undef PageGroup
+}
 #else
 #include <sys/sysinfo.h>
 #endif
@@ -399,6 +411,8 @@
        memSize=physmem / (1024*1024);
 #elif PLATFORM(AMIGAOS4)
     memSize = IExec->AvailMem(MEMF_TOTAL) / (1024 * 1024);
+#elif PLATFORM(AROS)
+    memSize = AvailMem(MEMF_TOTAL) / (1024 * 1024);
 #else
     struct sysinfo info;
     memset(&info, 0, sizeof(info));
@@ -645,7 +659,7 @@
     d->addToDirtyRegion(dirtyRect);
 }
 
-BalRectangle WebView::dirtyRegion()
+std::vector<BalRectangle> WebView::dirtyRegion()
 {
     return d->dirtyRegion();
 }
@@ -749,7 +763,7 @@
 void WebView::closeWindowSoon()
 {
 //    m_closeWindowTimer.startOneShot(0);
-#if PLATFORM(AMIGAOS4)
+#if PLATFORM(AMIGAOS4) || PLATFORM(AROS)
     closeWindow();
 #endif    
 }
@@ -765,6 +779,10 @@
     extern void closeAmigaWindow(BalWidget *owbwindow);
 
     closeAmigaWindow(viewWindow());
+#elif PLATFORM(AROS)
+    BalWidget *widget = m_viewWindow;
+    if (widget)
+        DoMethod(widget, MUIM_WebView_Close);
 #endif    
 }
 
@@ -795,6 +813,16 @@
         return "Mozilla/5.0 (compatible; Origyn Web Browser; AmigaOS 4.0; ppc; U; en) AppleWebKit/528.5+ (KHTML, like Gecko, Safari/528.5+)";
     else
         return "Mozilla/5.0 (compatible; Origyn Web Browser; AmigaOS 4.1; ppc; U; en) AppleWebKit/528.5+ (KHTML, like Gecko, Safari/528.5+)";
+#elif PLATFORM(AROS)
+#ifdef __x86_64__
+    return "Mozilla/5.0 (compatible; Origyn Web Browser; AROS; x86_64; U) AppleWebKit/525.1+ (KHTML, like Gecko, Safari/525.1+)";
+#elif __i386__
+    return "Mozilla/5.0 (compatible; Origyn Web Browser; AROS; i686; U) AppleWebKit/525.1+ (KHTML, like Gecko, Safari/525.1+)";
+#elif defined(__powerpc__) || defined(__ppc__)
+    return "Mozilla/5.0 (compatible; Origyn Web Browser; AROS; ppc; U) AppleWebKit/525.1+ (KHTML, like Gecko, Safari/525.1+)";
+#elif __arm__
+    return "Mozilla/5.0 (compatible; Origyn Web Browser; AROS; arm; U) AppleWebKit/525.1+ (KHTML, like Gecko, Safari/525.1+)";
+#endif
 #else
     // NOTE: some pages don't render with this UA.
     // m_userAgentStandard = "Mozilla/5.0 (iPod; U; CPU like Mac OS X; fr) AppleWebKit/420.1 (KHTML, like Gecko) Version/3.0 Mobile/3B48b Safari/419.3";
@@ -827,7 +855,7 @@
 static const unsigned CtrlKey = 1 << 0;
 static const unsigned AltKey = 1 << 1;
 static const unsigned ShiftKey = 1 << 2;
-#if PLATFORM(AMIGAOS4)
+#if PLATFORM(AMIGAOS4) || PLATFORM(AROS)
 static const unsigned AmigaKey = 1 << 4;
 #endif
 
@@ -896,7 +924,7 @@
     { 'V',       CtrlKey,            "Paste"                                       },
     { 'X',       CtrlKey,            "Cut"                                         },
     { 'A',       CtrlKey,            "SelectAll"                                   },
-#if PLATFORM(AMIGAOS4)
+#if PLATFORM(AMIGAOS4) || PLATFORM(AROS)
     { 'C',       AmigaKey,           "Copy"                                        },
     { 'V',       AmigaKey,           "Paste"                                       },
     { 'X',       AmigaKey,           "Cut"                                         },
@@ -952,7 +980,7 @@
         modifiers |= AltKey;
     if (evt->ctrlKey())
         modifiers |= CtrlKey;
-#if PLATFORM (AMIGAOS4)
+#if PLATFORM (AMIGAOS4) || PLATFORM (AROS)
     if (evt->metaKey())
         modifiers |= AmigaKey;
 #endif
@@ -1143,6 +1171,15 @@
                                         TAG_DONE))
             ILayout->RefreshPageGadget(widget->gad_status, widget->page, widget->window, NULL);
     }
+#elif PLATFORM(AROS)
+    if (toolTip == m_toolTip)
+        return;
+
+    m_toolTip = toolTip;
+
+    BalWidget *widget = m_viewWindow;
+    if (widget)
+        SetAttrs(widget, MUIA_WebView_ToolTip,(IPTR) toolTip, TAG_DONE);
 #endif
     /*if (!m_toolTipHwnd)
         return;
@@ -1611,9 +1648,15 @@
 
 bool WebView::active()
 {
+#if PLATFORM(AROS)
+    IPTR isActive = 0;
+    GetAttr(MUIA_WebView_Active, m_viewWindow, &isActive);
+    return (bool) isActive;
+#else
     /*HWND activeWindow = GetActiveWindow();
     return (activeWindow && m_topLevelParent == findTopLevelParent(activeWindow));*/
     return true;
+#endif
 }
 
 static PassOwnPtr<Vector<String> > toStringVector(unsigned patternsCount, const char** patterns)
@@ -1749,12 +1792,34 @@
 
 void WebView::updateFocusedAndActiveState()
 {
+#if PLATFORM(AROS)
+    m_page->focusController()->setActive(active());
+
+    bool active = m_page->focusController()->isActive();
+
+    if(active)
+    {
+        FocusController *focusController = m_page->focusController();
+        Frame *frame = focusController->focusedFrame();
+        Frame* mainFrame = m_page->mainFrame();
+        if (frame)
+            focusController->setFocused(true);
+        else if(mainFrame)
+            focusController->setFocusedFrame(mainFrame);
+    }
+    else
+    {
+        FocusController *focusController = m_page->focusController();
+        focusController->setFocused(false);
+    }
+#else
     updateActiveState();
 
     bool active = m_page->focusController()->isActive();
     Frame* mainFrame = m_page->mainFrame();
     Frame* focusedFrame = m_page->focusController()->focusedOrMainFrame();
     mainFrame->selection()->setFocused(mainFrame);
+#endif
 }
 
 String buffer(const char* url)
@@ -2355,7 +2420,7 @@
     enabled = preferences->zoomsTextOnly();
     settings->setZoomsTextOnly(!!enabled);
 
-#if PLATFORM(AMIGAOS4)
+#if PLATFORM(AMIGAOS4) || PLATFORM(AROS)
     settings->setShowsURLsInToolTips(true);
 #else
     settings->setShowsURLsInToolTips(false);
@@ -2775,7 +2840,7 @@
     if (!domNode)
         return false;
 
-    Node* node = domNode->node();
+    WebCore::Node* node = domNode->node();
     if (!node)
         return false;
 
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/Api/WebView.h OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/WebView.h
--- OWB-r1097/WebKit/OrigynWebBrowser/Api/WebView.h	2009-10-16 19:40:05.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/Api/WebView.h	2017-04-01 14:57:02.745938516 +0100
@@ -40,6 +40,7 @@
  */
 #include "WebKitTypes.h"
 #include <string>
+#include <vector>
 
 class DefaultPolicyDelegate;
 class DOMDocument;
@@ -1140,7 +1141,7 @@
     /**
      *  dirtyRegion 
      */
-    BalRectangle dirtyRegion();
+    std::vector<BalRectangle> dirtyRegion();
 
     /**
      *  clearDirtyRegion 
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/CMakeLists.txt OWB-r1097.aros/WebKit/OrigynWebBrowser/CMakeLists.txt
--- OWB-r1097/WebKit/OrigynWebBrowser/CMakeLists.txt	2009-09-15 09:59:14.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -39,6 +39,20 @@
     )
 endif(USE_GRAPHICS_SDL)
 
+if(USE_GRAPHICS_AROS)
+    list(APPEND WEBKIT_SRC
+        Api/AROS/WebViewPrivate.cpp
+        Api/AROS/WebViewZune.cpp
+        Api/AROS/DownloadDelegateAROS.cpp
+        Api/AROS/DownloadDelegateZune.cpp
+        Api/AROS/WebPreferencesZune.cpp
+        Api/AROS/PolicyDelegateAROS.cpp
+    )
+    include_directories(
+        Api/AROS
+    )
+endif(USE_GRAPHICS_AROS)
+
 aux_source_directory(Api WEBKIT_SRC)
 aux_source_directory(WebCoreSupport WEBKIT_SRC)
 
@@ -75,7 +89,7 @@
 set_source_files_properties(${WEBKIT_SRC}
     PROPERTIES COMPILE_FLAGS "-fno-rtti -fno-exceptions"
 )
-add_library(webkit-owb SHARED ${WEBKIT_SRC})
+add_library(webkit-owb ${WEBKIT_SRC})
 add_dependencies(webkit-owb webcore)
 
 target_link_libraries(webkit-owb
@@ -102,6 +116,7 @@
     ## LIBRARY DESTINATION is useless with vcproj
     install(TARGETS webkit-owb
         LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
     )
 ENDIF(NOT WIN32)
 
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/WebCoreSupport/WebChromeClient.cpp OWB-r1097.aros/WebKit/OrigynWebBrowser/WebCoreSupport/WebChromeClient.cpp
--- OWB-r1097/WebKit/OrigynWebBrowser/WebCoreSupport/WebChromeClient.cpp	2009-10-16 19:40:05.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/WebCoreSupport/WebChromeClient.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -61,9 +61,21 @@
 #include <intuition/gadgetclass.h>
 #include <reaction/reaction_macros.h>
 #undef String
+#elif PLATFORM(AROS)
+extern "C" {
+#include <proto/intuition.h>
+#include <proto/alib.h>
+#include <proto/muimaster.h>
+#include <WebViewZune.h>
+#include <aros/debug.h>
+#include <libraries/asl.h>
+#include <proto/asl.h>
+}
+#include <FileSystem.h>
 #endif
 
 #include <cstdio>
+#include <cstring>
 
 using namespace WebCore;
 
@@ -115,11 +127,20 @@
 
 bool WebChromeClient::canTakeFocus(FocusDirection direction)
 {
+#if PLATFORM(AROS)
+    return true;
+#else
     return false;
+#endif
 }
 
 void WebChromeClient::takeFocus(FocusDirection direction)
 {
+#if PLATFORM(AROS)
+    BalWidget* viewWindow = m_webView->viewWindow();
+    D(bug("takeFocus\n"));
+    DoMethod(viewWindow, MUIM_WebView_ReturnFocus);
+#endif
 }
 
 Page* WebChromeClient::createWindow(Frame*, const FrameLoadRequest& frameLoadRequest, const WindowFeatures& features)
@@ -156,6 +177,39 @@
     }
 
     return 0;
+#elif PLATFORM(AROS)
+    D(bug("createWindow\n"));
+    if (features.dialog) {
+        fprintf(stderr, "%s: features.dialog not implemented on AROS.\n", __PRETTY_FUNCTION__);
+        return 0;
+    }
+
+    BalWidget* viewWindow = m_webView->viewWindow();
+    if (viewWindow) {
+	struct WindowSpecification spec;
+	spec.left = static_cast<LONG>(features.xSet ? features.x : -1);
+	spec.top = static_cast<LONG>(features.ySet ? features.y : -1);
+	spec.width = static_cast<LONG>(features.widthSet ? features.width : -1);
+	spec.height = static_cast<LONG>(features.heightSet ? features.height : -1);
+	spec.menubar = static_cast<BOOL>(features.menuBarVisible);
+	spec.statusbar= static_cast<BOOL>(features.statusBarVisible);
+	spec.toolbar = static_cast<BOOL>(features.toolBarVisible);
+	spec.locationbar = static_cast<BOOL>(features.locationBarVisible);
+	spec.scrollbars = static_cast<BOOL>(features.scrollbarsVisible);
+	spec.resizable = static_cast<BOOL>(features.resizable);
+	spec.fullscreen = static_cast<BOOL>(features.fullscreen);
+        BalWidget *newWindow = (BalWidget*) DoMethod(viewWindow, MUIM_WebView_CreateNew, &spec);
+        if(newWindow) {
+            WebView *newWebView = NULL;
+            GetAttr(MUIA_WebView_WebView, newWindow, (IPTR*) &newWebView);
+	    if(newWebView)
+	    {
+		newWebView->mainFrame()->loadURL(frameLoadRequest.resourceRequest().url().prettyURL().utf8().data());
+                return core(newWebView);
+	    }
+        }
+    }
+    return 0;
 #else
     if (features.dialog) {
         /*COMPtr<IWebUIDelegate3> delegate = uiDelegate3();
@@ -188,6 +242,26 @@
 #endif
 }
 
+Page* WebChromeClient::createTab(Frame*, const FrameLoadRequest& frameLoadRequest)
+{
+    D(bug("createTab\n"));
+
+    BalWidget* viewWindow = m_webView->viewWindow();
+    if (viewWindow) {
+        BalWidget *newWindow = (BalWidget*) DoMethod(viewWindow, MUIM_WebView_CreateNew, NULL);
+        if(newWindow) {
+            WebView *newWebView = NULL;
+            GetAttr(MUIA_WebView_WebView, newWindow, (IPTR*) &newWebView);
+	    if(newWebView)
+	    {
+		newWebView->mainFrame()->loadURL(frameLoadRequest.resourceRequest().url().prettyURL().utf8().data());
+                return core(newWebView);
+	    }
+        }
+    }
+    return 0;
+}
+
 void WebChromeClient::show()
 {
 }
@@ -406,7 +480,15 @@
     char* value = 0;
     JSActionDelegate* jsActionDelegate = m_webView->jsActionDelegate();
     if (jsActionDelegate)
-        return jsActionDelegate->jsPrompt(m_webView->mainFrame(), message.utf8().data(), defaultValue.utf8().data(), &value);
+    {
+        bool res = jsActionDelegate->jsPrompt(m_webView->mainFrame(), message.utf8().data(), defaultValue.utf8().data(), &value);
+        if(value)
+        {
+            result = value;
+            free(value);
+        }
+        return res;
+    }
 #endif
     return false;
 }
@@ -432,6 +514,14 @@
                                         TAG_DONE))
             ILayout->RefreshPageGadget(widget->gad_status, widget->page, widget->window, NULL);
     }
+#elif PLATFORM(AROS)
+    BalWidget *widget = m_webView ? m_webView->viewWindow() : 0;
+    if (widget)
+    {
+	char *text = strdup(statusText.utf8().data());
+        SetAttrs(widget, MUIA_WebView_ToolTip,(IPTR) text,TAG_DONE);
+        free(text);
+    }
 #endif
 }
 
@@ -551,9 +641,44 @@
     //FIXME: implement me!
     return false;
 }
-void WebChromeClient::runOpenPanel(Frame*, PassRefPtr<FileChooser> prpFileChooser)
+
+void WebChromeClient::runOpenPanel(Frame* frame, PassRefPtr<FileChooser> prpFileChooser)
 {
+#if PLATFORM(AROS)
+    D(bug("choose files\n"));
+    RefPtr<FileChooser> chooser = prpFileChooser;
+    BalWidget* viewWindow = m_webView->viewWindow();
+    
+    struct Window *win;
+    GetAttr(MUIA_Window, viewWindow, (IPTR*) &win);
 
+    struct FileRequester *req = AllocFileRequest();
+    if(req)
+    {
+	BOOL res = AslRequestTags(req,
+		ASLFR_TitleText, "Choose file",
+		ASLFR_DoMultiSelect, (IPTR) chooser->allowsMultipleFiles(),
+		ASLFR_Window, win,
+		ASLFR_SleepWindow, (IPTR) TRUE,
+		TAG_END);
+	
+	if(res)
+	{
+	    if(chooser->allowsMultipleFiles())
+	    {
+		Vector<String> names;
+		struct WBArg *frargs = req->rf_ArgList;
+		for (int i = 0; i < req->rf_NumArgs; i++)
+		    names.append(pathByAppendingComponent(String((char*) req->fr_Drawer), String((char*) frargs[i].wa_Name)));
+
+		chooser->chooseFiles(names);
+	    }
+	    else
+		chooser->chooseFile(pathByAppendingComponent(String((char*) req->fr_Drawer), String((char*) req->fr_File)));
+	}
+	FreeFileRequest(req);
+    }
+#endif
 }
 
 bool WebChromeClient::setCursor(WebCore::PlatformCursorHandle cursor)
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/WebCoreSupport/WebChromeClient.h OWB-r1097.aros/WebKit/OrigynWebBrowser/WebCoreSupport/WebChromeClient.h
--- OWB-r1097/WebKit/OrigynWebBrowser/WebCoreSupport/WebChromeClient.h	2009-10-14 14:25:22.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/WebCoreSupport/WebChromeClient.h	2017-04-01 14:57:02.745938516 +0100
@@ -62,6 +62,7 @@
     virtual void takeFocus(WebCore::FocusDirection);
 
     virtual WebCore::Page* createWindow(WebCore::Frame*, const WebCore::FrameLoadRequest&, const WebCore::WindowFeatures&);
+    virtual WebCore::Page* createTab(WebCore::Frame*, const WebCore::FrameLoadRequest&);
     virtual void show();
 
     virtual bool canRunModal();
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/WebCoreSupport/WebFrameLoaderClient.cpp OWB-r1097.aros/WebKit/OrigynWebBrowser/WebCoreSupport/WebFrameLoaderClient.cpp
--- OWB-r1097/WebKit/OrigynWebBrowser/WebCoreSupport/WebFrameLoaderClient.cpp	2009-10-16 19:40:05.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/WebCoreSupport/WebFrameLoaderClient.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -90,6 +90,13 @@
 #include <proto/layout.h>
 #include <gadgets/clicktab.h>
 #include <intuition/gadgetclass.h>
+#elif PLATFORM(AROS)
+extern "C" {
+#include <proto/intuition.h>
+#include <proto/alib.h>
+#include <WebViewZune.h>
+#include <aros/debug.h>
+}
 #endif
 
 #include <cstdio>
@@ -157,19 +164,25 @@
 
 void WebFrameLoaderClient::dispatchDidReceiveAuthenticationChallenge(DocumentLoader* loader, unsigned long identifier, const AuthenticationChallenge& challenge)
 {
-    //ASSERT(challenge.sourceHandle());
-
-    /*WebView* webView = m_webFrame->webView();
-    COMPtr<IWebResourceLoadDelegate> resourceLoadDelegate;
-    if (SUCCEEDED(webView->resourceLoadDelegate(&resourceLoadDelegate))) {
-        COMPtr<WebURLAuthenticationChallenge> webChallenge(AdoptCOM, WebURLAuthenticationChallenge::createInstance(challenge));
-        if (SUCCEEDED(resourceLoadDelegate->didReceiveAuthenticationChallenge(webView, identifier, webChallenge.get(), getWebDataSource(loader))))
-            return;
-    }*/
+    ASSERT(challenge.sourceHandle());
 
-    // If the ResourceLoadDelegate doesn't exist or fails to handle the call, we tell the ResourceHandle
-    // to continue without credential - this is the best approximation of Mac behavior
-    //challenge.sourceHandle()->receivedRequestToContinueWithoutCredential(challenge);
+    BalWidget* viewWindow = m_webFrame->webView()->viewWindow();
+    if (viewWindow) {
+	char *username = NULL, *password = NULL;
+	String host = challenge.protectionSpace().host();
+	String realm = challenge.protectionSpace().realm();
+	if(DoMethod(viewWindow, MUIM_WebView_RequestCredentials, host.utf8().data(), realm.utf8().data(), &username, &password))
+	{
+            Credential credential = Credential(username, password, CredentialPersistenceForSession);
+            free(username);
+            free(password);
+	    challenge.sourceHandle()->receivedCredential(challenge, credential);	    
+	}
+	else
+	    challenge.sourceHandle()->receivedRequestToContinueWithoutCredential(challenge);
+    }
+    else
+	challenge.sourceHandle()->receivedRequestToContinueWithoutCredential(challenge);
 }
 
 void WebFrameLoaderClient::dispatchDidFirstVisuallyNonEmptyLayout()
@@ -434,6 +447,22 @@
     }
 
     return 0;
+#elif PLATFORM(AROS)
+    WebFrame *frame = m_webFrame;
+    while(frame->parentFrame())
+	frame = frame->parentFrame();
+
+    BalWidget* viewWindow = frame->webView()->viewWindow();
+    if (viewWindow) {
+	BalWidget *newWindow = (BalWidget*) DoMethod(viewWindow, MUIM_WebView_CreateNew, NULL);
+	if(newWindow)
+	{
+	    WebView *newWebView;
+	    GetAttr(MUIA_WebView_WebView, newWindow, (IPTR*) &newWebView);
+	    return newWebView->mainFrame()->impl();
+	}
+    }
+    return 0;
 #else
     /*WebView* webView = m_webFrame->webView();
 
diff -ruN OWB-r1097/WebKit/OrigynWebBrowser/webkit-owb.pc OWB-r1097.aros/WebKit/OrigynWebBrowser/webkit-owb.pc
--- OWB-r1097/WebKit/OrigynWebBrowser/webkit-owb.pc	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKit/OrigynWebBrowser/webkit-owb.pc	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,11 @@
+prefix=/home/Nick/Developer/AROS/local_builds/trunk/pc-x86_64-smp-gcc6/bin/pc-x86_64-smp/AROS/Developer
+exec_prefix=${prefix}
+libdir=${prefix}/lib
+includedir=${prefix}/include
+
+Name: libwebkit-owb
+Description: Web rendering library based on webkit.
+Version: 1.0
+Requires: sdl >= 1.2.10
+Libs: -L${libdir} -lwebkit-owb
+Cflags: -DWTF_PLATFORM_AROS -I${includedir}/webkit-owb
diff -ruN OWB-r1097/WebKitTools/OWBLauncher/AROS/main.cpp OWB-r1097.aros/WebKitTools/OWBLauncher/AROS/main.cpp
--- OWB-r1097/WebKitTools/OWBLauncher/AROS/main.cpp	1970-01-01 01:00:00.000000000 +0100
+++ OWB-r1097.aros/WebKitTools/OWBLauncher/AROS/main.cpp	2017-04-01 14:57:02.745938516 +0100
@@ -0,0 +1,116 @@
+/*
+ * Copyright (C) 2008 Pleyo.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ * 3.  Neither the name of Pleyo nor the names of
+ *     its contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY PLEYO AND ITS CONTRIBUTORS "AS IS" AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL PLEYO OR ITS CONTRIBUTORS BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include <exec/types.h>
+
+extern "C" {
+#include <proto/exec.h>
+#include <proto/intuition.h>
+#include <proto/muimaster.h>
+#include <proto/dos.h>
+#include <libraries/mui.h>
+#include <dos/dos.h>
+#include <aros/debug.h>
+#include <proto/alib.h>
+}
+
+#include <WebViewZune.h>
+
+
+int main()
+{
+    Object *webView, *wnd;
+    IPTR argArray[] = { 0 };
+    struct RDArgs *args = NULL;
+    const char *url = NULL;
+
+    if((args = ReadArgs("URL", argArray, NULL)) != NULL)
+    {
+	if(argArray[0])
+	{
+	    url = StrDup((const char*) argArray[0]);
+	    if(!url)
+	    {
+		FreeArgs(args);
+		return 1;
+	    }
+	}
+	FreeArgs(args);
+    }
+    
+    Object *app = ApplicationObject,
+        SubWindow, wnd = WindowObject,
+            MUIA_Window_Title, "OWB",
+            MUIA_Window_NoMenus, TRUE,
+            WindowContents, VGroup, 
+                Child, webView = (Object*) NewObject(WebView_CLASS->mcc_Class, NULL, TAG_END),
+                End,
+            End,
+        End;
+      
+    if (app != NULL)
+    {
+        ULONG sigs = 0;
+
+        /* Click Close gadget or hit Escape to quit */
+        DoMethod(wnd, MUIM_Notify, MUIA_Window_CloseRequest, TRUE,
+        	(IPTR)app, 2,
+        	MUIM_Application_ReturnID, MUIV_Application_ReturnID_Quit);
+
+        /* Open the window */
+        SetAttrs(wnd, MUIA_Window_Open, TRUE, TAG_END);
+        
+        int opened = FALSE;
+        GetAttr(MUIA_Window_Open, wnd, (IPTR*) &opened);
+        bug("opened: %d, webView: %p\n", opened, webView);
+        /* Check that the window opened */
+        if (opened)
+        {
+            DoMethod(webView, MUIM_WebView_LoadURL, (url ? url : "http://google.com"));
+            
+            /* Main loop */
+            while((LONG)DoMethod(app, MUIM_Application_NewInput, (IPTR)&sigs)
+                  != MUIV_Application_ReturnID_Quit)
+            {
+                if (sigs)
+                {
+                    sigs = Wait(sigs | SIGBREAKF_CTRL_C);
+                    if (sigs & SIGBREAKF_CTRL_C)
+                	break;
+                }
+            }
+        }
+        
+        MUI_DisposeObject(app);
+    }
+
+    if(url)
+	FreeVec((APTR) url);
+
+    return 0;
+}
diff -ruN OWB-r1097/WebKitTools/OWBLauncher/CMakeLists.txt OWB-r1097.aros/WebKitTools/OWBLauncher/CMakeLists.txt
--- OWB-r1097/WebKitTools/OWBLauncher/CMakeLists.txt	2009-10-06 09:13:04.000000000 +0100
+++ OWB-r1097.aros/WebKitTools/OWBLauncher/CMakeLists.txt	2017-04-01 14:57:02.745938516 +0100
@@ -43,13 +43,20 @@
     add_executable(owb EXCLUDE_FROM_ALL SDL/main.cpp)
 endif(USE_GRAPHICS_SDL)
 
+if(USE_GRAPHICS_AROS)
+    add_executable(owb EXCLUDE_FROM_ALL AROS/main.cpp)
+endif(USE_GRAPHICS_AROS)
+
 include(Customer/CMakeLists.txt OPTIONAL)
 
 target_link_libraries(owb
-    webkit-owb
+    "-Wl,-whole-archive"
+    webkit-owb 
+    "-Wl,-no-whole-archive"
     ${GRAPHICS_LIBRARIES}
 )
 
+
 if (ENABLE_ORIGYNSUITE)
     target_link_libraries(owb
         origynsuite
